[{"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\index.js":"1","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App.js":"2","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\reportWebVitals.js":"3","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\AllPages.js":"4","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\firebase.js":"5","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App2.js":"6","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\404.js":"7","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\PageHome\\PageHome.js":"8","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\Login.js":"9","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\SignUp\\SignUp.js":"10","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\resetPassword.js":"11","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\await.js":"12","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\profile.js":"13","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Researcher.js":"14","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Manager.js":"15","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\UserPage.js":"16","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\RequestPurchase.js":"17","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UserApproval.js":"18","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UpdatesFirebase.js":"19","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\mngRequestPurchase.js":"20"},{"size":500,"mtime":1618304787313,"results":"21","hashOfConfig":"22"},{"size":324,"mtime":1608643810598,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":3093,"mtime":1611596206889,"results":"25","hashOfConfig":"22"},{"size":3912,"mtime":1618257018002,"results":"26","hashOfConfig":"22"},{"size":1477,"mtime":1609150667296,"results":"27","hashOfConfig":"22"},{"size":798,"mtime":1609226008487,"results":"28","hashOfConfig":"22"},{"size":4924,"mtime":1615679124614,"results":"29","hashOfConfig":"22"},{"size":6511,"mtime":1617817894780,"results":"30","hashOfConfig":"22"},{"size":10668,"mtime":1615835304470,"results":"31","hashOfConfig":"22"},{"size":3287,"mtime":1610912844705,"results":"32","hashOfConfig":"22"},{"size":595,"mtime":1611240405993,"results":"33","hashOfConfig":"22"},{"size":11037,"mtime":1610906970520,"results":"34","hashOfConfig":"22"},{"size":6385,"mtime":1611767288672,"results":"35","hashOfConfig":"22"},{"size":7439,"mtime":1617734177008,"results":"36","hashOfConfig":"22"},{"size":5291,"mtime":1610878186895,"results":"37","hashOfConfig":"22"},{"size":39538,"mtime":1620202300978,"results":"38","hashOfConfig":"22"},{"size":14713,"mtime":1615835304415,"results":"39","hashOfConfig":"22"},{"size":24461,"mtime":1611916800846,"results":"40","hashOfConfig":"22"},{"size":55355,"mtime":1618917386675,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1nqatxe",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\index.js",[],["89","90"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App.js",["91","92"],"// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport LoadPage from \"./AllPages\";\n\nimport {auth} from './firebase/firebase';\nimport {render} from \"@testing-library/react\";\n\n\n\n\n\nfunction App() {\n    return (\n        <div>\n            <LoadPage/>\n        </div>\n    );\n}\n\n\nexport default App;\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\reportWebVitals.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\AllPages.js",["93","94"],"import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport PageHome from './components/pages/PageHome/PageHome';\r\nimport SignUp from './components/pages/SignUp/SignUp';\r\nimport Login from './components/pages/Login/Login';\r\nimport resetPassword from './components/pages/Login/resetPassword';\r\n\r\nimport UserPage from \"./components/pages/Users/UserPage\";\r\nimport App2 from \"./App2\";\r\n\r\nimport Researcher from './components/pages/Users/Researcher/Researcher';\r\n import RequestPurchase from \"./components/pages/Users/Researcher/RequestPurchase\";\r\n\r\n\r\nimport Managers from './components/pages/Users/Manager/Manager';\r\nimport mngRequestPurchase from \"./components/pages/Users/Manager/mngRequestPurchase\";\r\nimport UpdatesFirebase from \"./components/pages/Users/Manager/UpdatesFirebase\";\r\n\r\n\r\nimport UserApproval from \"./components/pages/Users/Manager/UserApproval\";\r\n\r\nimport Profile from \"./components/pages/Users/profile\";\r\nimport Wait from \"./components/pages/Users/await\";\r\nimport notFound from \"./404\";\r\n\r\n\r\n\r\n\r\nfunction LoadPage() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    {/*<Route exact path=\"/\">*/}\r\n                    {/*    <Login />*/}\r\n                    {/*</Route>*/}\r\n\r\n                    <Route exact path=\"/\" component={PageHome} />\r\n                    <Route exact path=\"/wait/:id\" component={Wait} />\r\n                    <Route exact path=\"/Login\" component={Login} />\r\n                    <Route exact path=\"/Login/:404\" component={notFound} />\r\n                    <Route exact path=\"/resetPassword\" component={resetPassword} />\r\n\r\n\r\n                    <Route exact path=\"/SignUp\" component={SignUp} />\r\n                    <Route exact path=\"/SignUp/:404\" component={notFound} />\r\n\r\n                    <Route exact path=\"/App2\" component={App2} />\r\n\r\n                    <Route exact path=\"/User\" component={UserPage} />\r\n                    <Route exact path=\"/User/:404\" component={notFound} />\r\n\r\n                    <Route exact path=\"/Researcher/:id\" component={Researcher} />\r\n                    <Route exact path=\"/Researcher/:id/profile\" component={Profile} />\r\n                    <Route exact path=\"/Researcher/:id/RequestPurchase\" component={RequestPurchase} />\r\n\r\n\r\n                    <Route exact path=\"/Manager/:id\" component={Managers} />\r\n                    {/*<Route exact path=\"/Manager/:id/:404\" component={notFound} />*/}\r\n                    <Route exact path=\"/Manager/:id/UserApproval\" component={UserApproval} />\r\n                    <Route exact path=\"/Manager/:id/profile\" component={Profile} />\r\n                    <Route exact path=\"/Manager/:id/mngRequestPurchase\" component={mngRequestPurchase} />\r\n                    <Route exact path=\"/Manager/:id/UpdatesFirebase\" component={UpdatesFirebase} />\r\n\r\n\r\n\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadPage;\r\n\r\n\r\n{<Route exact path='/home' exact component={PageHome}/>}\r\n// {<Route exact path=\"/login/:id\" component={Home} />}","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\firebase.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App2.js",["95"],"// import logo from './logo.svg';\r\nimport './App.css';\r\nimport {auth} from './firebase/firebase';\r\nimport {render} from \"@testing-library/react\";\r\n\r\n\r\n\r\n\r\n\r\nfunction App2() {\r\n    // var  a=auth.currentUser.email\r\n    console.log(auth.currentUser)\r\n    var a = '';\r\n    if(auth.currentUser)\r\n        a=auth.currentUser.email;\r\n    return (\r\n        <div>\r\n            <h1>\r\n                שלום\r\n                {a}\r\n                סוף בדיקה\r\n            </h1>\r\n            <button onClick={()=>{register()}}>register</button>\r\n            <button onClick={()=>{login()}}>login</button>\r\n        </div>\r\n    );\r\n\r\n    function register()\r\n    {\r\n        auth.createUserWithEmailAndPassword(\"s@gmail.com\", \"123123\").then(res=>{\r\n            if(res)\r\n            {\r\n                console.log(\"sucsses\")\r\n                console.log(\"you register\")\r\n\r\n            }\r\n            else\r\n            {\r\n                console.log( \"empty\")\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    function login()\r\n    {\r\n        auth.signInWithEmailAndPassword(\"s@gmail.com\", \"123123\").then(res=>{\r\n            if(res)\r\n            {\r\n                console.log(\"sucsses\")\r\n                App2();\r\n                return ;\r\n            }\r\n            else\r\n            {\r\n                console.log( \"empty\")\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default App2;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\404.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\PageHome\\PageHome.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\Login.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\SignUp\\SignUp.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\resetPassword.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\await.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\profile.js",["96"],"import React from \"react\";\r\nimport {\r\n    auth,\r\n    getUser, getResearcherData,\r\n    getManagerData, getResearcher, getManager\r\n} from '../../../firebase/firebase'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            fname:'',\r\n            lname:'',\r\n            phone:'',\r\n            type:''\r\n        };\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    if(type==='Tester')\r\n                        type = href[3]\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    await this.getDate()\r\n                    this.loadSpinner(false,\"\")\r\n                    this.setState({loadPage:true})\r\n                    this.render()\r\n                    return\r\n                }\r\n                else\r\n                {\r\n\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    async getDate() {\r\n        var user = (auth.currentUser).uid\r\n        var researcher = await getResearcherData(user)\r\n        var manager = await getManagerData(user)\r\n\r\n        if (researcher) {\r\n            this.setState({\r\n                fname: researcher.fname,\r\n                lname: researcher.lname,\r\n                phone: researcher.phone,\r\n            })\r\n        } else if (manager) {\r\n\r\n            this.setState({\r\n                fname: manager.fname,\r\n                lname: manager.lname,\r\n                phone: manager.phone,\r\n            })\r\n        }\r\n    }\r\n\r\n    async sendData(){\r\n        if(this.state.password && this.state.Vpassword){\r\n            if(this.state.password !== this.state.Vpassword){\r\n                alert(\"הסיסמא ואימות הסיסמא לא תואמים\")\r\n                return\r\n            }\r\n            else if((this.state.password).length < 6){\r\n                alert(\"הסיסמא צריכה להיות יותר מ6 תווים\")\r\n                return\r\n            }\r\n            auth.currentUser.updatePassword(this.state.password)\r\n        }\r\n        else if((!this.state.password && this.state.Vpassword)||(this.state.password && !this.state.Vpassword)){\r\n            alert(\"אנא מלא את כל הנתונים\")\r\n            // console.log(\"this.state.password\",this.state.password)\r\n            // console.log(\"this.state.Vpassword\",this.state.Vpassword)\r\n\r\n            return\r\n        }\r\n\r\n        var user=(auth.currentUser).uid\r\n\r\n        if(this.state.type === \"Researcher\")\r\n        {\r\n            user = await getResearcher(user)\r\n        }\r\n        else if(this.state.type === \"Manager\")\r\n        {\r\n            user = await getManager(user)\r\n        }\r\n        if(this.state.Vpassword)\r\n        {\r\n            var updateStudent = {\r\n                fname:this.state.fname,\r\n                lname:this.state.lname,\r\n                phone:this.state.phone,\r\n                password:this.state.password,\r\n\r\n            }\r\n        }else{\r\n            var updateStudent = {\r\n                fname:this.state.fname,\r\n                lname:this.state.lname,\r\n                phone:this.state.phone,\r\n            }\r\n        }\r\n\r\n\r\n        user.update(updateStudent).then(()=>\r\n        {\r\n            alert(\"הפרטים שונו בהצלחה\")\r\n        })\r\n    }\r\n    loadSpinner(event,massage = \"\"){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n    render() {\r\n        if(this.state.loadPage)\r\n        {\r\n            return (\r\n                <div id=\"instructor\" className=\"sec-design\">\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div align=\"right\">\r\n                    <h2>עדכון פרטים</h2>\r\n                    </div>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"lname\"\r\n                                name=\"lname\"\r\n                                type=\"string\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.lname}\r\n                                onChange={(e) => {\r\n                                    this.setState({lname: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם משפחה\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"fname\"\r\n                                name=\"fname\"\r\n                                type=\"string\"\r\n                                autoComplete=\"off\"\r\n                                autoFocus\r\n                                value={this.state.fname}\r\n                                onChange={(e) => {\r\n                                    this.setState({fname: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם פרטי\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"phone\"\r\n                                name=\"phone\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.phone}\r\n                                onChange={e => {\r\n                                    this.setState({phone: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"פלאפון\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                // value={this.state.password}\r\n                                onChange={(e) => {\r\n                                    this.setState({password: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סיסמא חדשה\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"verifyPassword\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                // value={this.state.password}\r\n                                onChange={(e) => {\r\n                                    this.setState({Vpassword: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"אימות סיסמא\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <button id=\"report-button\" className=\"btn btn-info\" onClick={() => {\r\n                        this.sendData()\r\n                    }}>עדכון פרטים<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n                    <button onClick={() => {\r\n                        this.BackPage()\r\n                    }}>חזרה\r\n                    </button>\r\n\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (<div> {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                                    size={120}\r\n                                    color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }</div>)\r\n    }\r\n\r\n\r\n\r\n    ChangePage(path) {\r\n\r\n        this.props.history.push({\r\n            pathname: `${this.props.location.pathname}/${path}`,\r\n        })\r\n        return\r\n    }\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/${this.state.type}/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport  default  Profile;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Researcher.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Manager.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\UserPage.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\RequestPurchase.js",["97","98","99","100","101","102","103","104"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UserApproval.js",["105"],"import React from 'react'\r\nimport Select from 'react-select'\r\nimport {db, CreateUser, DeleteUser, auth, getUser} from '../../../../firebase/firebase'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport '../Manager/Manager.css';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\nconst options = [\r\n]\r\n\r\n\r\nclass UserApproval extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n\r\n        };\r\n\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.render()\r\n                    this.setState({loadPage:true})\r\n                    this.loadSpinner(false,\"\")\r\n                    this.loadSpinner(true,\"טוען משתמשים להצגה\")\r\n                    const collection = await db.collection('waitforapproval').get()\r\n                    const usersList = [];\r\n                    collection.forEach(doc => {\r\n                        const data = doc.data();\r\n                        if (data)\r\n                            usersList.push(data)\r\n                    });\r\n                    this.setState({users: usersList});\r\n\r\n                    var nameData =  await db.collection(\"Data\").get();\r\n                    nameData.forEach(doc=>{\r\n                        options.push({ value: doc.ref, label: doc.data().name })\r\n                    })\r\n\r\n                    this.loadSpinner(false,\"\")\r\n\r\n                    return\r\n                }\r\n                else\r\n                {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    radio(e,index,user)\r\n    {\r\n\r\n        var researcher = document.getElementById(\"researcher\"+index)\r\n        var manager = document.getElementById(\"managers\"+index)\r\n        var tester = document.getElementById(\"testers\"+index)\r\n\r\n\r\n        user.type = e.target.value;\r\n\r\n\r\n        if(e.target === researcher) {\r\n            researcher.checked=true;\r\n            manager.checked=false;\r\n            tester.checked=false;\r\n\r\n        }\r\n        else if(e.target === manager) {\r\n            researcher.checked=false;\r\n            manager.checked=true;\r\n            tester.checked=false;\r\n\r\n        }\r\n        else {\r\n            researcher.checked=false;\r\n            manager.checked=false;\r\n            tester.checked=true;\r\n        }\r\n    }\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            if (this.state.page === 'menu')\r\n                return (\r\n                    <div>\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                )\r\n            if (this.state.users) {\r\n                if (this.state.users.length === 0) {\r\n                    return (\r\n                        <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                            {!this.state.spinner[0] ? \"\" :\r\n                                <div id='fr'>\r\n                                    {this.state.spinner[1]}\r\n                                    <div className=\"sweet-loading\">\r\n                                        <ClipLoader style={{\r\n                                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                            borderRadius: \"25px\"\r\n                                        }}\r\n                                                    size={120}\r\n                                                    color={\"#123abc\"}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div id=\"name-group\" className=\"form-group\">\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        אין משתמשים חדשים\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <button id=\"feedback-button\" className=\"btn btn-info\" onClick={() => {\r\n                                        this.BackPage()\r\n                                    }}>חזרה לתפריט\r\n                                    </button>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                return (\r\n                    <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div align=\"right\">\r\n                            <h2>אישור משתמשים</h2>\r\n                        </div>\r\n                        <div id=\"name-group\" className=\"form-group\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container\r\n                                          direction=\"row\"\r\n                                          justify=\"space-between\"\r\n                                          alignItems=\"center\"\r\n                                          spacing={2}>\r\n\r\n                                        {this.state.users.map((user, index) => (\r\n                                                <Grid item xs={12} key={index}>\r\n                                                    {this.Card(user, index)}\r\n                                                </Grid>\r\n                                            )\r\n                                        )}\r\n\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <button id=\"feedback-button\" className=\"btn btn-info\" onClick={() => {\r\n                                            this.BackPage()\r\n                                        }}>חזרה לתפריט\r\n                                        </button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div id=\"name-group\" className=\"form-group\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    טוען משתמשים\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {\"טוען נתוני דף\"}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    Card(user,index) {\r\n        return (\r\n            <div className=\"Card\"  dir=\"rtl\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <b>שם מלא: </b>  {user.fname + \" \" + user.lname}<br/>\r\n                        <b> אימייל: </b> {user.email}<br/>\r\n                        <b> טלפון: </b>{user.phone}<br/>\r\n                        {\r\n                            (user.type === \"researcher\") ?\r\n                                (<b> תפקיד: חוקר </b>):(user.type === \"managers\")?\r\n                                (<b> תפקיד: מנהל </b>):(<b> תפקיד: בודק </b>)\r\n\r\n\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3}>\r\n                        <div>\r\n\r\n                            <label>\r\n                                <input id ={\"Researcher\"+index} type=\"radio\" value=\"Researcher\"  onClick={e => {\r\n                                    this.radio(e,index,user)\r\n                                }}/>\r\n                                חוקר\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <div>\r\n\r\n                            <label>\r\n                                <input id ={\"managers\"+index} type=\"radio\" value=\"managers\"  onClick={e => {\r\n                                    this.radio(e,index,user)\r\n                                }}/>\r\n                                מנהל\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        {/*<div className=\"text-below-image\">*/}\r\n                        {/*    <label className=\"container\">אישור בקשה<input type='checkbox'  onChange={e=>{*/}\r\n                        {/*        user.approve = e.target.checked*/}\r\n                        {/*    } }/></label>*/}\r\n                        {/*</div>*/}\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <button\r\n                            style={{backgroundColor: \"rgb(50,248,6)\"}}\r\n                            onClick={()=>{\r\n                                CreateUser(user).then(()=>{\r\n                                    var newUsers = []\r\n                                    this.state.users.forEach((user,i)=>{\r\n                                        if(index!==i)\r\n                                            newUsers.push(user)\r\n                                    })\r\n                                    this.setState({users:newUsers})\r\n                                })\r\n                            }}>אישור בקשה </button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <button\r\n                            style={{backgroundColor: \"rgb(248,6,6)\"}}\r\n                            onClick={()=>{\r\n                                DeleteUser(user.uid).then(()=>{\r\n                                    var newUsers = []\r\n                                    this.state.users.forEach((user,i)=>{\r\n                                        if(index!==i)\r\n                                            newUsers.push(user)\r\n                                    })\r\n                                    this.setState({users:newUsers})\r\n                                })\r\n                            }}>דחיית בקשה</button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Temp${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport  default  UserApproval;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UpdatesFirebase.js",["106","107","108"],"import React, { Component } from \"react\";\r\nimport {db, CreateNewTeam, auth, getUser} from \"../../../../firebase/firebase\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Select from \"react-select\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {CSVLink} from \"react-csv\";\r\n\r\n\r\nvar options = []\r\nvar researchersOptions = []\r\nvar studentsOptions = []\r\nvar emptyresearchersOptions = []\r\nvar emptyStudentsOptions = []\r\nvar emptyTeamOptions = []\r\nvar TeamOptions = []\r\nvar csvresearchersData = []\r\nvar csvmanagersData = []\r\nclass UpdatesFirebase extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state =\r\n            {\r\n                loadPage:false,\r\n                spinner: [true,'נא להמתין הדף נטען'],\r\n                isLoaded:false,\r\n                date:\"\",\r\n                newTeamName:'',\r\n                teamPath:\"\",\r\n                teamName:\"\",\r\n                replaceTeamName:false,\r\n                delete:false,\r\n                showresearchers:false,\r\n                showStudents:false,\r\n                showTeamWithoutresearcher:false,\r\n                showresearcherWithoutTeam:false,\r\n                showStudentWithoutTeam:false,\r\n            }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n    async handleChange(event)\r\n    {\r\n\r\n        var value = event.target.value;\r\n        if(value === '')\r\n            this.setState({newTeamName:value,replaceTeamName:false})\r\n        else\r\n            this.setState({newTeamName:value})\r\n    }\r\n    async deleteTeam(){\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    createCsvFile(users,type)\r\n    {\r\n        if(type ==='researcher')\r\n        {\r\n            csvresearchersData = [\r\n                [\r\n                    \"שם פרטי\",\r\n                    \"שם משפחה\",\r\n                    \"ת.ז\",\r\n                    \"טלפון\",\r\n                    \"מייל\",\r\n                    \"תפקיד\",\r\n                    \"קבוצה\",\r\n                ],\r\n            ];\r\n            users.map(user=>{\r\n                if(user)\r\n                {\r\n                    csvresearchersData.push([\r\n                        user.data().fname,\r\n                        user.data().lname,\r\n                        user.data().ID,\r\n                        user.data().phone.substr(0,3)+\"-\"+user.data().phone.substr(3,user.data().phone.length),\r\n                        user.data().email,\r\n                        user.data().type==='managers'?\"מנהל\":\r\n                            user.data().type==='researcher'?\"חוקר\":\"\",\r\n                        user.data().teamName,\r\n\r\n                    ],)\r\n                }\r\n                return user\r\n            })\r\n        }\r\n        else\r\n        {\r\n            csvmanagersData = [\r\n                [\r\n                    \"שם פרטי\",\r\n                    \"שם משפחה\",\r\n                    \"ת.ז\",\r\n                    \"טלפון\",\r\n                    \"מייל\",\r\n                    \"תפקיד\",\r\n                    \"קבוצה\",\r\n                ],\r\n            ];\r\n            users.map(user=>{\r\n                if(user) {\r\n                    csvmanagersData.push([\r\n                        user.data().fname,\r\n                        user.data().lname,\r\n                        user.data().ID,\r\n                        user.data().phone.substr(0, 2) + \"-\" + user.data().phone.substr(3, user.data().phone.length),\r\n                        user.data().email,\r\n                        user.data().type==='managers'?\"מנהל\":\r\n                            user.data().type==='researcher'?\"חוקר\":\"\",\r\n                        user.data().teamName,\r\n\r\n                    ],)\r\n                }\r\n                return user\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.loadPage)\r\n        {\r\n            return(\r\n                <div id=\"instactorReport\" className=\"sec-design\" dir='rtl'>\r\n\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <input type=\"text\" name=\"team\" placeholder=\"שם משתמש חדש\" onChange={this.handleChange}/>\r\n                        </Grid>\r\n                        <Grid item xs={6} >\r\n                            <button onClick={async ()=>{\r\n                                var newTeam= this.state.newTeamName\r\n                                await CreateNewTeam(newTeam)\r\n                                window.location.reload(true)\r\n                            }}>צור משתמש חדש</button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <button onClick={()=>{\r\n                                if(this.state.newTeamName && this.state.newTeamName.length > 0)\r\n                                    this.setState({replaceTeamName:true})\r\n                                else\r\n                                    alert(\"שם המשתמש החדש לא יכול להיות ריק\")\r\n                            }}>החלף שם למשתמש קיים </button>\r\n                        </Grid>\r\n                        <Grid item xs={8} hidden={!this.state.replaceTeamName}>\r\n                            <Select  placeholder={\" בחר משתמש להחלפת שם \"} options={options} onChange={(e)=>{\r\n                                // console.log(e.label,e.value);\r\n                                this.setState({teamPath:e.value,teamName:e.label})\r\n                            }} required/>\r\n                        </Grid>\r\n                        <Grid item xs={4} hidden={!this.state.replaceTeamName} >\r\n                            <button onClick={async ()=>{\r\n\r\n                                if(this.state.teamName !== this.state.newTeamName) {\r\n                                    await this.setState({replaceTeamName: false})\r\n                                    await this.state.teamPath.update({name:this.state.newTeamName})\r\n                                    alert('בוצע שינוי שם בהצלחה')\r\n                                    window.location.reload(true);\r\n\r\n                                }\r\n                                else\r\n                                {\r\n                                    alert(\"שם זהה לא ניתן לשנות\")\r\n                                }\r\n                            }}>אישור החלפה</button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <button onClick={()=>{\r\n                                this.setState({delete:!this.state.delete})\r\n                                this.deleteTeam()\r\n                            }}>{this.state.delete?'הסתר מחיקת משתמש':'הצג מחיקת משתמש'} </button>\r\n                        </Grid>\r\n                        <Grid item xs={8} hidden={!this.state.delete}>\r\n                            <Select  placeholder={\" בחר משתמש \"} options={options} onChange={(e)=>{\r\n                                // console.log(e.label,e.value);\r\n                                this.setState({teamPath:(e.value).path,teamName:e.label})\r\n                            }} required/>\r\n                        </Grid>\r\n                        <Grid item xs={4} hidden={!this.state.delete} >\r\n                            <button onClick={async ()=>{\r\n                                // console.log(this.state.teamPath)\r\n                                if(this.state.teamPath) {\r\n                                    await this.setState({delete: false})\r\n                                    var d = await db.doc(this.state.teamPath).get()\r\n                                    if(d.data().researcher) {\r\n                                        // console.log(\"team on researcher remove\")\r\n                                        await d.data().researcher.update({\r\n                                            team: null,\r\n                                            teamName: null\r\n                                        })\r\n                                    }\r\n\r\n\r\n                                    var researcher = await  db.collection(\"researcher\").where('teamName','==',this.state.teamName).get()\r\n                                    researcher.docs.forEach(async student=>{\r\n                                        researcher.ref.update({\r\n                                            teamName: null,\r\n                                            team:null\r\n                                        })\r\n                                    })\r\n\r\n                                    await db.doc(this.state.teamPath).delete().then(function() {\r\n                                        alert(\"המשתמש נמחק בהצלחה\");\r\n                                    }).catch(function(error) {\r\n                                        console.error(\"Error removing document: \", error);\r\n                                    });\r\n                                    window.location.reload(true);\r\n\r\n                                }\r\n                                else\r\n                                {\r\n                                    // console.log(\"בחר חוקר\")\r\n                                }\r\n                            }}>מחק</button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <div className=\"text-below-image\">\r\n                                <button onClick={()=>{\r\n                                    this.getAllUsers('researcher')\r\n                                    this.setState({showresearchers:!this.state.showresearchers,researcherTeamName:null,researcherName:null})\r\n\r\n                                }} >{this.state.showresearchers?'הסתר רשימת חוקרים':'הצג רשימת חוקרים'}</button>\r\n                                {\r\n                                    (this.state.showresearchers && this.state.researchers) ? (\r\n                                        <div>\r\n                                            <Grid item xs={12}>\r\n                                                נמצאו:{this.state.researchers.length} חוקרים\r\n                                                <Select placeholder={\" מצא חוקר \"} options={researchersOptions}\r\n                                                        onChange={(e) => {\r\n                                                            // console.log(e.label, e.value);\r\n                                                            this.setState({researchers: [e.value]})\r\n                                                        }}/>\r\n\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <CSVLink\r\n                                                    data={csvresearchersData}\r\n                                                    filename={\"רשימת חוקרים.csv\"}\r\n                                                    className=\"btn btn-primary\"\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <button>\r\n                                                        הורדת פרטי קשר חוקרים\r\n                                                    </button>\r\n                                                </CSVLink>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <CSVLink\r\n                                                    data={csvresearchersData}\r\n                                                    filename={\"רשימת חוקרים.doc\"}\r\n                                                    className=\"btn btn-primary\"\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <button>\r\n                                                         וורד הורדת פרטי קשר חוקרים\r\n                                                    </button>\r\n                                                </CSVLink>\r\n                                            </Grid>\r\n                                        </div> ) : ('')\r\n\r\n                                }\r\n                                {\r\n                                    (!this.state.researchers || !this.state.showresearchers)?'':\r\n                                        this.state.researchers.map((researcher,index) => (\r\n                                            <Grid  item xs={12}  key={index}>\r\n                                                <hr/>\r\n                                                {this.card(researcher.data(),index)}\r\n                                            </Grid >\r\n                                        ))\r\n\r\n\r\n                                }\r\n                            </div>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <button id=\"feedback-button\" className=\"btn btn-info\" onClick={()=>{this.BackPage()}}>חזרה לתפריט</button>\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            )\r\n        } else {\r\n            // console.log(this.state.spinner)\r\n            return (\r\n                <div>\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {\"טוען נתוני דף\"}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>)\r\n        }\r\n    }\r\n\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    async getAllUsers(user) {\r\n        this.loadSpinner(true,\"מיבא נתוני משתמשים\")\r\n        // console.log(\"this.state\",this.state)\r\n        // console.log(\"this.state.researchers\",this.state.researchers)\r\n        // console.log(\"this.state.researchersEmpty\",this.state.researchersEmpty)\r\n        // console.log(\"this.state.Data\",this.state.Data)\r\n        // console.log(\"this.state.TeamEmpty\",this.state.TeamEmpty)\r\n\r\n        if ((user === 'researcher' && this.state.researchers && this.state.researchers > 1) ||\r\n            (user === 'researchersEmpty' && this.state.researchersEmpty && this.state.researchersEmpty > 1) ||\r\n            (user === 'teamEmpty' && this.state.TeamEmpty && this.state.TeamEmpty > 1) ||\r\n            (user === 'Data' && this.state.Data && this.state.Data > 1)) {\r\n            this.loadSpinner(false,\"\")\r\n            return\r\n        }\r\n        // console.log(user)\r\n        var temp = user\r\n        if (user === 'researcher')\r\n            researchersOptions = []\r\n        else if (user === 'researchersEmpty') {\r\n            emptyresearchersOptions = []\r\n            temp = 'researcher'\r\n        } else if (user === 'teamEmpty') {\r\n            emptyTeamOptions = []\r\n            temp = 'Data'\r\n        } else if (user === 'Data') {\r\n            TeamOptions = []\r\n            temp = 'Data'\r\n        }\r\n        var allUsers = []\r\n        await db.collection(temp).get().then(res => {\r\n            res.forEach(res => {\r\n                if (res.data().uid) {\r\n                 if (user === 'researcher') {\r\n                        allUsers.push(res)\r\n                     researchersOptions.push({value: res, label: res.data().fname + ' ' + res.data().lname})\r\n\r\n                    } else if (user === 'researchersEmpty' && !res.data().team) {\r\n                        allUsers.push(res)\r\n                        emptyresearchersOptions.push({value: res, label: res.data().fname + ' ' + res.data().lname})\r\n                    }\r\n                } else if (user === 'teamEmpty' && !res.data().researcher) {\r\n                    allUsers.push(res)\r\n                    emptyTeamOptions.push({value: res, label: res.name})\r\n\r\n                } else if (user === 'Data' && res.data().researcher) {\r\n                    allUsers.push(res)\r\n                    TeamOptions.push({value: res, label: res.name})\r\n                }\r\n            })\r\n        })\r\n        if (user === 'researcher') {\r\n            this.setState({researchers: allUsers})\r\n            this.createCsvFile(allUsers,'researcher')\r\n        }\r\n        else if (user === 'researchersEmpty')\r\n            this.setState({researchersEmpty: allUsers})\r\n        else if (user === 'studentEmpty')\r\n            this.setState({StudentEmpty: allUsers})\r\n        else if (user === 'teamEmpty')\r\n            this.setState({TeamEmpty: allUsers})\r\n        else if (user === 'Data') {\r\n            this.setState({Data: allUsers})\r\n        }\r\n\r\n        this.loadSpinner(false,\"\")\r\n         console.log(\"all users\",allUsers)\r\n    }\r\n\r\n\r\n    async handleSubmit(event)\r\n    {\r\n        this.loadSpinner(true,\"מיבא נתונים\")\r\n        // console.log(this.state.teamPath)\r\n        if(!this.state.date) {\r\n            this.loadSpinner(false,\"\")\r\n            return;\r\n        }\r\n        // console.log(\"in\");\r\n        var team = await db.collection(\"Data\").doc(this.state.teamPath).get();\r\n        // console.log(team)\r\n        this.loadSpinner(false,\"\")\r\n    }\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.render()\r\n                    this.setState({loadPage:true})\r\n                    this.loadSpinner(true,\"מיבא נתונים\")\r\n                    var nameTeams =  await db.collection(\"Data\").get();\r\n                    nameTeams.forEach(doc=>{\r\n                        options.push({ value: doc.ref, label: doc.data().name })\r\n                    })\r\n                    this.loadSpinner(false,\"\")\r\n                    return\r\n                }\r\n                else\r\n                {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    async handleChangeDate(event)\r\n    {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        if(name === 'date')\r\n        {\r\n            this.setState({date:value,viewStudent:false});\r\n            this.state.date=value\r\n        }\r\n    }\r\n\r\n    teamCard(team)\r\n    {\r\n        return(\r\n            <div id=\"name-group\" className=\"form-group\" dir=\"rtl\">\r\n                <div className=\"report\" id=\"report\">\r\n                    <div>\r\n                        <h4> שם החוקר: {team.name} </h4>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={8}>\r\n                                <Select  placeholder={\" שיבוץ חוקר \"} options={emptyresearchersOptions} onChange={(e)=>{\r\n                                    // console.log(e.label,e.value);\r\n                                    this.setState({emtpyresearcherTeamPath:e.value,emtpyresearcherTeamName:e.label})\r\n                                }} />\r\n                            </Grid>\r\n                            <Grid item xs={4} hidden={!this.state.emtpyresearcherTeamPath}>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    card(user,index)\r\n    {\r\n        return(\r\n            <div id=\"name-group\" className=\"form-group\" dir=\"rtl\">\r\n                <div className=\"report\" id=\"report\">\r\n                    <div>\r\n\r\n                        <h4> שם: {user.fname+' '+ user.lname} </h4>\r\n                        <h4> טלפון: {user.phone}</h4>\r\n                        <h4> אימייל: {user.email}</h4>\r\n                        <h4> ת.ז: {user.ID}</h4>\r\n                        <h4> חוקר: {user.teamName}</h4>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={8}>\r\n                                {/*<Select  placeholder={\" החלף חוקר \"} options={options} onChange={(e)=>{*/}\r\n                                {/*    // console.log(e.label,e.value);*/}\r\n                                {/*    user.optionss = e.label*/}\r\n                                {/*    var teamPath = this.state.researcherTeamPath*/}\r\n                                {/*    var teamName = this.state.researcherTeamName*/}\r\n                                {/*    if(teamPath && teamName) {*/}\r\n                                {/*        if (index < teamPath.length) {*/}\r\n                                {/*            teamPath[index] = e.value*/}\r\n                                {/*            teamName[index] = e.label*/}\r\n                                {/*        }*/}\r\n                                {/*        else*/}\r\n                                {/*        {*/}\r\n                                {/*            teamPath.push(e.value)*/}\r\n                                {/*            teamName.push(e.label)*/}\r\n                                {/*        }*/}\r\n                                {/*    }*/}\r\n                                {/*    else*/}\r\n                                {/*    {*/}\r\n                                {/*        teamPath = [e.value]*/}\r\n                                {/*        teamName = [e.label]*/}\r\n\r\n                                {/*    }*/}\r\n                                {/*    this.setState({researcherTeamPath:teamPath,researcherTeamName:teamName})*/}\r\n                                {/*}} />*/}\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            // pathname: `/${page}/${this.state.user.id}`,\r\n            pathname: `/Temp${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default UpdatesFirebase;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\mngRequestPurchase.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":6,"column":9,"nodeType":"149","messageId":"150","endLine":6,"endColumn":13},{"ruleId":"147","severity":1,"message":"151","line":7,"column":9,"nodeType":"149","messageId":"150","endLine":7,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":77,"column":1,"nodeType":"154","messageId":"155","endLine":77,"endColumn":57},{"ruleId":"156","severity":1,"message":"157","line":77,"column":28,"nodeType":"158","endLine":77,"endColumn":33},{"ruleId":"147","severity":1,"message":"151","line":4,"column":9,"nodeType":"149","messageId":"150","endLine":4,"endColumn":15},{"ruleId":"159","severity":1,"message":"160","line":130,"column":17,"nodeType":"149","messageId":"161","endLine":130,"endColumn":30},{"ruleId":"147","severity":1,"message":"162","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":15},{"ruleId":"147","severity":1,"message":"163","line":3,"column":17,"nodeType":"149","messageId":"150","endLine":3,"endColumn":27},{"ruleId":"147","severity":1,"message":"164","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":16},{"ruleId":"147","severity":1,"message":"165","line":109,"column":13,"nodeType":"149","messageId":"150","endLine":109,"endColumn":14},{"ruleId":"147","severity":1,"message":"166","line":254,"column":17,"nodeType":"149","messageId":"150","endLine":254,"endColumn":21},{"ruleId":"147","severity":1,"message":"167","line":360,"column":17,"nodeType":"149","messageId":"150","endLine":360,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":818,"column":37,"nodeType":"170","endLine":825,"endColumn":39},{"ruleId":"171","severity":1,"message":"172","line":822,"column":52,"nodeType":"173","endLine":822,"endColumn":62},{"ruleId":"147","severity":1,"message":"174","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"175","line":11,"column":5,"nodeType":"149","messageId":"150","endLine":11,"endColumn":20},{"ruleId":"147","severity":1,"message":"176","line":13,"column":5,"nodeType":"149","messageId":"150","endLine":13,"endColumn":25},{"ruleId":"147","severity":1,"message":"177","line":436,"column":13,"nodeType":"149","messageId":"150","endLine":436,"endColumn":17},{"ruleId":"147","severity":1,"message":"178","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":20},{"ruleId":"147","severity":1,"message":"179","line":222,"column":15,"nodeType":"149","messageId":"150","endLine":222,"endColumn":19},{"ruleId":"147","severity":1,"message":"180","line":227,"column":15,"nodeType":"149","messageId":"150","endLine":227,"endColumn":22},{"ruleId":"147","severity":1,"message":"181","line":252,"column":24,"nodeType":"149","messageId":"150","endLine":252,"endColumn":26},{"ruleId":"147","severity":1,"message":"182","line":252,"column":27,"nodeType":"149","messageId":"150","endLine":252,"endColumn":30},{"ruleId":"147","severity":1,"message":"183","line":252,"column":31,"nodeType":"149","messageId":"150","endLine":252,"endColumn":34},{"ruleId":"147","severity":1,"message":"184","line":252,"column":35,"nodeType":"149","messageId":"150","endLine":252,"endColumn":37},{"ruleId":"147","severity":1,"message":"185","line":252,"column":38,"nodeType":"149","messageId":"150","endLine":252,"endColumn":41},{"ruleId":"147","severity":1,"message":"186","line":252,"column":42,"nodeType":"149","messageId":"150","endLine":252,"endColumn":45},{"ruleId":"147","severity":1,"message":"187","line":252,"column":46,"nodeType":"149","messageId":"150","endLine":252,"endColumn":48},{"ruleId":"147","severity":1,"message":"188","line":252,"column":49,"nodeType":"149","messageId":"150","endLine":252,"endColumn":52},{"ruleId":"147","severity":1,"message":"189","line":252,"column":53,"nodeType":"149","messageId":"150","endLine":252,"endColumn":56},{"ruleId":"147","severity":1,"message":"190","line":252,"column":57,"nodeType":"149","messageId":"150","endLine":252,"endColumn":59},{"ruleId":"147","severity":1,"message":"191","line":252,"column":60,"nodeType":"149","messageId":"150","endLine":252,"endColumn":63},{"ruleId":"147","severity":1,"message":"192","line":252,"column":64,"nodeType":"149","messageId":"150","endLine":252,"endColumn":67},{"ruleId":"147","severity":1,"message":"193","line":252,"column":68,"nodeType":"149","messageId":"150","endLine":252,"endColumn":71},{"ruleId":"147","severity":1,"message":"194","line":252,"column":72,"nodeType":"149","messageId":"150","endLine":252,"endColumn":76},{"ruleId":"147","severity":1,"message":"195","line":252,"column":77,"nodeType":"149","messageId":"150","endLine":252,"endColumn":81},{"ruleId":"147","severity":1,"message":"179","line":352,"column":19,"nodeType":"149","messageId":"150","endLine":352,"endColumn":23},{"ruleId":"147","severity":1,"message":"180","line":357,"column":19,"nodeType":"149","messageId":"150","endLine":357,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":762,"column":25,"nodeType":"170","endLine":762,"endColumn":92},{"ruleId":"168","severity":1,"message":"169","line":784,"column":26,"nodeType":"170","endLine":784,"endColumn":93},{"ruleId":"196","severity":1,"message":"197","line":988,"column":51,"nodeType":"198","messageId":"199","endLine":988,"endColumn":53},{"ruleId":"196","severity":1,"message":"197","line":999,"column":73,"nodeType":"198","messageId":"199","endLine":999,"endColumn":75},{"ruleId":"196","severity":1,"message":"197","line":1009,"column":52,"nodeType":"198","messageId":"199","endLine":1009,"endColumn":54},{"ruleId":"147","severity":1,"message":"200","line":1070,"column":13,"nodeType":"149","messageId":"150","endLine":1070,"endColumn":18},{"ruleId":"147","severity":1,"message":"165","line":1073,"column":13,"nodeType":"149","messageId":"150","endLine":1073,"endColumn":14},{"ruleId":"196","severity":1,"message":"197","line":1081,"column":13,"nodeType":"198","messageId":"199","endLine":1081,"endColumn":15},{"ruleId":"196","severity":1,"message":"197","line":1081,"column":41,"nodeType":"198","messageId":"199","endLine":1081,"endColumn":43},{"ruleId":"196","severity":1,"message":"197","line":1115,"column":17,"nodeType":"198","messageId":"199","endLine":1115,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":1115,"column":45,"nodeType":"198","messageId":"199","endLine":1115,"endColumn":47},{"ruleId":"159","severity":1,"message":"201","line":1122,"column":17,"nodeType":"149","messageId":"161","endLine":1122,"endColumn":31},{"ruleId":"147","severity":1,"message":"202","line":1222,"column":13,"nodeType":"149","messageId":"150","endLine":1222,"endColumn":17},{"ruleId":"147","severity":1,"message":"166","line":1259,"column":17,"nodeType":"149","messageId":"150","endLine":1259,"endColumn":21},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-redeclare","'updateStudent' is already defined.","redeclared","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'ReactDOM' is defined but never used.","'e' is assigned a value but never used.","'name' is assigned a value but never used.","'teamName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Select' is defined but never used.","'studentsOptions' is assigned a value but never used.","'emptyStudentsOptions' is assigned a value but never used.","'team' is assigned a value but never used.","'ReactToPrint' is defined but never used.","'data' is assigned a value but never used.","'columns' is assigned a value but never used.","'q6' is defined but never used.","'q60' is defined but never used.","'q61' is defined but never used.","'q7' is defined but never used.","'q70' is defined but never used.","'q71' is defined but never used.","'q8' is defined but never used.","'q80' is defined but never used.","'q81' is defined but never used.","'q9' is defined but never used.","'q90' is defined but never used.","'q91' is defined but never used.","'q10' is defined but never used.","'q100' is defined but never used.","'q101' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user1' is assigned a value but never used.","'formResearcher' is already defined.","'path' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]