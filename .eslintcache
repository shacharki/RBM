[{"C:\\Users\\שחר מימרן\\RBM\\rbm\\src\\index.js":"1","C:\\Users\\שחר מימרן\\RBM\\rbm\\src\\App.js":"2","C:\\Users\\שחר מימרן\\RBM\\rbm\\src\\firebase\\firebase.js":"3","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\index.js":"4","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App.js":"5","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\firebase.js":"6","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\reportWebVitals.js":"7","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\AllPages.js":"8","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\PageHome\\PageHome.js":"9","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App2.js":"10","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\Login.js":"11","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\UserPage.js":"12","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\SignUp\\SignUp.js":"13","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Researcher.js":"14","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Manager.js":"15","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\404.js":"16","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\await.js":"17","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UserApproval.js":"18","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\profile.js":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":1189,"mtime":1608469950942,"results":"22","hashOfConfig":"21"},{"size":475,"mtime":1608468812506,"results":"23","hashOfConfig":"21"},{"size":500,"mtime":1608728092157,"results":"24","hashOfConfig":"25"},{"size":324,"mtime":1608643810598,"results":"26","hashOfConfig":"25"},{"size":3485,"mtime":1610900186695,"results":"27","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"25"},{"size":2435,"mtime":1610715442869,"results":"29","hashOfConfig":"25"},{"size":2900,"mtime":1610877647113,"results":"30","hashOfConfig":"25"},{"size":1477,"mtime":1609150667296,"results":"31","hashOfConfig":"25"},{"size":6509,"mtime":1610820414012,"results":"32","hashOfConfig":"25"},{"size":5291,"mtime":1610878186895,"results":"33","hashOfConfig":"25"},{"size":9056,"mtime":1610879132189,"results":"34","hashOfConfig":"25"},{"size":6379,"mtime":1610910700293,"results":"35","hashOfConfig":"25"},{"size":7104,"mtime":1610910700257,"results":"36","hashOfConfig":"25"},{"size":798,"mtime":1609226008487,"results":"37","hashOfConfig":"25"},{"size":592,"mtime":1609226008435,"results":"38","hashOfConfig":"25"},{"size":14686,"mtime":1610877978189,"results":"39","hashOfConfig":"25"},{"size":11037,"mtime":1610906970520,"results":"40","hashOfConfig":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xys7hj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1nqatxe",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\שחר מימרן\\RBM\\rbm\\src\\index.js",[],"C:\\Users\\שחר מימרן\\RBM\\rbm\\src\\App.js",["86"],"C:\\Users\\שחר מימרן\\RBM\\rbm\\src\\firebase\\firebase.js",[],["87","88"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\index.js",[],["89","90"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App.js",["91","92"],"// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport LoadPage from \"./AllPages\";\n\nimport {auth} from './firebase/firebase';\nimport {render} from \"@testing-library/react\";\n\n\n\n\n\nfunction App() {\n    return (\n        <div>\n            <LoadPage/>\n        </div>\n    );\n}\n\n\nexport default App;\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\firebase.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\reportWebVitals.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\AllPages.js",["93","94"],"import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport PageHome from './components/pages/PageHome/PageHome';\r\nimport SignUp from './components/pages/SignUp/SignUp';\r\nimport Login from './components/pages/Login/Login';\r\nimport UserPage from \"./components/pages/Users/UserPage\";\r\nimport App2 from \"./App2\";\r\n\r\nimport Researcher from './components/pages/Users/Researcher/Researcher';\r\nimport Managers from './components/pages/Users/Manager/Manager';\r\n\r\nimport UserApproval from \"./components/pages/Users/Manager/UserApproval\";\r\n\r\nimport Profile from \"./components/pages/Users/profile\";\r\nimport Wait from \"./components/pages/Users/await\";\r\nimport notFound from \"./404\";\r\n\r\n\r\n//import resetPassword from './components/pages/Login/resetPassword';\r\n\r\n\r\nfunction LoadPage() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    {/*<Route exact path=\"/\">*/}\r\n                    {/*    <Login />*/}\r\n                    {/*</Route>*/}\r\n\r\n                    <Route exact path=\"/\" component={PageHome} />\r\n                    <Route exact path=\"/wait/:id\" component={Wait} />\r\n                    <Route exact path=\"/Login\" component={Login} />\r\n                    <Route exact path=\"/Login/:404\" component={notFound} />\r\n\r\n                    <Route exact path=\"/SignUp\" component={SignUp} />\r\n                    <Route exact path=\"/SignUp/:404\" component={notFound} />\r\n\r\n                    <Route exact path=\"/App2\" component={App2} />\r\n\r\n                    <Route exact path=\"/User\" component={UserPage} />\r\n                    <Route exact path=\"/User/:404\" component={notFound} />\r\n\r\n                    <Route exact path=\"/Researcher/:id\" component={Researcher} />\r\n                    <Route exact path=\"/Researcher/:id/profile\" component={Profile} />\r\n\r\n\r\n                    <Route exact path=\"/Manager/:id\" component={Managers} />\r\n                    {/*<Route exact path=\"/Manager/:id/:404\" component={notFound} />*/}\r\n                    <Route exact path=\"/Manager/:id/UserApproval\" component={UserApproval} />\r\n                    <Route exact path=\"/Manager/:id/profile\" component={Profile} />\r\n\r\n\r\n\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadPage;\r\n\r\n\r\n{<Route exact path='/home' exact component={PageHome}/>}\r\n// {<Route exact path=\"/login/:id\" component={Home} />}","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\PageHome\\PageHome.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App2.js",["95"],"// import logo from './logo.svg';\r\nimport './App.css';\r\nimport {auth} from './firebase/firebase';\r\nimport {render} from \"@testing-library/react\";\r\n\r\n\r\n\r\n\r\n\r\nfunction App2() {\r\n    // var  a=auth.currentUser.email\r\n    console.log(auth.currentUser)\r\n    var a = '';\r\n    if(auth.currentUser)\r\n        a=auth.currentUser.email;\r\n    return (\r\n        <div>\r\n            <h1>\r\n                שלום\r\n                {a}\r\n                סוף בדיקה\r\n            </h1>\r\n            <button onClick={()=>{register()}}>register</button>\r\n            <button onClick={()=>{login()}}>login</button>\r\n        </div>\r\n    );\r\n\r\n    function register()\r\n    {\r\n        auth.createUserWithEmailAndPassword(\"s@gmail.com\", \"123123\").then(res=>{\r\n            if(res)\r\n            {\r\n                console.log(\"sucsses\")\r\n                console.log(\"you register\")\r\n\r\n            }\r\n            else\r\n            {\r\n                console.log( \"empty\")\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    function login()\r\n    {\r\n        auth.signInWithEmailAndPassword(\"s@gmail.com\", \"123123\").then(res=>{\r\n            if(res)\r\n            {\r\n                console.log(\"sucsses\")\r\n                App2();\r\n                return ;\r\n            }\r\n            else\r\n            {\r\n                console.log( \"empty\")\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default App2;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\Login.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\UserPage.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\SignUp\\SignUp.js",["96","97","98","99"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"react-select\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {db, RegisterUser,CreateNewUser} from \"../../../firebase/firebase\";\r\nimport './SignUp.css'\r\n\r\n\r\nconst options = [\r\n]\r\nlet op = false\r\n\r\nclass SignUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fname:'',\r\n            lname:'',\r\n            email:'',\r\n            ID: '',\r\n            phone:'',\r\n            type:'',\r\n            password:'',\r\n\r\n        };\r\n\r\n\r\n    }\r\n\r\n\r\n    async onRegister() {\r\n        try {\r\n\r\n            if(!this.state.fname||!this.state.lname||!this.state.email||!this.state.phone) {\r\n                alert(\"נא למלא את כל השדות החובה\")\r\n                return\r\n            }\r\n            await this.setState({approve:false})\r\n            // console.log(\"this.state.email\"+this.state.email)\r\n            var newUser = await CreateNewUser(this.state.email,this.state.phone,this.state.password)\r\n\r\n            this.setState({uid:newUser.user.uid})\r\n\r\n            await RegisterUser(newUser.user,this.state)\r\n\r\n            alert(\"ההרשמה בוצעה בהצלחה נא להמתין לאישור מנהל\")\r\n            this.props.history.push({\r\n                pathname: `/`,\r\n            })\r\n        } catch(error) {\r\n            alert(error.message)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"instructor\" className=\"sec-design\" dir='rtl'>\r\n                <h2>טופס הרשמה</h2>\r\n                <div id=\"instructor_menu\" className=\"form-design\" name=\"student_form\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"fname\"\r\n                                name=\"fname\"\r\n                                type=\"string\"\r\n                                autoComplete=\"off\"\r\n                                autoFocus\r\n                                value={this.state.fname}\r\n                                onChange={e => {\r\n                                    this.setState({fname:e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"שם פרטי\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"lname\"\r\n                                name=\"lname\"\r\n                                type=\"string\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.lname}\r\n                                onChange={e => {\r\n                                    this.setState({lname:e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"שם משפחה\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"phone\"\r\n                                name=\"phone\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.phone}\r\n                                onChange={e => {\r\n                                    this.setState({phone:e.target.value})\r\n                                    this.setState({password:e.target.value})\r\n\r\n                                }}\r\n                                variant=\"standard\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"פלאפון\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"ID\"\r\n                                name=\"ID\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.ID}\r\n                                onChange={e => {\r\n                                    this.setState({ID:e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תעודת זהות\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.email}\r\n                                onChange={e => {\r\n                                    this.setState({email:e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <div>\r\n\r\n                                <label>\r\n                                    <input type=\"radio\" value=\"researcher\" checked={this.state.type==='researcher'}  onChange={e =>\r\n                                        this.setState({type:e.target.value})}/>\r\n                                    חוקר\r\n                                </label>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <div>\r\n\r\n                                <label>\r\n                                    <input type=\"radio\" value=\"managers\" checked={this.state.type==='managers'} onChange={e =>\r\n                                        this.setState({type:e.target.value})}/>\r\n                                    מנהל\r\n                                </label>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <div>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    id=\"registerBtn\"\r\n                                    onClick={()=>{this.onRegister()}}\r\n                                    register=\"true\">\r\n\r\n                                    הרשמה\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <div>\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    style={{style: {margin: '10px'}}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    id=\"LoginBtn\"\r\n                                    component={Link}\r\n                                    to=\"/Login\">\r\n                                    כבר יש לך משתמש? התחברות\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <div>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    id=\"HomeBtn\"\r\n                                    component={Link}\r\n                                    to=\"/\">\r\n                                    חזרה לעמוד הראשי\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport  default  SignUp;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Researcher.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Manager.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\404.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\await.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UserApproval.js",["100"],"import React from 'react'\r\nimport Select from 'react-select'\r\nimport {db, CreateUser, DeleteUser, auth, getUser} from '../../../../firebase/firebase'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport '../Manager/Manager.css';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\nconst options = [\r\n]\r\n\r\n\r\nclass UserApproval extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n\r\n        };\r\n\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.render()\r\n                    this.setState({loadPage:true})\r\n                    this.loadSpinner(false,\"\")\r\n                    this.loadSpinner(true,\"טוען משתמשים להצגה\")\r\n                    const collection = await db.collection('waitforapproval').get()\r\n                    const usersList = [];\r\n                    collection.forEach(doc => {\r\n                        const data = doc.data();\r\n                        if (data)\r\n                            usersList.push(data)\r\n                    });\r\n                    this.setState({users: usersList});\r\n\r\n                    var nameTeams =  await db.collection(\"Teams\").get();\r\n                    nameTeams.forEach(doc=>{\r\n                        options.push({ value: doc.ref, label: doc.data().name })\r\n                    })\r\n\r\n                    this.loadSpinner(false,\"\")\r\n\r\n                    return\r\n                }\r\n                else\r\n                {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    radio(e,index,user)\r\n    {\r\n\r\n        var researcher = document.getElementById(\"researcher\"+index)\r\n        var manager = document.getElementById(\"managers\"+index)\r\n        var tester = document.getElementById(\"testers\"+index)\r\n\r\n\r\n        user.type = e.target.value;\r\n\r\n\r\n        if(e.target === researcher) {\r\n            researcher.checked=true;\r\n            manager.checked=false;\r\n            tester.checked=false;\r\n\r\n        }\r\n        else if(e.target === manager) {\r\n            researcher.checked=false;\r\n            manager.checked=true;\r\n            tester.checked=false;\r\n\r\n        }\r\n        else {\r\n            researcher.checked=false;\r\n            manager.checked=false;\r\n            tester.checked=true;\r\n        }\r\n    }\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            if (this.state.page === 'menu')\r\n                return (\r\n                    <div>\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                )\r\n            if (this.state.users) {\r\n                if (this.state.users.length === 0) {\r\n                    return (\r\n                        <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                            {!this.state.spinner[0] ? \"\" :\r\n                                <div id='fr'>\r\n                                    {this.state.spinner[1]}\r\n                                    <div className=\"sweet-loading\">\r\n                                        <ClipLoader style={{\r\n                                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                            borderRadius: \"25px\"\r\n                                        }}\r\n                                                    size={120}\r\n                                                    color={\"#123abc\"}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div id=\"name-group\" className=\"form-group\">\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        אין משתמשים חדשים\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <button id=\"feedback-button\" className=\"btn btn-info\" onClick={() => {\r\n                                        this.BackPage()\r\n                                    }}>חזרה לתפריט\r\n                                    </button>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                return (\r\n                    <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div align=\"right\">\r\n                            <h2>אישור משתמשים</h2>\r\n                        </div>\r\n                        <div id=\"name-group\" className=\"form-group\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container\r\n                                          direction=\"row\"\r\n                                          justify=\"space-between\"\r\n                                          alignItems=\"center\"\r\n                                          spacing={2}>\r\n\r\n                                        {this.state.users.map((user, index) => (\r\n                                                <Grid item xs={12} key={index}>\r\n                                                    {this.Card(user, index)}\r\n                                                </Grid>\r\n                                            )\r\n                                        )}\r\n\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <button id=\"feedback-button\" className=\"btn btn-info\" onClick={() => {\r\n                                            this.BackPage()\r\n                                        }}>חזרה לתפריט\r\n                                        </button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div id=\"name-group\" className=\"form-group\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    טוען משתמשים\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {\"טוען נתוני דף\"}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    Card(user,index) {\r\n        return (\r\n            <div className=\"Card\"  dir=\"rtl\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <b>שם מלא: </b>  {user.fname + \" \" + user.lname}<br/>\r\n                        <b> אימייל: </b> {user.email}<br/>\r\n                        <b> טלפון: </b>{user.phone}<br/>\r\n                        {\r\n                            (user.type === \"researcher\") ?\r\n                                (<b> תפקיד: חוקר </b>):(user.type === \"managers\")?\r\n                                (<b> תפקיד: מנהל </b>):(<b> תפקיד: בודק </b>)\r\n\r\n\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3}>\r\n                        <div>\r\n\r\n                            <label>\r\n                                <input id ={\"Researcher\"+index} type=\"radio\" value=\"Researcher\"  onClick={e => {\r\n                                    this.radio(e,index,user)\r\n                                }}/>\r\n                                חוקר\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <div>\r\n\r\n                            <label>\r\n                                <input id ={\"managers\"+index} type=\"radio\" value=\"managers\"  onClick={e => {\r\n                                    this.radio(e,index,user)\r\n                                }}/>\r\n                                מנהל\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <div className=\"text-below-image\">\r\n                            <label className=\"container\">אישור בקשה<input type='checkbox'  onChange={e=>{\r\n                                user.approve = e.target.checked\r\n                            } }/></label>\r\n                        </div>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <button\r\n                            style={{backgroundColor: \"rgb(50,248,6)\"}}\r\n                            onClick={()=>{\r\n                                CreateUser(user).then(()=>{\r\n                                    var newUsers = []\r\n                                    this.state.users.forEach((user,i)=>{\r\n                                        if(index!==i)\r\n                                            newUsers.push(user)\r\n                                    })\r\n                                    this.setState({users:newUsers})\r\n                                })\r\n                            }}>אישור בקשה </button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <button\r\n                            style={{backgroundColor: \"rgb(248,6,6)\"}}\r\n                            onClick={()=>{\r\n                                DeleteUser(user.uid).then(()=>{\r\n                                    var newUsers = []\r\n                                    this.state.users.forEach((user,i)=>{\r\n                                        if(index!==i)\r\n                                            newUsers.push(user)\r\n                                    })\r\n                                    this.setState({users:newUsers})\r\n                                })\r\n                            }}>דחיית בקשה</button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Temp${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport  default  UserApproval;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\profile.js",["101"],{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":12},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"110"},{"ruleId":"108","replacedBy":"111"},{"ruleId":"102","severity":1,"message":"112","line":6,"column":9,"nodeType":"104","messageId":"105","endLine":6,"endColumn":13},{"ruleId":"102","severity":1,"message":"113","line":7,"column":9,"nodeType":"104","messageId":"105","endLine":7,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":65,"column":1,"nodeType":"116","messageId":"117","endLine":65,"endColumn":57},{"ruleId":"118","severity":1,"message":"119","line":65,"column":28,"nodeType":"120","endLine":65,"endColumn":33},{"ruleId":"102","severity":1,"message":"113","line":4,"column":9,"nodeType":"104","messageId":"105","endLine":4,"endColumn":15},{"ruleId":"102","severity":1,"message":"121","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"102","severity":1,"message":"122","line":7,"column":9,"nodeType":"104","messageId":"105","endLine":7,"endColumn":11},{"ruleId":"102","severity":1,"message":"123","line":11,"column":7,"nodeType":"104","messageId":"105","endLine":11,"endColumn":14},{"ruleId":"102","severity":1,"message":"124","line":13,"column":5,"nodeType":"104","messageId":"105","endLine":13,"endColumn":7},{"ruleId":"102","severity":1,"message":"121","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":130,"column":17,"nodeType":"104","messageId":"127","endLine":130,"endColumn":30},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["128"],"no-negated-in-lhs",["129"],["128"],["129"],"'auth' is defined but never used.","'render' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Select' is defined but never used.","'db' is defined but never used.","'options' is assigned a value but never used.","'op' is assigned a value but never used.","no-redeclare","'updateStudent' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]