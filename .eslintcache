[{"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\index.js":"1","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App.js":"2","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\reportWebVitals.js":"3","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\AllPages.js":"4","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\firebase.js":"5","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App2.js":"6","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\404.js":"7","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\PageHome\\PageHome.js":"8","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\Login.js":"9","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\SignUp\\SignUp.js":"10","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\resetPassword.js":"11","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\await.js":"12","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\profile.js":"13","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Researcher.js":"14","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Manager.js":"15","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\UserPage.js":"16","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\RequestPurchase.js":"17","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UserApproval.js":"18","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UpdatesFirebase.js":"19","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\mngRequestPurchase.js":"20","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\DropzoneFiles.js":"21","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ScientificReport.js":"22","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\financialReports.js":"23","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\DropzoneFiles1.js":"24","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ResearchBudgets.js":"25","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ChatResearcher.js":"26","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ChatR.js":"27","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\DropzoneFiles2.js":"28","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Channel.js":"29","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Loader.js":"30","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Message.js":"31","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\hooks.js":"32"},{"size":500,"mtime":1618304787313,"results":"33","hashOfConfig":"34"},{"size":324,"mtime":1608643810598,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":3987,"mtime":1620894130664,"results":"37","hashOfConfig":"34"},{"size":4400,"mtime":1620641024432,"results":"38","hashOfConfig":"34"},{"size":1477,"mtime":1609150667296,"results":"39","hashOfConfig":"34"},{"size":798,"mtime":1609226008487,"results":"40","hashOfConfig":"34"},{"size":5173,"mtime":1620641024247,"results":"41","hashOfConfig":"34"},{"size":6511,"mtime":1617817894780,"results":"42","hashOfConfig":"34"},{"size":10668,"mtime":1615835304470,"results":"43","hashOfConfig":"34"},{"size":3287,"mtime":1610912844705,"results":"44","hashOfConfig":"34"},{"size":595,"mtime":1611240405993,"results":"45","hashOfConfig":"34"},{"size":11037,"mtime":1610906970520,"results":"46","hashOfConfig":"34"},{"size":7602,"mtime":1622535628078,"results":"47","hashOfConfig":"34"},{"size":7500,"mtime":1620645576341,"results":"48","hashOfConfig":"34"},{"size":5291,"mtime":1610878186895,"results":"49","hashOfConfig":"34"},{"size":37392,"mtime":1620926335387,"results":"50","hashOfConfig":"34"},{"size":14713,"mtime":1615835304415,"results":"51","hashOfConfig":"34"},{"size":24461,"mtime":1611916800846,"results":"52","hashOfConfig":"34"},{"size":55355,"mtime":1618917386675,"results":"53","hashOfConfig":"34"},{"size":6018,"mtime":1620925610469,"results":"54","hashOfConfig":"34"},{"size":4934,"mtime":1620641024247,"results":"55","hashOfConfig":"34"},{"size":4933,"mtime":1620641024428,"results":"56","hashOfConfig":"34"},{"size":6017,"mtime":1620925999549,"results":"57","hashOfConfig":"34"},{"size":140088,"mtime":1620930563081,"results":"58","hashOfConfig":"34"},{"size":8720,"mtime":1622537970762,"results":"59","hashOfConfig":"34"},{"size":3733,"mtime":1622031131392,"results":"60","hashOfConfig":"34"},{"size":6018,"mtime":1620925469830,"results":"61","hashOfConfig":"34"},{"size":4144,"mtime":1622535793887,"results":"62","hashOfConfig":"34"},{"size":856,"mtime":1622535798254,"results":"63","hashOfConfig":"34"},{"size":1954,"mtime":1622535803423,"results":"64","hashOfConfig":"34"},{"size":5434,"mtime":1622537284999,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1nqatxe",{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\index.js",[],["148","149"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App.js",["150","151"],"// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport LoadPage from \"./AllPages\";\n\nimport {auth} from './firebase/firebase';\nimport {render} from \"@testing-library/react\";\n\n\n\n\n\nfunction App() {\n    return (\n        <div>\n            <LoadPage/>\n        </div>\n    );\n}\n\n\nexport default App;\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\reportWebVitals.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\AllPages.js",["152","153"],"import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport PageHome from './components/pages/PageHome/PageHome';\r\nimport SignUp from './components/pages/SignUp/SignUp';\r\nimport Login from './components/pages/Login/Login';\r\nimport resetPassword from './components/pages/Login/resetPassword';\r\n\r\nimport UserPage from \"./components/pages/Users/UserPage\";\r\nimport App2 from \"./App2\";\r\n\r\nimport Researcher from './components/pages/Users/Researcher/Researcher';\r\n import RequestPurchase from \"./components/pages/Users/Researcher/RequestPurchase\";\r\nimport ScientificReport from \"./components/pages/Users/Researcher/ScientificReport\";\r\nimport ChatResearcher from \"./components/pages/Users/Researcher/ChatResearcher\";\r\nimport ChatR from \"./components/pages/Users/Researcher/ChatR\";\r\n\r\n\r\nimport Managers from './components/pages/Users/Manager/Manager';\r\nimport mngRequestPurchase from \"./components/pages/Users/Manager/mngRequestPurchase\";\r\nimport UpdatesFirebase from \"./components/pages/Users/Manager/UpdatesFirebase\";\r\nimport financialReports from \"./components/pages/Users/Manager/financialReports\";\r\nimport ResearchBudgets from \"./components/pages/Users/Manager/ResearchBudgets\";\r\n\r\n\r\nimport UserApproval from \"./components/pages/Users/Manager/UserApproval\";\r\n\r\nimport Profile from \"./components/pages/Users/profile\";\r\nimport Wait from \"./components/pages/Users/await\";\r\nimport notFound from \"./404\";\r\n\r\n\r\n\r\n\r\nfunction LoadPage() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    {/*<Route exact path=\"/\">*/}\r\n                    {/*    <Login />*/}\r\n                    {/*</Route>*/}\r\n\r\n                    <Route exact path=\"/\" component={PageHome} />\r\n                    <Route exact path=\"/wait/:id\" component={Wait} />\r\n                    <Route exact path=\"/Login\" component={Login} />\r\n                    <Route exact path=\"/Login/:404\" component={notFound} />\r\n                    <Route exact path=\"/resetPassword\" component={resetPassword} />\r\n\r\n\r\n                    <Route exact path=\"/SignUp\" component={SignUp} />\r\n                    <Route exact path=\"/SignUp/:404\" component={notFound} />\r\n\r\n                    <Route exact path=\"/App2\" component={App2} />\r\n\r\n                    <Route exact path=\"/User\" component={UserPage} />\r\n                    <Route exact path=\"/User/:404\" component={notFound} />\r\n\r\n                    <Route exact path=\"/Researcher/:id\" component={Researcher} />\r\n                    <Route exact path=\"/Researcher/:id/profile\" component={Profile} />\r\n                    <Route exact path=\"/Researcher/:id/RequestPurchase\" component={RequestPurchase} />\r\n                    <Route exact path=\"/Researcher/:id/ScientificReport\" component={ScientificReport} />\r\n                    <Route exact path=\"/Researcher/:id/ChatResearcher\" component={ChatResearcher} />\r\n                    <Route exact path=\"/Researcher/:id/ChatR\" component={ChatR} />\r\n\r\n\r\n\r\n                    <Route exact path=\"/Manager/:id\" component={Managers} />\r\n                    {/*<Route exact path=\"/Manager/:id/:404\" component={notFound} />*/}\r\n                    <Route exact path=\"/Manager/:id/UserApproval\" component={UserApproval} />\r\n                    <Route exact path=\"/Manager/:id/profile\" component={Profile} />\r\n                    <Route exact path=\"/Manager/:id/mngRequestPurchase\" component={mngRequestPurchase} />\r\n                    <Route exact path=\"/Manager/:id/UpdatesFirebase\" component={UpdatesFirebase} />\r\n                    <Route exact path=\"/Manager/:id/financialReports\" component={financialReports} />\r\n                    <Route exact path=\"/Manager/:id/ResearchBudgets\" component={ResearchBudgets} />\r\n\r\n\r\n\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadPage;\r\n\r\n\r\n{<Route exact path='/home' exact component={PageHome}/>}\r\n// {<Route exact path=\"/login/:id\" component={Home} />}","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\firebase.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App2.js",["154"],"// import logo from './logo.svg';\r\nimport './App.css';\r\nimport {auth} from './firebase/firebase';\r\nimport {render} from \"@testing-library/react\";\r\n\r\n\r\n\r\n\r\n\r\nfunction App2() {\r\n    // var  a=auth.currentUser.email\r\n    console.log(auth.currentUser)\r\n    var a = '';\r\n    if(auth.currentUser)\r\n        a=auth.currentUser.email;\r\n    return (\r\n        <div>\r\n            <h1>\r\n                שלום\r\n                {a}\r\n                סוף בדיקה\r\n            </h1>\r\n            <button onClick={()=>{register()}}>register</button>\r\n            <button onClick={()=>{login()}}>login</button>\r\n        </div>\r\n    );\r\n\r\n    function register()\r\n    {\r\n        auth.createUserWithEmailAndPassword(\"s@gmail.com\", \"123123\").then(res=>{\r\n            if(res)\r\n            {\r\n                console.log(\"sucsses\")\r\n                console.log(\"you register\")\r\n\r\n            }\r\n            else\r\n            {\r\n                console.log( \"empty\")\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    function login()\r\n    {\r\n        auth.signInWithEmailAndPassword(\"s@gmail.com\", \"123123\").then(res=>{\r\n            if(res)\r\n            {\r\n                console.log(\"sucsses\")\r\n                App2();\r\n                return ;\r\n            }\r\n            else\r\n            {\r\n                console.log( \"empty\")\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default App2;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\404.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\PageHome\\PageHome.js",["155","156","157","158","159"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './PageHome.css'\r\nimport {auth} from \"../../../firebase/firebase\";\r\nimport * as docx from \"docx\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\nimport {Footer, Header, Paragraph} from \"docx\";\r\n\r\n\r\nclass PageHome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({user: user})\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"instructor\" className=\"sec-design\" dir='rtl'>\r\n                <div id=\"instructor_menu\" className=\"form-design\" name=\"student_form\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <div>\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    style={{style: {margin: '10px'}}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    id=\"LoginBtn\"\r\n                                    onClick={() => {\r\n                                        if (this.state.user) {\r\n                                            this.props.history.push({\r\n                                                pathname: '/User',\r\n                                                data: this.state.user // your data array of objects\r\n                                            })\r\n                                        } else {\r\n                                            this.props.history.push({\r\n                                                pathname: '/Login',\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    כניסת משתמשים\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <div>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    id=\"registerBtn\"\r\n                                    component={Link}\r\n                                    to=\"/SignUp\">\r\n                                    הרשמה\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {/*<div>*/}\r\n                            {/*    <Button*/}\r\n                            {/*        type=\"submit\"*/}\r\n                            {/*        fullWidth*/}\r\n                            {/*        variant=\"contained\"*/}\r\n                            {/*        onClick={() => {*/}\r\n                            {/*          this.generate()*/}\r\n                            {/*        }}>*/}\r\n                            {/*        הורדת קובץ*/}\r\n                            {/*    </Button>*/}\r\n                            {/*</div>*/}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // generate() {\r\n    //     const doc = new docx.Document();\r\n    //\r\n    //\r\n    //     doc.addSection({\r\n    //         properties: {},\r\n    //         headers: {\r\n    //             default: new Header({\r\n    //                 // children: [new Paragraph(\"Header text\")],\r\n    //                 children: [ new Paragraph(\"image1\")],\r\n    //             }),\r\n    //         },\r\n    //         footers: {\r\n    //             default: new Footer({\r\n    //                 children: [new Paragraph(\"Footer text\")],\r\n    //             }),\r\n    //         },\r\n    //         children: [\r\n    //             new Paragraph({\r\n    //                 children: [\r\n    //                     new docx.TextRun(\"Hello World\"),\r\n    //                     new docx.TextRun({\r\n    //                         text: \"Foo Bar\",\r\n    //                         bold: true,\r\n    //                     }),\r\n    //\r\n    //                 ],\r\n    //\r\n    //             }),\r\n    //             new Paragraph({\r\n    //                 children: [\r\n    //                     new docx.TextRun({\r\n    //                         text: \"\\tGithub is the best\",\r\n    //                         bold: true,\r\n    //                     }),\r\n    //\r\n    //                 ],\r\n    //\r\n    //             }),\r\n    //\r\n    //         ],\r\n    //     });\r\n    //\r\n    //     docx.Packer.toBlob(doc).then(blob => {\r\n    //         console.log(blob);\r\n    //         saveAs(blob, \"example.doc\");\r\n    //         console.log(\"Document created successfully\");\r\n    //\r\n    //\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport  default  PageHome;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\Login.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\SignUp\\SignUp.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\resetPassword.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\await.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\profile.js",["160"],"import React from \"react\";\r\nimport {\r\n    auth,\r\n    getUser, getResearcherData,\r\n    getManagerData, getResearcher, getManager\r\n} from '../../../firebase/firebase'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            fname:'',\r\n            lname:'',\r\n            phone:'',\r\n            type:''\r\n        };\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    if(type==='Tester')\r\n                        type = href[3]\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    await this.getDate()\r\n                    this.loadSpinner(false,\"\")\r\n                    this.setState({loadPage:true})\r\n                    this.render()\r\n                    return\r\n                }\r\n                else\r\n                {\r\n\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    async getDate() {\r\n        var user = (auth.currentUser).uid\r\n        var researcher = await getResearcherData(user)\r\n        var manager = await getManagerData(user)\r\n\r\n        if (researcher) {\r\n            this.setState({\r\n                fname: researcher.fname,\r\n                lname: researcher.lname,\r\n                phone: researcher.phone,\r\n            })\r\n        } else if (manager) {\r\n\r\n            this.setState({\r\n                fname: manager.fname,\r\n                lname: manager.lname,\r\n                phone: manager.phone,\r\n            })\r\n        }\r\n    }\r\n\r\n    async sendData(){\r\n        if(this.state.password && this.state.Vpassword){\r\n            if(this.state.password !== this.state.Vpassword){\r\n                alert(\"הסיסמא ואימות הסיסמא לא תואמים\")\r\n                return\r\n            }\r\n            else if((this.state.password).length < 6){\r\n                alert(\"הסיסמא צריכה להיות יותר מ6 תווים\")\r\n                return\r\n            }\r\n            auth.currentUser.updatePassword(this.state.password)\r\n        }\r\n        else if((!this.state.password && this.state.Vpassword)||(this.state.password && !this.state.Vpassword)){\r\n            alert(\"אנא מלא את כל הנתונים\")\r\n            // console.log(\"this.state.password\",this.state.password)\r\n            // console.log(\"this.state.Vpassword\",this.state.Vpassword)\r\n\r\n            return\r\n        }\r\n\r\n        var user=(auth.currentUser).uid\r\n\r\n        if(this.state.type === \"Researcher\")\r\n        {\r\n            user = await getResearcher(user)\r\n        }\r\n        else if(this.state.type === \"Manager\")\r\n        {\r\n            user = await getManager(user)\r\n        }\r\n        if(this.state.Vpassword)\r\n        {\r\n            var updateStudent = {\r\n                fname:this.state.fname,\r\n                lname:this.state.lname,\r\n                phone:this.state.phone,\r\n                password:this.state.password,\r\n\r\n            }\r\n        }else{\r\n            var updateStudent = {\r\n                fname:this.state.fname,\r\n                lname:this.state.lname,\r\n                phone:this.state.phone,\r\n            }\r\n        }\r\n\r\n\r\n        user.update(updateStudent).then(()=>\r\n        {\r\n            alert(\"הפרטים שונו בהצלחה\")\r\n        })\r\n    }\r\n    loadSpinner(event,massage = \"\"){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n    render() {\r\n        if(this.state.loadPage)\r\n        {\r\n            return (\r\n                <div id=\"instructor\" className=\"sec-design\">\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div align=\"right\">\r\n                    <h2>עדכון פרטים</h2>\r\n                    </div>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"lname\"\r\n                                name=\"lname\"\r\n                                type=\"string\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.lname}\r\n                                onChange={(e) => {\r\n                                    this.setState({lname: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם משפחה\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"fname\"\r\n                                name=\"fname\"\r\n                                type=\"string\"\r\n                                autoComplete=\"off\"\r\n                                autoFocus\r\n                                value={this.state.fname}\r\n                                onChange={(e) => {\r\n                                    this.setState({fname: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם פרטי\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"phone\"\r\n                                name=\"phone\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.phone}\r\n                                onChange={e => {\r\n                                    this.setState({phone: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"פלאפון\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                // value={this.state.password}\r\n                                onChange={(e) => {\r\n                                    this.setState({password: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סיסמא חדשה\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"verifyPassword\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                // value={this.state.password}\r\n                                onChange={(e) => {\r\n                                    this.setState({Vpassword: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"אימות סיסמא\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <button id=\"report-button\" className=\"btn btn-info\" onClick={() => {\r\n                        this.sendData()\r\n                    }}>עדכון פרטים<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n                    <button onClick={() => {\r\n                        this.BackPage()\r\n                    }}>חזרה\r\n                    </button>\r\n\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (<div> {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                                    size={120}\r\n                                    color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }</div>)\r\n    }\r\n\r\n\r\n\r\n    ChangePage(path) {\r\n\r\n        this.props.history.push({\r\n            pathname: `${this.props.location.pathname}/${path}`,\r\n        })\r\n        return\r\n    }\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/${this.state.type}/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport  default  Profile;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Researcher.js",["161","162","163","164","165","166","167"],"import React from \"react\";\r\nimport {auth,GetFormDownload, getUser, signOut} from '../../../../firebase/firebase'\r\nimport {NextPage} from \"../UserPage\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {useDropzone} from 'react-dropzone'\r\nimport './Researcher.css'\r\nimport * as url from \"url\";\r\nimport MyDropzone from \"./DropzoneFiles.js\";\r\nimport AcceptMaxFiles from \"./DropzoneFiles.js\";\r\nimport DropzoneFiles  from \"./DropzoneFiles.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nclass Researcher extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadPage:false,\r\n            user: props.location,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n        };\r\n    }\r\n\r\n\r\n\r\n    loadSpinner(event,massage = \"\"){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(type === \"wait\")\r\n                {\r\n                    alert('המנהל עדיין לא אישר את הבקשה')\r\n                    window.location.href = '/Login';\r\n                    return\r\n                }\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.loadSpinner(false,\"\")\r\n                    this.setState({loadPage:true})\r\n                    this.render()\r\n                    return\r\n                }\r\n                else\r\n                {\r\n\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    loadTempPage(page)\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    async  logout() {\r\n        //מסך טעינה\r\n        await auth.signOut();\r\n        window.location.href = '/';\r\n        //סיום מסך טעינה\r\n    }\r\n\r\n    chooseLayout(page)\r\n    {\r\n        this.setState({\r\n            page:page,\r\n        })\r\n        this.render()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            return (\r\n                <div id=\"instructor\" className=\"sec-design\" dir=\"rtl\">\r\n\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <h2> שלום לחוקר {this.state.user.displayName}</h2>\r\n                    {/*<form id=\"instructor_menu\" className=\"form-design\" name=\"student_form\" method=\"POST\">*/}\r\n                    <button id=\"RequestPurchase\" className=\"btn btn-info\" onClick={() => {\r\n                        NextPage(this.props, \"RequestPurchase\", this.state.user)\r\n                    }}>בקשה לרכישה<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                    <button id=\"BalanceMode\" className=\"btn btn-info\" onClick={ () => {\r\n\r\n                        // NextPage(this.props, \"\", this.state.user)\r\n                    }}>מצב הוצאות ויתרה<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                    <button id=\"repor-button\" className=\"btn btn-info\" onClick={() => {\r\n                        NextPage(this.props, \"ScientificReport\", this.state.user)\r\n                    }}>דוחות מדעים<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n\r\n                    {/*<button id=\"ScientificReport\" className=\"btn btn-info\" onClick={async ()=>{*/}\r\n                    {/*    var file = await GetFormDownload()*/}\r\n                    {/*    const link = document.createElement('a');*/}\r\n                    {/*    link.href = file*/}\r\n                    {/*    document.body.appendChild(link);*/}\r\n                    {/*    link.click();*/}\r\n                    {/*    document.body.removeChild(link);*/}\r\n\r\n\r\n                    {/*}}>הורדת טופס דוח מדעי למילוי<span*/}\r\n                    {/*    className=\"fa fa-arrow-right\"></span></button>*/}\r\n\r\n                    <button id=\"ChatR\" className=\"btn btn-info\" onClick={() => {\r\n                         NextPage(this.props, \"ChatResearcher\", this.state.user)\r\n                    }}>צ'אט למנהל<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                    <button id=\"repor-button\" className=\"btn btn-info\" onClick={() => {\r\n                        NextPage(this.props, \"Profile\", this.state.user)\r\n                    }}>עדכון פרטים או סיסמא<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n                    <button id=\"logout\" className=\"btn btn-info\" onClick={() => {\r\n                        signOut()\r\n                    }}>התנתק\r\n                    </button>\r\n\r\n                    {/*<Grid item xs={5}*/}\r\n                    {/*      container*/}\r\n                    {/*      direction=\"column\"*/}\r\n                    {/*      justify=\"flex-start\"*/}\r\n                    {/*      alignItems=\"flex-start\"*/}\r\n                    {/*>*/}\r\n                    {/*    <DropzoneFiles/>*/}\r\n                    {/*</Grid>*/}\r\n                    {/*</form>*/}\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (<div> {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                            //   css={override}\r\n                                    size={120}\r\n                                    color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }</div>)\r\n    }\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/${page}/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport  default  Researcher;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Manager.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\UserPage.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\RequestPurchase.js",["168","169","170","171","172","173","174","175"],"import React,{ Fragment } from \"react\";\r\nimport {auth, db, getUser} from '../../../../firebase/firebase';\r\nimport { Radio, RadioGroup} from \"@material-ui/core\";\r\nimport './Researcher.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport firebase from \"firebase\";\r\n//import {storage} from \"./firebase\";\r\n\r\nimport ReactDOM from 'react-dom'\r\nimport SignatureCanvas from 'react-signature-canvas'\r\nimport DropzoneFiles2 from \"../Researcher/DropzoneFiles2\";\r\n\r\nclass RequestPurchase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            page:'menu',\r\n            user: props.location,\r\n            error:false,\r\n            loading: true,\r\n            rule:\"Manager\",\r\n            prevDate:'',\r\n            imgUrl: \"\",\r\n\r\n            viewResearcher: false,\r\n            date:\"\",\r\n            form : {\r\n                date:\"\",\r\n                team:\"\",\r\n                name:\"\",\r\n            }\r\n        };\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        // this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.approvResearcher = this.approvResearcher.bind(this)\r\n\r\n        this.RequestPurchase = this.RequestPurchase.bind(this)\r\n\r\n\r\n    }\r\n\r\n    parser(date)\r\n    {\r\n        var year=''\r\n        var month = ''\r\n        var day = ''\r\n        var j=0;\r\n        for(var i =0; i<date.length; i++)\r\n        {\r\n            if(j===0 && date[i]!=='-')\r\n            {\r\n                year+=date[i]\r\n            }\r\n            else if(j===1 && date[i]!=='-')\r\n            {\r\n                month+=date[i]\r\n            }\r\n            else if(j===2 && date[i]!=='-')\r\n            {\r\n                day+=date[i]\r\n            }\r\n            else\r\n                j++\r\n\r\n        }\r\n        year = parseInt(year)\r\n        month=parseInt(month)\r\n        day= parseInt(day)\r\n        return {year,month,day}\r\n    }\r\n\r\n    loadSpinner(event,massage = \"\"){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n    save() {\r\n        const imgUrl = this.canvas.toDataURL(\"image/png\");\r\n        console.log(imgUrl)\r\n        var form = this.state.form\r\n        form[\"signature\"] = imgUrl;\r\n        this.setState({form:form})\r\n        this.setState({ imgUrl: imgUrl });\r\n\r\n    }\r\n    reset() {\r\n        this.canvas.clear();\r\n    }\r\n    canvas = {\r\n        clear: () => {},\r\n        toDataURL: (param) => {\r\n            return \"\";\r\n        },\r\n    };\r\n    async handleChange(event)\r\n    {\r\n        var form=''\r\n\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        var e = event.target\r\n        // console.log(\"name2\",name)\r\n        // console.log(\"value2\",value)\r\n        // console.log(\"e2\",e)\r\n\r\n        if(name === 'date' && event.target.value!=='' )\r\n        {\r\n            // console.log(\"1111111111111\")\r\n\r\n            this.loadSpinner(true,\"טוען נתוני חוקר\")\r\n            var formResearcher = await db.collection(\"researcher\").doc(auth.currentUser.uid).collection(\"request\").doc(event.target.value).get()\r\n\r\n            if(formResearcher.data())\r\n            {\r\n                // console.log(\"222222222222222\")\r\n                this.setState({form:formResearcher.data().form})\r\n            }\r\n            else\r\n            {\r\n                // console.log(\"33333333333333\")\r\n                var researcherData= await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n                form ={}\r\n                form[name] = value;\r\n                form['name']=researcherData.data().fname+' '+researcherData.data().lname;\r\n                // form['team']=researcherData.data().teamName\r\n                this.setState({form:form})\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // console.log(\"44444444444444\")\r\n            form = this.state.form\r\n            form[name] = value;\r\n            this.setState({form:form})\r\n        }\r\n        this.loadSpinner(false)\r\n\r\n    }\r\n\r\n\r\n    async handleSubmit(event)\r\n    {\r\n        if(!this.state.date) {\r\n            return;\r\n        }\r\n        if(this.state.date === this.state.prevDate) {\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            return ;\r\n        }\r\n        this.loadSpinner(true,\"מעדכן נתונים חדשים\")\r\n        this.setState({prevDate:this.state.date});\r\n        // console.log(\"in\");\r\n        var request = (await db.collection(\"researcher\").doc(auth.currentUser.uid).get()).data().type;\r\n        const collection = await db.collection('researcher').where(\"request\",\"==\",request).get()\r\n        const researchers = [];\r\n        const date = this.state.date\r\n        const collectionPromisesTeam = collection.docs.map( async function(doc) {\r\n            var ref =await db.collection(\"researcher\").doc(doc.id).collection(\"request\").doc(date).get()\r\n            var user = await db.collection(\"researcher\").doc(doc.id).get()\r\n            return [ref,user]\r\n\r\n        })\r\n\r\n        Promise.all(collectionPromisesTeam).then(res => {\r\n            // console.log(\"end prommis\");\r\n            res.forEach(doc=>{\r\n                var approv = false;\r\n                var Request = ''\r\n                if(doc[0].exists) {\r\n                    approv = true;\r\n                    Request = doc[0].data().RequestPurchase;\r\n                }\r\n                var data = doc[1].data();\r\n                var ref = doc[1].id;\r\n                researchers.push({data,approv,ref,Request})\r\n            })\r\n            let i;\r\n            // console.log(researchers.length)\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            for (i=0;i<researchers.length;i++)\r\n            {\r\n                if(!this.state.researchers)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n                else if(researchers[i].approv!==this.state.researchers[i].approv)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n\r\n            }\r\n            this.loadSpinner(false)\r\n        });\r\n\r\n\r\n    }\r\n    loadPage(event){\r\n        this.setState({loading:event})\r\n    }\r\n\r\n    async sendRequest(form){\r\n        console.log(\"form2\",form)\r\n        console.log(\"form.date2\",form.date)\r\n\r\n        this.loadSpinner(true,\"שליחת הבקשה\")\r\n        var path = auth.currentUser.uid\r\n        try{\r\n            var researcher = await db.collection(\"researcher\").doc(path)\r\n            // console.log(\"form1\",form)\r\n            var newDate = await researcher.collection(\"request\").doc(form.date);\r\n            // console.log(\"form.date\",form.date)\r\n            // console.log(\"form\",form)\r\n\r\n            newDate.set({\r\n                form: form,\r\n                date:form.date,\r\n            }).then(async ()=>{\r\n                await this.addDataToTeam(researcher,form.date);\r\n                alert(\"הטופס נשלח בהצלחה\")\r\n                this.loadSpinner(false)\r\n                window.location.reload(true);\r\n\r\n            })\r\n\r\n        }catch(error) {\r\n            console.log(\"err2\")\r\n\r\n            alert(error.message)\r\n            this.loadSpinner(false)\r\n        }\r\n    }\r\n    async addDataToTeam(researcher,date)\r\n    {\r\n        console.log(\"researcher2\",researcher)\r\n        console.log(\"date2\",date)\r\n\r\n        var user = firebase.auth().currentUser;\r\n\r\n        var formResearcher = (await researcher.collection('request').doc(date).get()).ref;\r\n        try{\r\n            var team = (await researcher.get()).data();\r\n            var name =(team.fname + \" \"+team.lname);\r\n            // console.log(\"name2\",name)\r\n            // console.log(\"team2\",team)\r\n\r\n            var teamCollection = await db.collection(\"Data\").doc(team.team.id)\r\n            // var Collection = await teamCollection.collection(\"Requests\").doc(name)\r\n            var newDate = await teamCollection.collection(\"Requests\").doc(date)\r\n            // var newDate = Collection.collection(date).doc();\r\n            var doc =  await newDate.get()\r\n            var {year,month,day} = this.parser(date)\r\n            var fullDate = new Date()\r\n            fullDate.setTime(0)\r\n            fullDate.setFullYear(year,month-1,day)\r\n\r\n            // console.log(\"team.team.id\",team.team.id)\r\n            // console.log(\"teamCollection\",teamCollection)\r\n            // console.log(\"newDate\",newDate)\r\n            // console.log(\"fullDate\",fullDate)\r\n            // console.log(\"formResearcher\",formResearcher)\r\n\r\n            // var temp = newDate.set({\r\n            //     date:fullDate,\r\n            //     RequestResearcher: formResearcher,\r\n            //     nameResearcher: team.fname + \" \"+team.lname,\r\n            //\r\n            // })\r\n            //\r\n            // // db.collection(\"Data\").doc().set({name})\r\n            // await db.collection(\"Data\").doc().collection(name).set(temp).then(()=>{\r\n            //         alert(\"הדוח נוסף\")\r\n            //         return true;\r\n            //     }\r\n            // ).catch((e)=>{\r\n            //     alert(\"הדוח לא הוסף\")\r\n            //     return false;\r\n            // })\r\n\r\n\r\n            if(!doc.exists){\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.set({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                    nameResearcher: team.fname + \" \"+team.lname,\r\n                    uid: user.uid\r\n\r\n                })\r\n            }\r\n            else {\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.update({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                    uid: user.uid\r\n\r\n                })\r\n            }\r\n        }catch(error) {\r\n            alert(error.message)\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                // console.log(\"in1\")\r\n                var type = await getUser(user)\r\n                // console.log(type)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    // console.log(\"in2\")\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else\r\n                {\r\n                    // console.log(\"in3\")\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n            // console.log(\"in4\")\r\n            var teamName = await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n            // if(!teamName.data().teamName)\r\n            // {\r\n            //     alert(\"אינך משוייכ/ת לקבוצה יש לפנות למנהל\")\r\n            //     this.loadSpinner(false)\r\n            //     this.BackPage()\r\n            // }\r\n            this.loadSpinner(false,\"\")\r\n            this.setState({loadPage:true})\r\n            this.render()\r\n\r\n        })\r\n\r\n    }\r\n\r\n    approvResearcher(researcher)\r\n    {\r\n\r\n        var researchers =  this.state.researchers;\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].approv = !researchers[i].approv;\r\n                this.setState({researchers:researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    RequestPurchase(event,researcher)\r\n    {\r\n        var researchers = this.state.researchers;\r\n        // console.log(event.target.value);\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].Request = event.target.value\r\n                this.setState({researchers: researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            return (\r\n                <div id=\"ResearcherRequest\" className=\"sec-design\">\r\n\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div dir=\"rtl\">\r\n                        <label id=\"date\" className=\"title-input\">תאריך הבקשה:</label>\r\n                        <input type=\"date\" id=\"insert-date\" name=\"date\" onChange={(e) => this.handleChange(e)}\r\n                               required/>\r\n\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q1i\"\r\n                                name=\"q1\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q1}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם הספק\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <h4>המזמין: מכון שמיר למחקר - ע\"ר</h4>\r\n\r\n                        <div id=\"name-group\">\r\n                            <label id=\"QL\" className=\"title-input\">טלפון המכון: 04-6123901. פקס: 04-6961930</label>\r\n                            <br/>\r\n                        </div>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q2i\"\r\n                                name=\"q2\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q2}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"נייד\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q3i\"\r\n                                name=\"q3\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q3}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"טופס הזמנה מס'\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q4i\"\r\n                                name=\"q4\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q4}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"מצורפת הצעת מחיר מס':\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <h4>פירוט ההצעה:</h4>\r\n                        <table border=\"1\">\r\n\r\n                            <tr>\r\n                                <th>מק\"ט</th>\r\n                                <th>תיאור הפריט</th>\r\n                                <th>מחיר במט\"ח</th>\r\n                                <th>מחיר יח' בש\"ח</th>\r\n                                <th>מס' יחידות</th>\r\n                                <th>מחיר בש\"ח</th>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q5\" id=\"q5i\" placeholder={''}\r\n                                               value={this.state.form.q5 ? (this.state.form.q5) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q6\" id=\"q6i\" placeholder={''}\r\n                                           value={this.state.form.q6 ? (this.state.form.q6) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                           value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q50\" id=\"q50i\" placeholder={''}\r\n                                               value={this.state.form.q50 ? (this.state.form.q50) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q60\" id=\"q60i\" placeholder={''}\r\n                                           value={this.state.form.q60 ? (this.state.form.q60) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                           value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q51\" id=\"q51i\" placeholder={''}\r\n                                               value={this.state.form.q51 ? (this.state.form.q51) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q61\" id=\"q61i\" placeholder={''}\r\n                                           value={this.state.form.q61 ? (this.state.form.q61) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                           value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                                <br/>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                        {/*<div id=\"name-group\">*/}\r\n                        {/*    <label id=\"Q102L\" className=\"title-input\">סה\"כ כולל מע\"מ: </label>*/}\r\n                        {/*    <input type=\"text\" name=\"q102\" id=\"q102i\" placeholder={'התשובה שלך'}*/}\r\n                        {/*           value={this.state.form.q102 ? (this.state.form.q102) : ('')} onChange={(e) => {*/}\r\n                        {/*        this.handleChange(e)*/}\r\n                        {/*    }} required/>*/}\r\n                        {/*</div>*/}\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q11i\"\r\n                                name=\"q11\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q11}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סה'כ כולל מע'מ\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <h4>אבקש לספק לנו את המוצרים הבאים:</h4>\r\n\r\n                        <div id=\"name-group\">\r\n                            <label id=\"QL\" className=\"title-input\">המעבדה ממוקמת במבנה החדש של מכון שמיר למחקר (קומה 2), צמוד למכללת אוהלו</label>\r\n                            <br/>\r\n                        </div>\r\n\r\n                        <div id=\"name-group\">\r\n                            <label id=\"QL\" className=\"title-input\">תנאי תשלום: שוטף + 30</label>\r\n                            <br/>\r\n                        </div>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q12i\"\r\n                                name=\"q12\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q12}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"נא לתאם את קבלת המשלוח עם\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <h4>לשימוש משרד המכון בלבד:</h4>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q13i\"\r\n                                name=\"q13\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q13}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"מטרת הרכישה\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q14i\"\r\n                                name=\"q14\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q14}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תקציב המחקר\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q15i\"\r\n                                name=\"q15\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q15}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"מס' מחקר\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <div id=\"name-group\">\r\n                            <label id=\"QL\" className=\"title-input\">שם החוקר: {this.state.user.displayName}</label>\r\n                            <br/>\r\n                        </div>\r\n\r\n                        {/*<Grid item xs={6}>*/}\r\n                        {/*    <TextField*/}\r\n                        {/*        inputProps={{style: {textAlign: 'center'}}}*/}\r\n                        {/*        id=\"q16i\"*/}\r\n                        {/*        name=\"q16\"*/}\r\n                        {/*        type=\"tel\"*/}\r\n                        {/*        autoComplete=\"off\"*/}\r\n                        {/*        value={this.state.q16}*/}\r\n                        {/*        onChange={(e) => {*/}\r\n                        {/*            this.handleChange(e)*/}\r\n                        {/*        }}*/}\r\n                        {/*        variant=\"standard\"*/}\r\n                        {/*        fullWidth*/}\r\n                        {/*        label=\"חתימת החוקר\"*/}\r\n                        {/*    />*/}\r\n                        {/*</Grid>*/}\r\n                        <br/>\r\n\r\n\r\n                        <Fragment>\r\n                            <div className=\"main\">\r\n                                <p>חתימת החוקר</p>\r\n                                <div style={{backgroundColor: \"#a0a0a0\", width: 400,\r\n                                    height: 200,}}>\r\n                                    <SignatureCanvas\r\n\r\n                                        penColor=\"green\"\r\n                                        canvasProps={{\r\n                                            width: 400,\r\n                                            height: 200,\r\n                                            className: \"write-name-canvas\",\r\n                                        }}\r\n                                        ref={(ref) => {\r\n                                            this.canvas = ref;\r\n                                        }}\r\n                                        id=\"q16i\"\r\n                                        name=\"q16\"\r\n                                        autoComplete=\"off\"\r\n                                        value={this.state.q16}\r\n                                        onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }}\r\n                                        variant=\"standard\"\r\n                                        fullWidth\r\n                                        label=\"חתימת החוקר\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <img\r\n                                        className=\"write-name-img\"\r\n                                        src={\r\n                                            this.state.imgUrl === \"\"\r\n                                                ? (this.state.imgUrl = \"\")\r\n                                                : this.state.imgUrl\r\n                                        }\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                <div className=\"write-name-operation\">\r\n                                    <button onClick={() => this.reset()}>Reset</button>\r\n                                    <button onClick={() => this.save()}>Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n\r\n\r\n                        <br/>\r\n\r\n                    </div>\r\n                    <div>\r\n                    <p>העלאת נספחי הבקשה</p>\r\n\r\n                    <Grid item xs={5}\r\n                          container\r\n                          direction=\"column\"\r\n                          justify=\"flex-start\"\r\n                          alignItems=\"flex-start\"\r\n                    >\r\n                        <DropzoneFiles2/>\r\n                    </Grid>\r\n                    </div>\r\n\r\n\r\n                    <button id=\"sendData\" className=\"btn btn-info\" onClick={() => {\r\n                        this.save();\r\n                        this.sendRequest(this.state.form)\r\n                    }}>שלח בקשה\r\n                    </button>\r\n                    <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                        this.loadPage()\r\n                        this.BackPage()\r\n                    }}>חזור לתפריט\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (<div> {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                            //   css={override}\r\n                                    size={120}\r\n                                    color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }</div>)\r\n    }\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Researcher/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport  default  RequestPurchase;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UserApproval.js",["176"],"import React from 'react'\r\nimport Select from 'react-select'\r\nimport {db, CreateUser, DeleteUser, auth, getUser} from '../../../../firebase/firebase'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport '../Manager/Manager.css';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\nconst options = [\r\n]\r\n\r\n\r\nclass UserApproval extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n\r\n        };\r\n\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.render()\r\n                    this.setState({loadPage:true})\r\n                    this.loadSpinner(false,\"\")\r\n                    this.loadSpinner(true,\"טוען משתמשים להצגה\")\r\n                    const collection = await db.collection('waitforapproval').get()\r\n                    const usersList = [];\r\n                    collection.forEach(doc => {\r\n                        const data = doc.data();\r\n                        if (data)\r\n                            usersList.push(data)\r\n                    });\r\n                    this.setState({users: usersList});\r\n\r\n                    var nameData =  await db.collection(\"Data\").get();\r\n                    nameData.forEach(doc=>{\r\n                        options.push({ value: doc.ref, label: doc.data().name })\r\n                    })\r\n\r\n                    this.loadSpinner(false,\"\")\r\n\r\n                    return\r\n                }\r\n                else\r\n                {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    radio(e,index,user)\r\n    {\r\n\r\n        var researcher = document.getElementById(\"researcher\"+index)\r\n        var manager = document.getElementById(\"managers\"+index)\r\n        var tester = document.getElementById(\"testers\"+index)\r\n\r\n\r\n        user.type = e.target.value;\r\n\r\n\r\n        if(e.target === researcher) {\r\n            researcher.checked=true;\r\n            manager.checked=false;\r\n            tester.checked=false;\r\n\r\n        }\r\n        else if(e.target === manager) {\r\n            researcher.checked=false;\r\n            manager.checked=true;\r\n            tester.checked=false;\r\n\r\n        }\r\n        else {\r\n            researcher.checked=false;\r\n            manager.checked=false;\r\n            tester.checked=true;\r\n        }\r\n    }\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            if (this.state.page === 'menu')\r\n                return (\r\n                    <div>\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                )\r\n            if (this.state.users) {\r\n                if (this.state.users.length === 0) {\r\n                    return (\r\n                        <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                            {!this.state.spinner[0] ? \"\" :\r\n                                <div id='fr'>\r\n                                    {this.state.spinner[1]}\r\n                                    <div className=\"sweet-loading\">\r\n                                        <ClipLoader style={{\r\n                                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                            borderRadius: \"25px\"\r\n                                        }}\r\n                                                    size={120}\r\n                                                    color={\"#123abc\"}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div id=\"name-group\" className=\"form-group\">\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        אין משתמשים חדשים\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <button id=\"feedback-button\" className=\"btn btn-info\" onClick={() => {\r\n                                        this.BackPage()\r\n                                    }}>חזרה לתפריט\r\n                                    </button>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                return (\r\n                    <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div align=\"right\">\r\n                            <h2>אישור משתמשים</h2>\r\n                        </div>\r\n                        <div id=\"name-group\" className=\"form-group\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container\r\n                                          direction=\"row\"\r\n                                          justify=\"space-between\"\r\n                                          alignItems=\"center\"\r\n                                          spacing={2}>\r\n\r\n                                        {this.state.users.map((user, index) => (\r\n                                                <Grid item xs={12} key={index}>\r\n                                                    {this.Card(user, index)}\r\n                                                </Grid>\r\n                                            )\r\n                                        )}\r\n\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <button id=\"feedback-button\" className=\"btn btn-info\" onClick={() => {\r\n                                            this.BackPage()\r\n                                        }}>חזרה לתפריט\r\n                                        </button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div id=\"name-group\" className=\"form-group\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    טוען משתמשים\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {\"טוען נתוני דף\"}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    Card(user,index) {\r\n        return (\r\n            <div className=\"Card\"  dir=\"rtl\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <b>שם מלא: </b>  {user.fname + \" \" + user.lname}<br/>\r\n                        <b> אימייל: </b> {user.email}<br/>\r\n                        <b> טלפון: </b>{user.phone}<br/>\r\n                        {\r\n                            (user.type === \"researcher\") ?\r\n                                (<b> תפקיד: חוקר </b>):(user.type === \"managers\")?\r\n                                (<b> תפקיד: מנהל </b>):(<b> תפקיד: בודק </b>)\r\n\r\n\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3}>\r\n                        <div>\r\n\r\n                            <label>\r\n                                <input id ={\"researcher\"+index} type=\"radio\" value=\"researcher\"  onClick={e => {\r\n                                    this.radio(e,index,user)\r\n                                }}/>\r\n                                חוקר\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <div>\r\n\r\n                            <label>\r\n                                <input id ={\"managers\"+index} type=\"radio\" value=\"managers\"  onClick={e => {\r\n                                    this.radio(e,index,user)\r\n                                }}/>\r\n                                מנהל\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        {/*<div className=\"text-below-image\">*/}\r\n                        {/*    <label className=\"container\">אישור בקשה<input type='checkbox'  onChange={e=>{*/}\r\n                        {/*        user.approve = e.target.checked*/}\r\n                        {/*    } }/></label>*/}\r\n                        {/*</div>*/}\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <button\r\n                            style={{backgroundColor: \"rgb(50,248,6)\"}}\r\n                            onClick={()=>{\r\n                                CreateUser(user).then(()=>{\r\n                                    var newUsers = []\r\n                                    this.state.users.forEach((user,i)=>{\r\n                                        if(index!==i)\r\n                                            newUsers.push(user)\r\n                                    })\r\n                                    this.setState({users:newUsers})\r\n                                })\r\n                            }}>אישור בקשה </button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <button\r\n                            style={{backgroundColor: \"rgb(248,6,6)\"}}\r\n                            onClick={()=>{\r\n                                DeleteUser(user.uid).then(()=>{\r\n                                    var newUsers = []\r\n                                    this.state.users.forEach((user,i)=>{\r\n                                        if(index!==i)\r\n                                            newUsers.push(user)\r\n                                    })\r\n                                    this.setState({users:newUsers})\r\n                                })\r\n                            }}>דחיית בקשה</button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Temp${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport  default  UserApproval;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UpdatesFirebase.js",["177","178","179"],"import React, { Component } from \"react\";\r\nimport {db, CreateNewTeam, auth, getUser} from \"../../../../firebase/firebase\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Select from \"react-select\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {CSVLink} from \"react-csv\";\r\n\r\n\r\nvar options = []\r\nvar researchersOptions = []\r\nvar studentsOptions = []\r\nvar emptyresearchersOptions = []\r\nvar emptyStudentsOptions = []\r\nvar emptyTeamOptions = []\r\nvar TeamOptions = []\r\nvar csvresearchersData = []\r\nvar csvmanagersData = []\r\nclass UpdatesFirebase extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state =\r\n            {\r\n                loadPage:false,\r\n                spinner: [true,'נא להמתין הדף נטען'],\r\n                isLoaded:false,\r\n                date:\"\",\r\n                newTeamName:'',\r\n                teamPath:\"\",\r\n                teamName:\"\",\r\n                replaceTeamName:false,\r\n                delete:false,\r\n                showresearchers:false,\r\n                showStudents:false,\r\n                showTeamWithoutresearcher:false,\r\n                showresearcherWithoutTeam:false,\r\n                showStudentWithoutTeam:false,\r\n            }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n    async handleChange(event)\r\n    {\r\n\r\n        var value = event.target.value;\r\n        if(value === '')\r\n            this.setState({newTeamName:value,replaceTeamName:false})\r\n        else\r\n            this.setState({newTeamName:value})\r\n    }\r\n    async deleteTeam(){\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    createCsvFile(users,type)\r\n    {\r\n        if(type ==='researcher')\r\n        {\r\n            csvresearchersData = [\r\n                [\r\n                    \"שם פרטי\",\r\n                    \"שם משפחה\",\r\n                    \"ת.ז\",\r\n                    \"טלפון\",\r\n                    \"מייל\",\r\n                    \"תפקיד\",\r\n                    \"קבוצה\",\r\n                ],\r\n            ];\r\n            users.map(user=>{\r\n                if(user)\r\n                {\r\n                    csvresearchersData.push([\r\n                        user.data().fname,\r\n                        user.data().lname,\r\n                        user.data().ID,\r\n                        user.data().phone.substr(0,3)+\"-\"+user.data().phone.substr(3,user.data().phone.length),\r\n                        user.data().email,\r\n                        user.data().type==='managers'?\"מנהל\":\r\n                            user.data().type==='researcher'?\"חוקר\":\"\",\r\n                        user.data().teamName,\r\n\r\n                    ],)\r\n                }\r\n                return user\r\n            })\r\n        }\r\n        else\r\n        {\r\n            csvmanagersData = [\r\n                [\r\n                    \"שם פרטי\",\r\n                    \"שם משפחה\",\r\n                    \"ת.ז\",\r\n                    \"טלפון\",\r\n                    \"מייל\",\r\n                    \"תפקיד\",\r\n                    \"קבוצה\",\r\n                ],\r\n            ];\r\n            users.map(user=>{\r\n                if(user) {\r\n                    csvmanagersData.push([\r\n                        user.data().fname,\r\n                        user.data().lname,\r\n                        user.data().ID,\r\n                        user.data().phone.substr(0, 2) + \"-\" + user.data().phone.substr(3, user.data().phone.length),\r\n                        user.data().email,\r\n                        user.data().type==='managers'?\"מנהל\":\r\n                            user.data().type==='researcher'?\"חוקר\":\"\",\r\n                        user.data().teamName,\r\n\r\n                    ],)\r\n                }\r\n                return user\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.loadPage)\r\n        {\r\n            return(\r\n                <div id=\"instactorReport\" className=\"sec-design\" dir='rtl'>\r\n\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <input type=\"text\" name=\"team\" placeholder=\"שם משתמש חדש\" onChange={this.handleChange}/>\r\n                        </Grid>\r\n                        <Grid item xs={6} >\r\n                            <button onClick={async ()=>{\r\n                                var newTeam= this.state.newTeamName\r\n                                await CreateNewTeam(newTeam)\r\n                                window.location.reload(true)\r\n                            }}>צור משתמש חדש</button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <button onClick={()=>{\r\n                                if(this.state.newTeamName && this.state.newTeamName.length > 0)\r\n                                    this.setState({replaceTeamName:true})\r\n                                else\r\n                                    alert(\"שם המשתמש החדש לא יכול להיות ריק\")\r\n                            }}>החלף שם למשתמש קיים </button>\r\n                        </Grid>\r\n                        <Grid item xs={8} hidden={!this.state.replaceTeamName}>\r\n                            <Select  placeholder={\" בחר משתמש להחלפת שם \"} options={options} onChange={(e)=>{\r\n                                // console.log(e.label,e.value);\r\n                                this.setState({teamPath:e.value,teamName:e.label})\r\n                            }} required/>\r\n                        </Grid>\r\n                        <Grid item xs={4} hidden={!this.state.replaceTeamName} >\r\n                            <button onClick={async ()=>{\r\n\r\n                                if(this.state.teamName !== this.state.newTeamName) {\r\n                                    await this.setState({replaceTeamName: false})\r\n                                    await this.state.teamPath.update({name:this.state.newTeamName})\r\n                                    alert('בוצע שינוי שם בהצלחה')\r\n                                    window.location.reload(true);\r\n\r\n                                }\r\n                                else\r\n                                {\r\n                                    alert(\"שם זהה לא ניתן לשנות\")\r\n                                }\r\n                            }}>אישור החלפה</button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <button onClick={()=>{\r\n                                this.setState({delete:!this.state.delete})\r\n                                this.deleteTeam()\r\n                            }}>{this.state.delete?'הסתר מחיקת משתמש':'הצג מחיקת משתמש'} </button>\r\n                        </Grid>\r\n                        <Grid item xs={8} hidden={!this.state.delete}>\r\n                            <Select  placeholder={\" בחר משתמש \"} options={options} onChange={(e)=>{\r\n                                // console.log(e.label,e.value);\r\n                                this.setState({teamPath:(e.value).path,teamName:e.label})\r\n                            }} required/>\r\n                        </Grid>\r\n                        <Grid item xs={4} hidden={!this.state.delete} >\r\n                            <button onClick={async ()=>{\r\n                                // console.log(this.state.teamPath)\r\n                                if(this.state.teamPath) {\r\n                                    await this.setState({delete: false})\r\n                                    var d = await db.doc(this.state.teamPath).get()\r\n                                    if(d.data().researcher) {\r\n                                        // console.log(\"team on researcher remove\")\r\n                                        await d.data().researcher.update({\r\n                                            team: null,\r\n                                            teamName: null\r\n                                        })\r\n                                    }\r\n\r\n\r\n                                    var researcher = await  db.collection(\"researcher\").where('teamName','==',this.state.teamName).get()\r\n                                    researcher.docs.forEach(async student=>{\r\n                                        researcher.ref.update({\r\n                                            teamName: null,\r\n                                            team:null\r\n                                        })\r\n                                    })\r\n\r\n                                    await db.doc(this.state.teamPath).delete().then(function() {\r\n                                        alert(\"המשתמש נמחק בהצלחה\");\r\n                                    }).catch(function(error) {\r\n                                        console.error(\"Error removing document: \", error);\r\n                                    });\r\n                                    window.location.reload(true);\r\n\r\n                                }\r\n                                else\r\n                                {\r\n                                    // console.log(\"בחר חוקר\")\r\n                                }\r\n                            }}>מחק</button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <div className=\"text-below-image\">\r\n                                <button onClick={()=>{\r\n                                    this.getAllUsers('researcher')\r\n                                    this.setState({showresearchers:!this.state.showresearchers,researcherTeamName:null,researcherName:null})\r\n\r\n                                }} >{this.state.showresearchers?'הסתר רשימת חוקרים':'הצג רשימת חוקרים'}</button>\r\n                                {\r\n                                    (this.state.showresearchers && this.state.researchers) ? (\r\n                                        <div>\r\n                                            <Grid item xs={12}>\r\n                                                נמצאו:{this.state.researchers.length} חוקרים\r\n                                                <Select placeholder={\" מצא חוקר \"} options={researchersOptions}\r\n                                                        onChange={(e) => {\r\n                                                            // console.log(e.label, e.value);\r\n                                                            this.setState({researchers: [e.value]})\r\n                                                        }}/>\r\n\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <CSVLink\r\n                                                    data={csvresearchersData}\r\n                                                    filename={\"רשימת חוקרים.csv\"}\r\n                                                    className=\"btn btn-primary\"\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <button>\r\n                                                        הורדת פרטי קשר חוקרים\r\n                                                    </button>\r\n                                                </CSVLink>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <CSVLink\r\n                                                    data={csvresearchersData}\r\n                                                    filename={\"רשימת חוקרים.doc\"}\r\n                                                    className=\"btn btn-primary\"\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <button>\r\n                                                         וורד הורדת פרטי קשר חוקרים\r\n                                                    </button>\r\n                                                </CSVLink>\r\n                                            </Grid>\r\n                                        </div> ) : ('')\r\n\r\n                                }\r\n                                {\r\n                                    (!this.state.researchers || !this.state.showresearchers)?'':\r\n                                        this.state.researchers.map((researcher,index) => (\r\n                                            <Grid  item xs={12}  key={index}>\r\n                                                <hr/>\r\n                                                {this.card(researcher.data(),index)}\r\n                                            </Grid >\r\n                                        ))\r\n\r\n\r\n                                }\r\n                            </div>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <button id=\"feedback-button\" className=\"btn btn-info\" onClick={()=>{this.BackPage()}}>חזרה לתפריט</button>\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            )\r\n        } else {\r\n            // console.log(this.state.spinner)\r\n            return (\r\n                <div>\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {\"טוען נתוני דף\"}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>)\r\n        }\r\n    }\r\n\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    async getAllUsers(user) {\r\n        this.loadSpinner(true,\"מיבא נתוני משתמשים\")\r\n        // console.log(\"this.state\",this.state)\r\n        // console.log(\"this.state.researchers\",this.state.researchers)\r\n        // console.log(\"this.state.researchersEmpty\",this.state.researchersEmpty)\r\n        // console.log(\"this.state.Data\",this.state.Data)\r\n        // console.log(\"this.state.TeamEmpty\",this.state.TeamEmpty)\r\n\r\n        if ((user === 'researcher' && this.state.researchers && this.state.researchers > 1) ||\r\n            (user === 'researchersEmpty' && this.state.researchersEmpty && this.state.researchersEmpty > 1) ||\r\n            (user === 'teamEmpty' && this.state.TeamEmpty && this.state.TeamEmpty > 1) ||\r\n            (user === 'Data' && this.state.Data && this.state.Data > 1)) {\r\n            this.loadSpinner(false,\"\")\r\n            return\r\n        }\r\n        // console.log(user)\r\n        var temp = user\r\n        if (user === 'researcher')\r\n            researchersOptions = []\r\n        else if (user === 'researchersEmpty') {\r\n            emptyresearchersOptions = []\r\n            temp = 'researcher'\r\n        } else if (user === 'teamEmpty') {\r\n            emptyTeamOptions = []\r\n            temp = 'Data'\r\n        } else if (user === 'Data') {\r\n            TeamOptions = []\r\n            temp = 'Data'\r\n        }\r\n        var allUsers = []\r\n        await db.collection(temp).get().then(res => {\r\n            res.forEach(res => {\r\n                if (res.data().uid) {\r\n                 if (user === 'researcher') {\r\n                        allUsers.push(res)\r\n                     researchersOptions.push({value: res, label: res.data().fname + ' ' + res.data().lname})\r\n\r\n                    } else if (user === 'researchersEmpty' && !res.data().team) {\r\n                        allUsers.push(res)\r\n                        emptyresearchersOptions.push({value: res, label: res.data().fname + ' ' + res.data().lname})\r\n                    }\r\n                } else if (user === 'teamEmpty' && !res.data().researcher) {\r\n                    allUsers.push(res)\r\n                    emptyTeamOptions.push({value: res, label: res.name})\r\n\r\n                } else if (user === 'Data' && res.data().researcher) {\r\n                    allUsers.push(res)\r\n                    TeamOptions.push({value: res, label: res.name})\r\n                }\r\n            })\r\n        })\r\n        if (user === 'researcher') {\r\n            this.setState({researchers: allUsers})\r\n            this.createCsvFile(allUsers,'researcher')\r\n        }\r\n        else if (user === 'researchersEmpty')\r\n            this.setState({researchersEmpty: allUsers})\r\n        else if (user === 'studentEmpty')\r\n            this.setState({StudentEmpty: allUsers})\r\n        else if (user === 'teamEmpty')\r\n            this.setState({TeamEmpty: allUsers})\r\n        else if (user === 'Data') {\r\n            this.setState({Data: allUsers})\r\n        }\r\n\r\n        this.loadSpinner(false,\"\")\r\n         console.log(\"all users\",allUsers)\r\n    }\r\n\r\n\r\n    async handleSubmit(event)\r\n    {\r\n        this.loadSpinner(true,\"מיבא נתונים\")\r\n        // console.log(this.state.teamPath)\r\n        if(!this.state.date) {\r\n            this.loadSpinner(false,\"\")\r\n            return;\r\n        }\r\n        // console.log(\"in\");\r\n        var team = await db.collection(\"Data\").doc(this.state.teamPath).get();\r\n        // console.log(team)\r\n        this.loadSpinner(false,\"\")\r\n    }\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.render()\r\n                    this.setState({loadPage:true})\r\n                    this.loadSpinner(true,\"מיבא נתונים\")\r\n                    var nameTeams =  await db.collection(\"Data\").get();\r\n                    nameTeams.forEach(doc=>{\r\n                        options.push({ value: doc.ref, label: doc.data().name })\r\n                    })\r\n                    this.loadSpinner(false,\"\")\r\n                    return\r\n                }\r\n                else\r\n                {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    async handleChangeDate(event)\r\n    {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        if(name === 'date')\r\n        {\r\n            this.setState({date:value,viewStudent:false});\r\n            this.state.date=value\r\n        }\r\n    }\r\n\r\n    teamCard(team)\r\n    {\r\n        return(\r\n            <div id=\"name-group\" className=\"form-group\" dir=\"rtl\">\r\n                <div className=\"report\" id=\"report\">\r\n                    <div>\r\n                        <h4> שם החוקר: {team.name} </h4>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={8}>\r\n                                <Select  placeholder={\" שיבוץ חוקר \"} options={emptyresearchersOptions} onChange={(e)=>{\r\n                                    // console.log(e.label,e.value);\r\n                                    this.setState({emtpyresearcherTeamPath:e.value,emtpyresearcherTeamName:e.label})\r\n                                }} />\r\n                            </Grid>\r\n                            <Grid item xs={4} hidden={!this.state.emtpyresearcherTeamPath}>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    card(user,index)\r\n    {\r\n        return(\r\n            <div id=\"name-group\" className=\"form-group\" dir=\"rtl\">\r\n                <div className=\"report\" id=\"report\">\r\n                    <div>\r\n\r\n                        <h4> שם: {user.fname+' '+ user.lname} </h4>\r\n                        <h4> טלפון: {user.phone}</h4>\r\n                        <h4> אימייל: {user.email}</h4>\r\n                        <h4> ת.ז: {user.ID}</h4>\r\n                        <h4> חוקר: {user.teamName}</h4>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={8}>\r\n                                {/*<Select  placeholder={\" החלף חוקר \"} options={options} onChange={(e)=>{*/}\r\n                                {/*    // console.log(e.label,e.value);*/}\r\n                                {/*    user.optionss = e.label*/}\r\n                                {/*    var teamPath = this.state.researcherTeamPath*/}\r\n                                {/*    var teamName = this.state.researcherTeamName*/}\r\n                                {/*    if(teamPath && teamName) {*/}\r\n                                {/*        if (index < teamPath.length) {*/}\r\n                                {/*            teamPath[index] = e.value*/}\r\n                                {/*            teamName[index] = e.label*/}\r\n                                {/*        }*/}\r\n                                {/*        else*/}\r\n                                {/*        {*/}\r\n                                {/*            teamPath.push(e.value)*/}\r\n                                {/*            teamName.push(e.label)*/}\r\n                                {/*        }*/}\r\n                                {/*    }*/}\r\n                                {/*    else*/}\r\n                                {/*    {*/}\r\n                                {/*        teamPath = [e.value]*/}\r\n                                {/*        teamName = [e.label]*/}\r\n\r\n                                {/*    }*/}\r\n                                {/*    this.setState({researcherTeamPath:teamPath,researcherTeamName:teamName})*/}\r\n                                {/*}} />*/}\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            // pathname: `/${page}/${this.state.user.id}`,\r\n            pathname: `/Temp${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default UpdatesFirebase;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\mngRequestPurchase.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"import  React, {Component} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Select from \"react-select\";\r\nimport {auth, db, getPathData, getUser} from \"../../../../firebase/firebase\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport 'classlist.js';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport  { useRef } from 'react';\r\nimport { useReactToPrint} from 'react-to-print';\r\nimport { render } from \"react-dom\";\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nvar sum =0\r\nvar csvData = [];\r\nvar csvTableData = [];\r\n\r\nclass mngRequestPurchase extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            page:'menu',\r\n            user: props.location,\r\n            error:false,\r\n            showreport:false,\r\n            loading: true,\r\n            rule:\"Manager\",\r\n            prevDate:'',\r\n            viewResearcher: false,\r\n            date:\"\",\r\n            form : {\r\n                date:\"\",\r\n                team:\"\",\r\n                name:\"\",\r\n            }\r\n        };\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.approvResearcher = this.approvResearcher.bind(this)\r\n        this.RequestPurchase = this.RequestPurchase.bind(this)\r\n    }\r\n\r\n\r\n    // async  GetAllData() {\r\n    //     this.loadSpinner(true,\"מיבא נתונים\")\r\n    //     var from = this.GetDates(this.state.dateFrom)\r\n    //     var to = this.GetDates(this.state.dateTo)\r\n    //\r\n    //\r\n    //     if(!this.state.dateFrom || !this.state.dateTo )\r\n    //     {\r\n    //         alert(\"נא למלא תאריך התחלה וסיום\")\r\n    //         this.loadSpinner(false,'')\r\n    //         return\r\n    //     }\r\n    //\r\n    //     var optionsAll=[]\r\n    //\r\n    //     var allData = await db.collection(\"Data\")\r\n    //         .orderBy('date').get()\r\n    //\r\n    //     var TeamcollectionAll = allData.docs.map( async function(doc) {\r\n    //         // console.log(\"in 2\")\r\n    //         var RequestsAll = await db.collection(\"Data\").doc().collection(\"Requests\")\r\n    //             .where('date','>=',from)\r\n    //             .where('date','<=',to)\r\n    //             .get()\r\n    //\r\n    //         if(!RequestsAll.empty)\r\n    //         {\r\n    //             var formsAll=[]\r\n    //             RequestsAll.forEach(async function(doc){\r\n    //                 if(doc.data().RequestResearcher)\r\n    //                 {\r\n    //                     var FormsResearcherAll = await getPathData(doc.data().RequestResearcher.path)\r\n    //                     formsAll.push(FormsResearcherAll)\r\n    //                 }\r\n    //             })\r\n    //             return [doc,RequestsAll,formsAll]\r\n    //         }\r\n    //\r\n    //     })\r\n    //     Promise.all(TeamcollectionAll).then(res => {\r\n    //         res.forEach(item=>{\r\n    //             // console.log(\"in 3\")\r\n    //             if(item)\r\n    //                 optionsAll.push({ value: item, label:  item[0].data(), name: 'הצג הכל'})\r\n    //         })\r\n    //         this.setState({optionsAll:optionsAll})\r\n    //         // console.log(\"in 4\")\r\n    //         this.loadSpinner(false,\"\")\r\n    //     })\r\n    // }\r\n\r\n    async  GetData() {\r\n        this.loadSpinner(true,\"מיבא נתונים\")\r\n        var from = this.GetDates(this.state.dateFrom)\r\n        var to = this.GetDates(this.state.dateTo)\r\n\r\n\r\n        if(!this.state.dateFrom || !this.state.dateTo )\r\n        {\r\n            alert(\"נא למלא תאריך התחלה וסיום\")\r\n            this.loadSpinner(false,'')\r\n            return\r\n        }\r\n\r\n        var options=[]\r\n        this.setState({options:options,show:false})\r\n        var nameData = await db.collection(\"Data\")\r\n            .orderBy('name','asc')\r\n            .get()\r\n        // var allData = await db.collection(\"Data\")\r\n        //     .orderBy('date').get()\r\n        //\r\n        // console.log(\"allData\",allData)\r\n\r\n        var Teamcollection = nameData.docs.map( async function(doc) {\r\n            // console.log(\"in 2\")\r\n            var Requests = await db.collection(\"Data\").doc(doc.id).collection(\"Requests\")\r\n                .where('date','>=',from)\r\n                .where('date','<=',to)\r\n                .get()\r\n\r\n            if(!Requests.empty)\r\n            {\r\n                var forms=[]\r\n                Requests.forEach(async function(doc){\r\n                    if(doc.data().RequestResearcher)\r\n                    {\r\n                        var FormsResearcher = await getPathData(doc.data().RequestResearcher.path)\r\n                        forms.push(FormsResearcher)\r\n                    }\r\n                })\r\n                return [doc,Requests,forms]\r\n            }\r\n\r\n        })\r\n\r\n        Promise.all(Teamcollection).then(res => {\r\n            res.forEach(item=>{\r\n                // console.log(\"in 3\")\r\n                if(item)\r\n                    options.push({ value: item, label:  item[0].data().name})\r\n            })\r\n            this.setState({options:options})\r\n            // console.log(\"in 4\")\r\n            this.loadSpinner(false,\"\")\r\n        })\r\n    }\r\n\r\n\r\n    async Word( element ) {\r\n\r\n        var html, link, blob, url, css;\r\n\r\n        css = (\r\n            '<style>' +\r\n            '@page WordSection1{size: 841.95pt 595.35pt;mso-page-orientation: landscape;}' +\r\n            'div.WordSection1 {page: WordSection1;}' +\r\n            '</style>'\r\n        );\r\n\r\n        html = element.innerHTML;\r\n        blob = new Blob(['\\ufeff', css + html], {\r\n            type: 'application/msword'\r\n        });\r\n        url = URL.createObjectURL(blob);\r\n        link = document.createElement('A');\r\n        link.href = url;\r\n        link.download = 'Document';  // default name without extension\r\n        document.body.appendChild(link);\r\n        if (navigator.msSaveOrOpenBlob ) navigator.msSaveOrOpenBlob( blob, 'Document.doc'); // IE10-11\r\n        else link.click();  // other browsers\r\n        document.body.removeChild(link);\r\n        alert(\"test\")\r\n    };\r\n\r\n    createTableFile(forms,RequestResearcher)\r\n    {\r\n        RequestResearcher.map(report=>{\r\n            // console.log(RequestResearcher)\r\n            csvTableData.push([\r\n                \"מק'ט: \",\r\n                report.form.q5,\r\n                report.form.q50,\r\n                report.form.q51,\r\n\r\n                \"תיאור הפריט: \",\r\n                report.form.q6,\r\n                report.form.q60,\r\n                report.form.q61,\r\n\r\n                \"מחיר במט'ח: \",\r\n                report.form.q7,\r\n                report.form.q70,\r\n                report.form.q71,\r\n\r\n                \"מחיר יח בש'ח: \",\r\n                report.form.q8,\r\n                report.form.q80,\r\n                report.form.q81,\r\n\r\n                \"מס' יחידות: \",\r\n                report.form.q9,\r\n                report.form.q90,\r\n                report.form.q91,\r\n\r\n                \"מחיר בש'ח: \",\r\n                report.form.q10,\r\n                report.form.q100,\r\n                report.form.q101,\r\n            ],)\r\n\r\n\r\n        const data = [\r\n            {id: this.report.form.q5, id1: 'Gob', id2: '2', id3: '', id4: '', id5:''},\r\n            {id: this.report.form.q50, id1: 'Gob', id2: '2', id3: '', id4: '', id5:''},\r\n            {id: this.report.form.q1, id1: 'Gob', id2: '2', id3: '', id4: '', id5:''},\r\n        ];\r\n        const columns = [{\r\n            dataField: 'id',\r\n            text: 'מק\"ט'\r\n        }, {\r\n            dataField: 'id1',\r\n            text: 'תיאור הפריט'\r\n        }, {\r\n            dataField: 'id2',\r\n            text: 'מחיר במט\"ח'\r\n        },{\r\n            dataField: 'id3',\r\n            text: 'מחיר יח בש\"ח'\r\n        },{\r\n            dataField: 'id4',\r\n            text: 'מס יחידות'\r\n        },{\r\n            dataField: 'id5',\r\n            text: 'מחיר בש\"ח'\r\n        },];\r\n        return report;\r\n        })\r\n    }\r\n\r\n    createCsvFile(forms,RequestResearcher)\r\n    {\r\n        var q5,q50,q51,q6,q60,q61,q7,q70,q71,q8,q80,q81,q9,q90,q91,q10,q100,q101\r\n        // var url,link\r\n        //\r\n        // blob= new Blob([layout/images/imagg.jpg], {\r\n        //     type: 'application/msword'\r\n        // });\r\n        // url = URL.createObjectURL(blob);\r\n        // link.href = url;\r\n        csvData = [\r\n            [\r\n\r\n                // \"תאריך הבקשה: \",\r\n                // \"שם הספק: \",\r\n                // \"נייד: \",\r\n                // \"טופס הזמנה מס': \",\r\n                // \"מצורפת הצעת מחיר מס': \",\r\n                // \"מק'ט: \",\r\n                // \"תיאור הפריט: \",\r\n                // \"מחיר במט'ח: \",\r\n                // \"מחיר יח בש'ח: \",\r\n                // \"מס' יחידות: \",\r\n                // \"מחיר בש'ח: \",\r\n                // \"סה'כ כולל מע'מ: \",\r\n                // \"נא לתאם קבלת משלוח עם: \",\r\n                // \"מטרת הרכישה: \",\r\n                // \"תקציב המחקר: \",\r\n                // \"מס' המחקר: \",\r\n                // \"שם החוקר: \",\r\n                // \"חתימת החוקר: \",\r\n                // \"תאריך החשבונית: \",\r\n                // \"מס' חשבונית: \",\r\n            ],\r\n        ];\r\n\r\n        RequestResearcher.map(report=>{\r\n            // console.log(RequestResearcher)\r\n            csvData.push([\r\n                // report.form.team,\r\n                // report.form.name,\r\n                \"תאריך הבקשה: \",\r\n                report.form.date,\r\n                \"\",\r\n                \"שם הספק: \",\r\n                report.form.q1,\r\n                \"נייד: \",\r\n                report.form.q2,\r\n                \"טופס הזמנה מס': \",\r\n                report.form.q3,\r\n                \"מצורפת הצעת מחיר מס': \",\r\n                report.form.q4,\r\n\r\n                \"מק'ט: \",\r\n                q5=report.form.q5,\r\n                q50=report.form.q50,\r\n                q51=report.form.q51,\r\n\r\n                \"תיאור הפריט: \",\r\n                report.form.q6,\r\n                report.form.q60,\r\n                report.form.q61,\r\n\r\n                \"מחיר במט'ח: \",\r\n                report.form.q7,\r\n                report.form.q70,\r\n                report.form.q71,\r\n\r\n                \"מחיר יח בש'ח: \",\r\n                report.form.q8,\r\n                report.form.q80,\r\n                report.form.q81,\r\n\r\n                \"מס' יחידות: \",\r\n                report.form.q9,\r\n                report.form.q90,\r\n                report.form.q91,\r\n\r\n                \"מחיר בש'ח: \",\r\n                report.form.q10,\r\n                report.form.q100,\r\n                report.form.q101,\r\n                \"נא לתאם קבלת משלוח עם: \",\r\n                report.form.q11,\r\n                \"מטרת הרכישה: \",\r\n                report.form.q12,\r\n                \"תקציב המחקר: \",\r\n                report.form.q13,\r\n                \"מס' המחקר: \",\r\n                report.form.q14,\r\n                \"שם החוקר: \",\r\n                report.form.q15,\r\n                \"חתימת החוקר: \",\r\n                report.form.q16,\r\n                \"תאריך החשבונית: \",\r\n                report.form.q17,\r\n                \"מס' חשבונית: \",\r\n                report.form.q18,\r\n\r\n\r\n\r\n            ],)\r\n            const data = [\r\n                {id: q5, id1: 'Gob', id2: '2', id3: '', id4: '', id5:''},\r\n                {id: q50, id1: 'Gob', id2: '2', id3: '', id4: '', id5:''},\r\n                {id: q51, id1: 'Gob', id2: '2', id3: '', id4: '', id5:''},\r\n            ];\r\n            const columns = [{\r\n                dataField: 'id',\r\n                text: 'מק\"ט'\r\n            }, {\r\n                dataField: 'id1',\r\n                text: 'תיאור הפריט'\r\n            }, {\r\n                dataField: 'id2',\r\n                text: 'מחיר במט\"ח'\r\n            },{\r\n                dataField: 'id3',\r\n                text: 'מחיר יח בש\"ח'\r\n            },{\r\n                dataField: 'id4',\r\n                text: 'מס יחידות'\r\n            },{\r\n                dataField: 'id5',\r\n                text: 'מחיר בש\"ח'\r\n            },];\r\n            return report\r\n        })\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.render()\r\n                    this.setState({loadPage:true})\r\n                    this.loadSpinner(false,\"\")\r\n                    return\r\n                }\r\n                else\r\n                {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.loadPage){\r\n            return(\r\n                <div>\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div id=\"studentFeedback\" className=\"feedback-design\" dir='rtl'>\r\n                        <div id=\"studentFeedback\" className=\"form-design\" name=\"student_form\" method=\"POST\">\r\n                            <div id=\"name-group\" className=\"form-group\">\r\n\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={5}>\r\n                                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">מתאריך </label>\r\n                                        <input type=\"date\" className=\"form-control\"  name=\"date\"\r\n                                               onChange={(e)=>{\r\n                                                   this.setState({dateFrom:e.target.value,options:null,show:false,teamName:null})\r\n                                               }}\r\n                                               required/>\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">עד תאריך </label>\r\n                                        <input type=\"date\" className=\"form-control\" id=\"insert-date\" name=\"date\"\r\n                                               onChange={(e)=>{\r\n                                                   this.setState({dateTo:e.target.value,options:null,show:false,teamName:null})\r\n                                               }}\r\n                                               required/>\r\n                                    </Grid>\r\n\r\n\r\n                                    <Grid item xs={2} hidden={!this.state.dateTo || !this.state.dateFrom}>\r\n                                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\"> &nbsp;</label>\r\n                                        <button id=\"viewReport\" className=\"btn btn-info\" onClick={()=>{\r\n                                            this.GetData()\r\n                                        }}>מצא בקשות<span\r\n                                            className=\"fa fa-arrow-right\"></span></button>\r\n                                    </Grid>\r\n\r\n\r\n\r\n                                    {/*<Grid item xs={6} hidden={!this.state.optionsAll}>*/}\r\n                                    {/*    <button id=\"select\" className=\"btn btn-info\" onClick={()=>{*/}\r\n                                    {/*        this.GetAllData()*/}\r\n                                    {/*    }}>הצג הכל<span*/}\r\n                                    {/*        className=\"fa fa-arrow-right\"></span></button>*/}\r\n                                    {/*</Grid>*/}\r\n\r\n\r\n                                    <Grid item xs={6} hidden={!this.state.options}>\r\n                                        <Select id = 'select'  placeholder={\" בחר חוקר \"} options={this.state.options} onChange={(e)=>{\r\n                                            // console.log(e.label,e.value);\r\n                                            this.setState({team:e.value,teamName:e.label})\r\n                                        }} required/>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} hidden={!this.state.options}>\r\n                                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\"> &nbsp;</label>\r\n                                        {\r\n                                            !this.state.teamName?\"לא נבחר חוקר\": this.state.teamName\r\n                                        }\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={3}  hidden={!this.state.teamName}>\r\n                                        <button id=\"viewReport\" className=\"btn btn-info\" onClick={()=>{\r\n                                            this.setState({show:!this.state.show, forms:this.state.team[1].docs, RequestResearcher:this.state.team[2]})\r\n                                            this.createCsvFile(this.state.team[1].docs, this.state.team[2])\r\n                                        }}>{!this.state.show?(\"הצג בקשות לרכישה\"):(\"הסתר בקשות לרכישה\")}<span\r\n                                            className=\"fa fa-arrow-right\"></span></button>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </div>\r\n                            {this.state.forms?(\r\n\r\n                                <Grid  item xs={12} hidden={!this.state.show} >\r\n\r\n                                    <CSVLink\r\n                                        data={csvData}\r\n                                        filename={this.state.dateFrom+\"-\"+this.state.dateTo+\"בקשות לרכישה.csv\"}\r\n                                        className=\"btn btn-primary\"\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        <button>\r\n                                              הורדת הבקשות בתאריכים שנבחרו לאקסל\r\n                                        </button>\r\n                                    </CSVLink>\r\n\r\n\r\n\r\n                                    {\r\n\r\n                                        this.state.forms.map((Form,index) => (\r\n                                            <Grid item xs={12} key={index}>\r\n                                                <hr/>\r\n                                                {this.Requests(Form.data(),index)}\r\n                                                <div>\r\n                                                    <Button\r\n                                                        type=\"submit\"\r\n                                                        fullWidth\r\n                                                        variant=\"contained\"\r\n\r\n                                                        onClick={() => {\r\n                                                            // console.log(\"this.Requests(Form.data(),index)\",this.Requests(Form.data(),index))\r\n                                                            // console.log(\"Form.data()\",Form.data())\r\n                                                            // console.log(\"index\",index)\r\n                                                            this.generate(Form.data(),index)\r\n\r\n                                                        }}>\r\n                                                        הורדת הבקשה\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Grid>\r\n\r\n\r\n\r\n                                            // <Grid  item xs={12}  key={index}>\r\n                                            //     <hr/>\r\n                                            //     {this.Requests(Form.data(),index)}\r\n                                            //     <CSVLink\r\n                                            //\r\n                                            //         data={csvData}\r\n                                            //         filename={this.state.dateFrom+\"-\"+this.state.dateTo+\"בקשה לרכישה.doc\"}\r\n                                            //         className=\"btn btn-primary\"\r\n                                            //         target=\"_blank\"\r\n                                            //     >\r\n                                            //         <button>\r\n                                            //             הורדת הבקשה לוורד\r\n                                            //         </button>\r\n                                            //     </CSVLink>\r\n                                            // </Grid >\r\n\r\n                                        ))\r\n                                    }\r\n\r\n                                </Grid >\r\n\r\n                            ):(<div></div>)}\r\n                            <button id=\"go-back\" className=\"btn btn-info\" onClick={()=>{this.BackPage()}}>חזור</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {\"טוען נתוני דף\"}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //\r\n    // generate(from,index) {\r\n    //     const doc = new docx.Document();\r\n    //     const path = require('path');\r\n    //     const fs = require('fs')\r\n    //     const { promisify } = require('util');\r\n    //     const data1={csvData}\r\n    //     const data2 = this.Requests(from,index)\r\n    //     const request = require('request@2.88.0');\r\n    //    const express = require(\"@runkit/runkit/express-endpoint/1.0.0\");\r\n    //     const app = express(exports);\r\n    //     const docx = require('docx@5.5.0');\r\n    //\r\n    //     const {\r\n    //         Document,\r\n    //         HorizontalPositionAlign,\r\n    //         HorizontalPositionRelativeFrom,\r\n    //         Media,\r\n    //         Packer,\r\n    //         Paragraph,\r\n    //         VerticalPositionAlign,\r\n    //         VerticalPositionRelativeFrom,\r\n    //\r\n    //         } = docx;\r\n    //\r\n    //     // const filePath = '../../../layout/images/logoUp.jpg';\r\n    //     console.log(\"from\",from)\r\n    //     console.log(\"index\",index)\r\n    //     console.log(\"data1\",data1)\r\n    //     console.log(\"data2\",data2)\r\n    //     const download = (uri, filename, callback) => {\r\n    //         request.head(uri, (err, res, body) => {\r\n    //             request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);\r\n    //         });\r\n    //     };\r\n    //\r\n    //     const URLUp = 'https://drive.google.com/file/d/1CUIqx9uc4pHVxgnQAEQzybUTsXqhFd02/view?usp=sharing';\r\n    //     const URLDown = 'https://drive.google.com/file/d/1iYQz7WDl0CkRMhSylwr3eVJTebIaXx0g/view?usp=sharing';\r\n    //     const URL = 'https://raw.githubusercontent.com/dolanmiu/docx/ccd655ef8be3828f2c4b1feb3517a905f98409d9/demo/images/cat.jpg';\r\n    //     app.get(\"/\", (req, res) => {\r\n    //         download(URL, 'cat.jpg', async () => {\r\n    //             const doc = new Document();\r\n    //\r\n    //             const image1 = Media.addImage(doc, fs.readFileSync(\"./cat.jpg\"));\r\n    //             const image6 = Media.addImage(doc, fs.readFileSync(\"./cat.jpg\"), 200, 200, {\r\n    //                 floating: {\r\n    //                     horizontalPosition: {\r\n    //                         offset: 1014400,\r\n    //                     },\r\n    //                     verticalPosition: {\r\n    //                         offset: 1014400,\r\n    //                     },\r\n    //                 },\r\n    //             });\r\n    //\r\n    //             const image7 = Media.addImage(doc, fs.readFileSync(\"./cat.jpg\"), 200, 200, {\r\n    //                 floating: {\r\n    //                     horizontalPosition: {\r\n    //                         relative: HorizontalPositionRelativeFrom.PAGE,\r\n    //                         align: HorizontalPositionAlign.RIGHT,\r\n    //                     },\r\n    //                     verticalPosition: {\r\n    //                         relative: VerticalPositionRelativeFrom.PAGE,\r\n    //                         align: VerticalPositionAlign.BOTTOM,\r\n    //                     },\r\n    //                 },\r\n    //             });\r\n    //\r\n    //             doc.addSection({\r\n    //                 children: [\r\n    //                     new Paragraph(\"Hello World\"),\r\n    //                     new Paragraph(image1),\r\n    //                     new Paragraph(image6),\r\n    //                     new Paragraph(image7),\r\n    //                 ],\r\n    //             });\r\n    //\r\n    //             const b64string = await Packer.toBase64String(doc);\r\n    //\r\n    //             res.setHeader('Content-Disposition', 'attachment; filename=My Document.docx');\r\n    //             res.send(Buffer.from(b64string, 'base64'));\r\n    //         });\r\n    //     })\r\n    //\r\n    //     try {\r\n    //         const data = fs.readFileSync('../../../layout/images/logoUp.jpg', 'utf8')\r\n    //         console.log(\"data\",data)\r\n    //     } catch (err) {\r\n    //         console.error(err)\r\n    //         console.log(\"err\")\r\n    //\r\n    //     }\r\n    //     var img = \"../../../layout/images/logoUp.jpg\"\r\n    //\r\n    //     doc.addSection({\r\n    //         properties: {},\r\n    //         headers: {\r\n    //             default: new Header({\r\n    //                 // children: [new Paragraph(\"Header text\")],\r\n    //                 children: [ new Paragraph(img),\r\n    //                     new Paragraph(data1),\r\n    //                     new Paragraph(data2)],\r\n    //\r\n    //             }),\r\n    //         },\r\n    //\r\n    //         children: [\r\n    //             new Paragraph({\r\n    //                 children: [\r\n    //                     new docx.TextRun(\"Hello World\"),\r\n    //                     new docx.TextRun({\r\n    //                         text: \"Foo Bar\",\r\n    //                         bold: true,\r\n    //                     }),\r\n    //\r\n    //                 ],\r\n    //\r\n    //             }),\r\n    //             new Paragraph({\r\n    //                 children: [\r\n    //                     new docx.TextRun({\r\n    //                         text: \"\\tGithub is the best\",\r\n    //                         bold: true,\r\n    //                     }),\r\n    //\r\n    //                 ],\r\n    //\r\n    //             }),\r\n    //\r\n    //         ],\r\n    //         footers: {\r\n    //             default: new Footer({\r\n    //                 children: [new Paragraph(\"Footer text\")],\r\n    //             }),\r\n    //         },\r\n    //     });\r\n    //\r\n    //     docx.Packer.toBlob(doc).then(blob => {\r\n    //         console.log(blob);\r\n    //         saveAs(blob, \"בקשה לרכישה.doc\");\r\n    //         console.log(\"Document created successfully\");\r\n    //\r\n    //\r\n    //     });\r\n    // }\r\n    generate(from,index){\r\n        console.log(\"from\",from)\r\n        console.log(\"index\",index)\r\n        const data2 = this.Requests(from,index)\r\n        console.log(\"data2\",data2)\r\n\r\n        class ComponentToPrint extends React.Component {\r\n            render() {\r\n                return (\r\n                    <div style={{textAligh:'center'}}><br/>\r\n                        <img  width=\"100%\" src=\"http://www.up2me.co.il/imgs/25602256.jpg\"/>\r\n                        {/*<img width=\"100%\"  src=\"http://www.up2me.co.il/imgs/22195825.jpg\" />*/}\r\n\r\n\r\n                    {/*// <div>*/}\r\n                    {/*//     <div>*/}\r\n                    {/*//         <img width=\"100%\" src=\"http://www.up2me.co.il/imgs/22195825.jpg\"/>*/}\r\n                    {/*//     </div>*/}\r\n                    {/*//*/}\r\n                    {/*    <div style={{fontSize: \"25px\", 'position': 'fixed',*/}\r\n                    {/*        'top': '50%',*/}\r\n                    {/*        'left': '70%',*/}\r\n                    {/*        'transform': 'translate(-50%, -50%)'}} content={() => this.Requests(from,index)}>*/}\r\n                    {/*            {csvData}*/}\r\n                    {/*    </div>*/}\r\n\r\n                         <div style={{fontSize: \"25px\", 'position': 'absolute',\r\n                            'top': '50%',\r\n                             'left': '70%',\r\n                             'transform': 'translate(-50%, -50%)'}} content={() => this.Requests(from,index)}>\r\n                                 <p className=\"Table-header\">{csvTableData}</p>\r\n                         </div>\r\n                         <img  width=\"100%\" src=\"http://www.up2me.co.il/imgs/25602256.jpg\"/>\r\n                     </div>\r\n\r\n                );\r\n            }\r\n        }\r\n        const Example = () => {\r\n            const componentRef = useRef();\r\n            const handlePrint = useReactToPrint({\r\n                content: () => componentRef.current,\r\n            });\r\n\r\n            return (\r\n                <div>\r\n                    <ComponentToPrint  ref={componentRef} />\r\n                    <div style={{textAlign:'center'}}>\r\n                        <button onClick={handlePrint}>הורדה</button>\r\n\r\n                    </div>\r\n                <div>\r\n                    <button id=\"go-back\" className=\"btn btn-info\" onClick={()=>{this.BackPage()}}>חזור</button>\r\n\r\n                </div>\r\n                </div>\r\n\r\n            );\r\n        };\r\n        render(<Example />, document.querySelector(\"#root\"));\r\n\r\n    }\r\n\r\n\r\n    Requests(form,index)\r\n    {\r\n        var user = form.uid\r\n        // console.log(\"form\",form)\r\n        //\r\n        // console.log(\"this.state.RequestResearcher\",this.state.RequestResearcher)\r\n\r\n        if(index>=this.state.RequestResearcher.length)\r\n        {\r\n            return\r\n        }\r\n        if(form && this.state.show) {\r\n            var requests = this.state.RequestResearcher[index].form\r\n            var date =form.date.toDate()\r\n            var day = date.getDate()\r\n            var month = date.getMonth()+1\r\n            var year = date.getFullYear()\r\n            if (day<10)\r\n                day='0'+day\r\n            if (month<10)\r\n                month='0'+month\r\n\r\n            return (\r\n                <div id=\"name-group\" className=\"form-group\" dir=\"rtl\">\r\n                    <div className=\"report\" id=\"report\">\r\n                        <div>\r\n                            <div dir=\"rtl\">\r\n                                <h4> שם החוקר: {form.nameResearcher}</h4>\r\n                                <h4> תאריך הבקשה: {day+'/'+month+\"/\"+year}</h4>\r\n                                <h4><label id=\"Q1L\" className=\"title-input\"> שם הספק: {requests.q1?(requests.q1):('')}</label></h4>\r\n                                <div id=\"name-group\">\r\n                                    <h4>  <label id=\"Q2L\" className=\"title-input\"> נייד: {requests.q2?(requests.q2):('')}</label>\r\n                                    </h4>\r\n                                </div>\r\n                                <div id=\"name-group\" >\r\n                                    <h4><label id=\"Q3L\" className=\"title-input\"> טופס הזמנה מס': {requests.q3?(requests.q3):('')}</label></h4>\r\n                                </div>\r\n                                <div id=\"name-group\" >\r\n                                    <h4> <label id=\"Q4L\" className=\"title-input\">מצורפת הצעת מחיר מס': {requests.q4?(requests.q4):('')}</label></h4>\r\n                                </div>\r\n\r\n                                <h4>פירוט ההצעה:</h4>\r\n                                <table border=\"1\">\r\n\r\n                                    <tr>\r\n                                        <th>מק\"ט</th>\r\n                                        <th>תיאור הפריט</th>\r\n                                        <th>מחיר במט\"ח</th>\r\n                                        <th>מחיר יח' בש\"ח</th>\r\n                                        <th>מס' יחידות</th>\r\n                                        <th>מחיר בש\"ח</th>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q5L\" className=\"title-input\" htmlFor=\"name\">{requests.q5?(requests.q5):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q6L\" className=\"title-input\" htmlFor=\"name\">{requests.q6?(requests.q6):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q7L\" className=\"title-input\" htmlFor=\"name\">{requests.q7?(requests.q7):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q8L\" className=\"title-input\" htmlFor=\"name\"> {requests.q8?(requests.q8):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"insert-name\" className=\"title-input\" htmlFor=\"name\"> {requests.q9?(requests.q9):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"insert-name\" className=\"title-input\" htmlFor=\"name\"> {requests.q10?(requests.q10):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q50L\" className=\"title-input\" htmlFor=\"name\">{requests.q50?(requests.q50):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q60L\" className=\"title-input\" htmlFor=\"name\">{requests.q60?(requests.q60):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q70L\" className=\"title-input\" htmlFor=\"name\">{requests.q70?(requests.q70):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q80L\" className=\"title-input\" htmlFor=\"name\"> {requests.q80?(requests.q80):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q90L\" className=\"title-input\" htmlFor=\"name\"> {requests.q90?(requests.q90):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q100L\" className=\"title-input\" htmlFor=\"name\"> {requests.q100?(requests.q100):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q51L\" className=\"title-input\" htmlFor=\"name\">{requests.q51?(requests.q51):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q61L\" className=\"title-input\" htmlFor=\"name\">{requests.q61?(requests.q61):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q71L\" className=\"title-input\" htmlFor=\"name\">{requests.q71?(requests.q71):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q81L\" className=\"title-input\" htmlFor=\"name\"> {requests.q81?(requests.q81):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q91L\" className=\"title-input\" htmlFor=\"name\"> {requests.q91?(requests.q91):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                        <td><div id=\"name-group\" >\r\n                                            <h4> <label id=\"Q101L\" className=\"title-input\" htmlFor=\"name\"> {requests.q101?(requests.q101):('')}</label></h4>\r\n                                        </div></td>\r\n\r\n                                    </tr>\r\n                                </table>\r\n\r\n                                <div id=\"name-group\" >\r\n                                    <h4> <label id=\"Q11L\" className=\"title-input\" htmlFor=\"name\">סה\"כ כולל מע\"מ: {requests.q11?(requests.q11):('')}</label></h4>\r\n                                </div>\r\n                                <div id=\"name-group\" >\r\n                                    <h4> <label id=\"Q12L\" className=\"title-input\" htmlFor=\"name\">נא לתאם קבלת משלוח עם: {requests.q12?(requests.q12):('')}</label></h4>\r\n                                </div>\r\n                                <div id=\"name-group\" >\r\n                                    <h4> <label id=\"Q13L\" className=\"title-input\" htmlFor=\"name\">מטרת הרכישה:</label></h4>{requests.q13?(requests.q13):('')}\r\n                                </div>\r\n                                <div id=\"name-group\" >\r\n                                    <h4> <label id=\"Q14L\" className=\"title-input\" htmlFor=\"name\">תקציב המחקר: {requests.q14?(requests.q14):('')}</label></h4>\r\n                                </div>\r\n                                <div id=\"name-group\" >\r\n                                    <h4> <label id=\"Q15L\" className=\"title-input\" htmlFor=\"name\">מס' המחקר: {requests.q15?(requests.q15):('')}</label></h4>\r\n                                </div>\r\n                                <div id=\"name-group\" >\r\n                                    <h4> <label id=\"Q16L\" className=\"title-input\" htmlFor=\"name\">חתימת החוקר: {requests.q16?(requests.q16):('')}</label></h4>\r\n                                </div>\r\n\r\n                                <div id=\"name-group\" >\r\n                                    <h4> <label id=\"Q17L\" className=\"title-input\" htmlFor=\"name\">תאריך החשבונית: {requests.q17?(requests.q17):('')}</label></h4>\r\n                                </div>\r\n                                <div id=\"name-group\" >\r\n                                    <h4> <label id=\"Q18L\" className=\"title-input\" htmlFor=\"name\">מס' חשבונית: {requests.q18?(requests.q18):('')}</label></h4>\r\n                                </div>\r\n\r\n                                <Grid item xs={6}>\r\n                                    <TextField\r\n                                        inputProps={{style: {textAlign: 'center'}}}\r\n                                        id=\"q17i\"\r\n                                        name=\"q17\"\r\n                                        type=\"tel\"\r\n                                        autoComplete=\"off\"\r\n                                        value={this.state.q17}\r\n                                        onChange={(e) => {\r\n                                            this.handleChange(e,year+'-'+month+\"-\"+day,user,sum)\r\n                                            //console.log(\"auth.currentUser.uid\",auth.currentUser.uid)\r\n                                            if(sum==0)\r\n                                                sum=1\r\n                                        }}\r\n                                        variant=\"standard\"\r\n                                        fullWidth\r\n                                        label=\"תאריך החשבונית\"\r\n                                    />\r\n                                </Grid>\r\n                                <br/>\r\n\r\n\r\n                                <Grid item xs={6} hidden={this.state.q17==''}>\r\n                                    <TextField\r\n                                        inputProps={{style: {textAlign: 'center'}}}\r\n                                        id=\"q18i\"\r\n                                        name=\"q18\"\r\n                                        type=\"tel\"\r\n                                        autoComplete=\"off\"\r\n                                        value={this.state.q18}\r\n                                        onChange={(e) => {\r\n                                            this.handleChange(e,year+'-'+month+\"-\"+day,user,sum)\r\n                                            if (sum==0)\r\n                                                sum=2\r\n                                        }}\r\n                                        variant=\"standard\"\r\n                                        fullWidth\r\n                                        label=\"מס' חשבונית\"\r\n                                    />\r\n                                </Grid>\r\n                                <button id=\"sendData\" className=\"btn btn-info\" onClick={() => {\r\n\r\n                                    sum=0\r\n                                    this.sendRequest(this.state.form,year+'-'+month+\"-\"+day,user)\r\n\r\n                                }}>שמירת נתונים\r\n                                </button>\r\n                                {/*</Grid>*/}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (<div></div>)\r\n    }\r\n\r\n    parser(date)\r\n    {\r\n        var year=''\r\n        var month = ''\r\n        var day = ''\r\n        var j=0;\r\n        for(var i =0; i<date.length; i++)\r\n        {\r\n            if(j===0 && date[i]!=='-')\r\n            {\r\n                year+=date[i]\r\n            }\r\n            else if(j===1 && date[i]!=='-')\r\n            {\r\n                month+=date[i]\r\n            }\r\n            else if(j===2 && date[i]!=='-')\r\n            {\r\n                day+=date[i]\r\n            }\r\n            else\r\n                j++\r\n\r\n        }\r\n        year = parseInt(year)\r\n        month=parseInt(month)\r\n        day= parseInt(day)\r\n        return {year,month,day}\r\n    }\r\n\r\n    async handleChange(event,date,user,sum)\r\n    {\r\n        var form=''\r\n        var user1 =form.uid\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        var e = event.target\r\n    //     console.log(\"user\",user)\r\n    //     console.log(\"user1\",user1)\r\n    //     console.log(\"value2\",value)\r\n    //     console.log(\"e2\",e)\r\n    //     console.log(\"this.state.q18\",this.state.q18)\r\n    //     console.log(\"this.state.q17\",this.state.q17)\r\n\r\n    if( (sum==0&&name === 'q17') || (sum==1&&name === 'q18') )\r\n    {\r\n\r\n\r\n        if(name === 'q17' && event.target.value!=='' )\r\n        {\r\n\r\n\r\n            this.loadSpinner(true,\"טוען נתוני חוקר\")\r\n                // console.log(\"this.state.teamName\",this.state.teamName)\r\n                // console.log(\"auth.currentUser.uid\",auth.currentUser.uid)\r\n\r\n                var formResearcher = await db.collection(\"researcher\").doc(user).collection(\"request\").doc(date).get()\r\n\r\n            //     console.log(\"formResearcher\",formResearcher)\r\n            // console.log(\"formResearcher.data()2\",formResearcher.data())\r\n\r\n            if(formResearcher.data())\r\n            {\r\n                this.setState({form:formResearcher.data().form})\r\n                form = this.state.form\r\n                form[name] = value;\r\n                this.setState({form:form})\r\n\r\n            }\r\n\r\n        }\r\n        else if(name === 'q18')\r\n        {\r\n            form = this.state.form\r\n            form[name] = value;\r\n            this.setState({form:form})\r\n        }\r\n    }\r\n    else if((sum==0&&name === 'q18') || (sum==2&&name === 'q17')){\r\n        if(name === 'q18' && event.target.value!=='' )\r\n        {\r\n            this.loadSpinner(true,\"טוען נתוני חוקר\")\r\n            // console.log(\"this.state.teamName\",this.state.teamName)\r\n            // console.log(\"auth.currentUser.uid\",auth.currentUser.uid)\r\n\r\n            var formResearcher = await db.collection(\"researcher\").doc(user).collection(\"request\").doc(date).get()\r\n\r\n            //     console.log(\"formResearcher\",formResearcher)\r\n            // console.log(\"formResearcher.data()2\",formResearcher.data())\r\n\r\n            if(formResearcher.data())\r\n            {\r\n                // console.log(\"222222222222\")\r\n                // console.log(\"formResearcher.data()\",formResearcher.data())\r\n                // console.log(\"formResearcher.data().form\",formResearcher.data().form)\r\n                this.setState({form:formResearcher.data().form})\r\n                form = this.state.form\r\n                form[name] = value;\r\n                this.setState({form:form})\r\n\r\n            }\r\n\r\n        }\r\n        else if(name === 'q17')\r\n        {\r\n\r\n            form = this.state.form\r\n            form[name] = value;\r\n            this.setState({form:form})\r\n        }\r\n    }\r\n        this.loadSpinner(false)\r\n    }\r\n\r\n\r\n    async handleSubmit(event)\r\n    {\r\n        if(!this.state.date) {\r\n            return;\r\n        }\r\n        if(this.state.date === this.state.prevDate) {\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            return ;\r\n        }\r\n        this.loadSpinner(true,\"מעדכן נתונים חדשים\")\r\n        this.setState({prevDate:this.state.date});\r\n        // console.log(\"in\");\r\n        var request = (await db.collection(\"researcher\").doc(auth.currentUser.uid).get()).data().type;\r\n        const collection = await db.collection('researcher').where(\"request\",\"==\",request).get()\r\n        const researchers = [];\r\n        const date = this.state.date\r\n        const collectionPromisesTeam = collection.docs.map( async function(doc) {\r\n            var ref =await db.collection(\"researcher\").doc(doc.id).collection(\"request\").doc(date).get()\r\n            var user = await db.collection(\"researcher\").doc(doc.id).get()\r\n            return [ref,user]\r\n\r\n        })\r\n\r\n        Promise.all(collectionPromisesTeam).then(res => {\r\n            // console.log(\"end prommis\");\r\n            res.forEach(doc=>{\r\n                var approv = false;\r\n                var Request = ''\r\n                if(doc[0].exists) {\r\n                    approv = true;\r\n                    Request = doc[0].data().RequestPurchase;\r\n                }\r\n                var data = doc[1].data();\r\n                var ref = doc[1].id;\r\n                researchers.push({data,approv,ref,Request})\r\n            })\r\n            let i;\r\n            // console.log(researchers.length)\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            for (i=0;i<researchers.length;i++)\r\n            {\r\n                if(!this.state.researchers)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n                else if(researchers[i].approv!==this.state.researchers[i].approv)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n\r\n            }\r\n            this.loadSpinner(false)\r\n        });\r\n\r\n\r\n    }\r\n    loadPage(event){\r\n        this.setState({loading:event})\r\n    }\r\n\r\n    async sendRequest(form,date,user){\r\n        // console.log(\"form2\",form)\r\n        // console.log(\"form.date2\",form.date)\r\n        // console.log(\"user2\",user)\r\n\r\n        this.loadSpinner(true,\"שליחת הבקשה\")\r\n        var path = auth.currentUser.uid\r\n        try{\r\n            var researcher = await db.collection(\"researcher\").doc(user)\r\n            // console.log(\"form1\",form)\r\n            var newDate = await researcher.collection(\"request\").doc(form.date);\r\n\r\n            newDate.set({\r\n                form: form,\r\n                date:form.date\r\n            }).then(async ()=>{\r\n                await this.addDataToTeam(researcher,form.date,user);\r\n                alert(\"הטופס נשלח בהצלחה\")\r\n                this.loadSpinner(false)\r\n                window.location.reload(true);\r\n\r\n            })\r\n\r\n        }catch(error) {\r\n            console.log(\"err2\")\r\n\r\n            alert(error.message)\r\n            this.loadSpinner(false)\r\n        }\r\n    }\r\n\r\n\r\n    async addDataToTeam(researcher,date,user)\r\n    {\r\n        // console.log(\"researcher2\",researcher)\r\n        // console.log(\"date2\",date)\r\n        //console.log(\"user3\",user)\r\n\r\n\r\n        var formResearcher = (await researcher.collection('request').doc(date).get()).ref;\r\n        try{\r\n            var team = (await researcher.get()).data();\r\n            //var name =(team.fname + \" \"+team.lname);\r\n            var name=this.state.teamName\r\n\r\n            var teamCollection = await db.collection(\"Data\").doc(team.team.id)\r\n            var newDate = await teamCollection.collection(\"Requests\").doc(date)\r\n            var doc =  await newDate.get()\r\n            var {year,month,day} = this.parser(date)\r\n            var fullDate = new Date()\r\n            fullDate.setTime(0)\r\n            fullDate.setFullYear(year,month-1,day)\r\n            //\r\n            // console.log(\"team.team.id\",team.team.id)\r\n            // console.log(\"teamCollection\",teamCollection)\r\n            // console.log(\"newDate\",newDate)\r\n            // console.log(\"fullDate\",fullDate)\r\n            // console.log(\"formResearcher\",formResearcher)\r\n\r\n\r\n\r\n            if(!doc.exists){\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.set({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                    nameResearcher: this.state.teamName,\r\n                   // nameResearcher: team.fname + \" \"+team.lname,\r\n\r\n                })\r\n            }\r\n            else {\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.update({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                })\r\n            }\r\n        }catch(error) {\r\n            alert(error.message)\r\n        }\r\n\r\n    }\r\n    approvResearcher(researcher)\r\n    {\r\n\r\n        var researchers =  this.state.researchers;\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].approv = !researchers[i].approv;\r\n                this.setState({researchers:researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    RequestPurchase(event,researcher)\r\n    {\r\n        var researchers = this.state.researchers;\r\n        // console.log(event.target.value);\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].Request = event.target.value\r\n                this.setState({researchers: researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    GetDates(date)\r\n    {\r\n        // if(this.state.forms || this.state.show)\r\n        //     return\r\n\r\n        date = this.parser(date)\r\n        var parsDate = new Date()\r\n        parsDate.setTime(0)\r\n        parsDate.setFullYear(date[\"year\"],date[\"month\"]-1,date[\"day\"])\r\n\r\n        return parsDate;\r\n\r\n\r\n    }\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            // pathname: `/${page}/${this.state.user.id}`,\r\n            pathname: `/Temp${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default mngRequestPurchase;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\DropzoneFiles.js",["214","215","216","217","218"],"//העלאת דוח מדעי של החוקר\r\nimport React, {Component} from 'react';\r\nimport firebase, {auth, db, storage} from \"../../../../firebase/firebase\";\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass DropzoneFiles extends Component {\r\n    constructor() {\r\n        super();\r\n        this.onDrop = (files) => {\r\n            this.setState({files})\r\n        };\r\n        this.state = {\r\n            files: [],\r\n            maxFile:5,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        auth.onAuthStateChanged(async user => {\r\n            if (user) {\r\n                this.setState({user:user})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async upload(files)\r\n    {\r\n\r\n        if(files!==null && files!==undefined&& files.length<=0)\r\n            return;\r\n\r\n        var file = files[files.length-1]\r\n        var user =  this.state.user\r\n        var metadata = {\r\n            customMetadata: {\r\n                'user': user.uid,\r\n            }\r\n        };\r\n\r\n        var storageRef = storage.ref()\r\n\r\n\r\n\r\n\r\n        var uploadTask = storageRef.child('forms/' + file.key).put(file,metadata);\r\n\r\n\r\n// Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n            (snapshot) => {\r\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                // console.log('Upload is ' + progress + '% done');\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        console.log('Upload is running');\r\n                        break;\r\n                }\r\n            },\r\n            (error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n                switch (error.code) {\r\n                    case 'storage/unauthorized':\r\n                        // User doesn't have permission to access the object\r\n                        break;\r\n                    case 'storage/canceled':\r\n                        // User canceled the upload\r\n                        break;\r\n\r\n                    // ...\r\n\r\n                    case 'storage/unknown':\r\n                        // Unknown error occurred, inspect error.serverResponse\r\n                        break;\r\n                }\r\n            },\r\n            () => {\r\n                // Upload completed successfully, now we can get the download URL\r\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    // console.log('File available at', downloadURL);\r\n                    db.collection(\"researcher\").doc(user.uid).collection(\"ScientificReport\").add({\r\n                        name: file.key,\r\n                        time: new Date().toLocaleString(),\r\n                        link:downloadURL,\r\n                    }).then(()=>{\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        console.log(\"upload end\")\r\n                        this.upload(newFiles)\r\n                    }).catch((err)=>{\r\n                        storage.refFromURL(downloadURL).delete()\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        this.upload(newFiles)\r\n                    })\r\n\r\n\r\n                });\r\n            }\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name}\r\n                {/*{console.log(file)}*/}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <Dropzone onDrop={this.onDrop}>\r\n                {({getRootProps, getInputProps}) => (\r\n                    <section className=\"container\">\r\n                        <div {...getRootProps({className: 'dropzone'})}>\r\n\r\n                            <div style={{backgroundColor: \"#a0a0a0\", width: 400, height: 170,textAlign: 'center', padding: '100px 0px 0px 0px'}}>\r\n\r\n                                יש לגרור לכאן את הקבצים\r\n                                <br/>\r\n                                <br/>\r\n                                או ללחוץ כאן\r\n\r\n                                <input {...getInputProps()} />\r\n                            </div>\r\n                        </div>\r\n                        <aside>\r\n                            {\r\n\r\n                                files.length <= 0 ?\r\n                                    <h4></h4>:\r\n                                    <div>\r\n                                        {\r\n                                            this.state.maxFile!=undefined && files.length > this.state.maxFile?\r\n                                                <h4> מספר הקבצים המקסימלי להעלאה הוא {this.state.maxFile}</h4>:\r\n                                                <div>\r\n                                                    <h4> מספר הקבצים להעלאה - {files.length}</h4>\r\n                                                    <ul>{files}</ul>\r\n                                                    <button onClick={()=>{\r\n                                                        this.upload(files)\r\n                                                    }}>העלה קבצים</button>\r\n                                                </div>\r\n                                        }\r\n\r\n                                    </div>\r\n                            }\r\n\r\n\r\n                        </aside>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default  DropzoneFiles ;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ScientificReport.js",["219","220","221","222","223","224","225","226","227"],"import React from \"react\";\r\nimport {auth, db, GetFormDownload, getUser, signOut} from '../../../../firebase/firebase';\r\nimport './Researcher.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport firebase from \"firebase\";\r\nimport {NextPage} from \"../UserPage\";\r\nimport DropzoneFiles from \"./DropzoneFiles\";\r\nimport MyDropzone from \"./DropzoneFiles.js\";\r\nimport AcceptMaxFiles from \"./DropzoneFiles.js\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst options = [\r\n]\r\n\r\n\r\nclass ScientificReport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n\r\n        };\r\n\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n    loadPage(event){\r\n        this.setState({loading:event})\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                // console.log(\"in1\")\r\n                var type = await getUser(user)\r\n                // console.log(type)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    // console.log(\"in2\")\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else\r\n                {\r\n                    // console.log(\"in3\")\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n            // console.log(\"in4\")\r\n            var teamName = await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n            // if(!teamName.data().teamName)\r\n            // {\r\n            //     alert(\"אינך משוייכ/ת לקבוצה יש לפנות למנהל\")\r\n            //     this.loadSpinner(false)\r\n            //     this.BackPage()\r\n            // }\r\n            this.loadSpinner(false,\"\")\r\n            this.setState({loadPage:true})\r\n            this.render()\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"ReportScientific\" className=\"sec-design\">\r\n\r\n                {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                        //   css={override}\r\n                                size={120}\r\n                                color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n    }\r\n                    <Grid container spacing={2}>\r\n                        <button id=\"ReportScientific\" className=\"btn btn-info\" onClick={async ()=>{\r\n                            var file = await GetFormDownload()\r\n                            const link = document.createElement('a');\r\n                            link.href = file\r\n                            document.body.appendChild(link);\r\n                            link.click();\r\n                            document.body.removeChild(link);\r\n\r\n\r\n                        }}>הורדת טופס דוח מדעי למילוי<span\r\n                            className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                        <Grid item xs={5}\r\n                              container\r\n                              direction=\"column\"\r\n                              justify=\"flex-start\"\r\n                              alignItems=\"flex-start\"\r\n                        >\r\n                            <DropzoneFiles/>\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                            this.loadPage()\r\n                            this.BackPage()\r\n                        }}>חזור לתפריט\r\n                        </button>\r\n                    </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Researcher/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport  default  ScientificReport;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\financialReports.js",["228","229","230","231","232","233","234","235","236"],"import React from \"react\";\r\nimport {auth, db, GetFormDownloadReportsfinancial, getUser, signOut} from '../../../../firebase/firebase';\r\nimport './Manager.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport firebase from \"firebase\";\r\nimport {NextPage} from \"../UserPage\";\r\nimport DropzoneFiles1 from \"./DropzoneFiles1\";\r\nimport MyDropzone from \"./DropzoneFiles1.js\";\r\nimport AcceptMaxFiles from \"./DropzoneFiles1.js\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst options = [\r\n]\r\n\r\n\r\nclass financialReports extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n\r\n        };\r\n\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n    loadPage(event){\r\n        this.setState({loading:event})\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                // console.log(\"in1\")\r\n                var type = await getUser(user)\r\n                // console.log(type)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    // console.log(\"in2\")\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else\r\n                {\r\n                    // console.log(\"in3\")\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n            // console.log(\"in4\")\r\n            var teamName = await db.collection(\"manager\").doc(auth.currentUser.uid).get()\r\n            // if(!teamName.data().teamName)\r\n            // {\r\n            //     alert(\"אינך משוייכ/ת לקבוצה יש לפנות למנהל\")\r\n            //     this.loadSpinner(false)\r\n            //     this.BackPage()\r\n            // }\r\n            this.loadSpinner(false,\"\")\r\n            this.setState({loadPage:true})\r\n            this.render()\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"Reportsfinancial\" className=\"sec-design\">\r\n\r\n                {!this.state.spinner[0] ? \"\" :\r\n                    <div id='fr'>\r\n                        {this.state.spinner[1]}\r\n                        <div className=\"sweet-loading\">\r\n                            <ClipLoader style={{\r\n                                backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                borderRadius: \"25px\"\r\n                            }}\r\n                                //   css={override}\r\n                                        size={120}\r\n                                        color={\"#123abc\"}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <Grid container spacing={2}>\r\n                    <button id=\"Reportsfinancial\" className=\"btn btn-info\" onClick={async ()=>{\r\n                        var file = await GetFormDownloadReportsfinancial()\r\n                        const link = document.createElement('a');\r\n                        link.href = file\r\n                        document.body.appendChild(link);\r\n                        link.click();\r\n                        document.body.removeChild(link);\r\n\r\n\r\n                    }}>הורדת דוח כספי למילוי<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                    <Grid item xs={5}\r\n                          container\r\n                          direction=\"column\"\r\n                          justify=\"flex-start\"\r\n                          alignItems=\"flex-start\"\r\n                    >\r\n                        <DropzoneFiles1/>\r\n                    </Grid>\r\n\r\n\r\n\r\n                    <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                        this.loadPage()\r\n                        this.BackPage()\r\n                    }}>חזור לתפריט\r\n                    </button>\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport  default  financialReports;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\DropzoneFiles1.js",["237","238","239","240","241"],"//העלאת דוח כספי של המנהל\r\nimport React, {Component} from 'react';\r\nimport firebase, {auth, db, storage} from \"../../../../firebase/firebase\";\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass DropzoneFiles1 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.onDrop = (files) => {\r\n            this.setState({files})\r\n        };\r\n        this.state = {\r\n            files: [],\r\n            maxFile:5,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        auth.onAuthStateChanged(async user => {\r\n            if (user) {\r\n                this.setState({user:user})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async upload(files)\r\n    {\r\n\r\n        if(files!==null && files!==undefined&& files.length<=0)\r\n            return;\r\n\r\n        var file = files[files.length-1]\r\n        var user =  this.state.user\r\n        var metadata = {\r\n            customMetadata: {\r\n                'user': user.uid,\r\n            }\r\n        };\r\n\r\n        var storageRef = storage.ref()\r\n\r\n\r\n\r\n\r\n        var uploadTask = storageRef.child('forms/' + file.key).put(file,metadata);\r\n\r\n\r\n// Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n            (snapshot) => {\r\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                // console.log('Upload is ' + progress + '% done');\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        console.log('Upload is running');\r\n                        break;\r\n                }\r\n            },\r\n            (error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n                switch (error.code) {\r\n                    case 'storage/unauthorized':\r\n                        // User doesn't have permission to access the object\r\n                        break;\r\n                    case 'storage/canceled':\r\n                        // User canceled the upload\r\n                        break;\r\n\r\n                    // ...\r\n\r\n                    case 'storage/unknown':\r\n                        // Unknown error occurred, inspect error.serverResponse\r\n                        break;\r\n                }\r\n            },\r\n            () => {\r\n                // Upload completed successfully, now we can get the download URL\r\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    // console.log('File available at', downloadURL);\r\n                    db.collection(\"managers\").doc(user.uid).collection(\"FinancialReport\").add({\r\n                        name: file.key,\r\n                        time: new Date().toLocaleString(),\r\n                        link:downloadURL,\r\n                    }).then(()=>{\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        console.log(\"upload end\")\r\n                        this.upload(newFiles)\r\n                    }).catch((err)=>{\r\n                        storage.refFromURL(downloadURL).delete()\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        this.upload(newFiles)\r\n                    })\r\n\r\n\r\n                });\r\n            }\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name}\r\n                {/*{console.log(file)}*/}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <Dropzone onDrop={this.onDrop}>\r\n                {({getRootProps, getInputProps}) => (\r\n                    <section className=\"container\">\r\n                        <div {...getRootProps({className: 'dropzone'})}>\r\n\r\n                            <div style={{backgroundColor: \"#a0a0a0\", width: 400, height: 170,textAlign: 'center', padding: '100px 0px 0px 0px'}}>\r\n\r\n                                יש לגרור לכאן את הקבצים\r\n                                <br/>\r\n                                <br/>\r\n                                או ללחוץ כאן\r\n\r\n                                <input {...getInputProps()} />\r\n                            </div>\r\n                        </div>\r\n                        <aside>\r\n                            {\r\n\r\n                                files.length <= 0 ?\r\n                                    <h4></h4>:\r\n                                    <div>\r\n                                        {\r\n                                            this.state.maxFile!=undefined && files.length > this.state.maxFile?\r\n                                                <h4> מספר הקבצים המקסימלי להעלאה הוא {this.state.maxFile}</h4>:\r\n                                                <div>\r\n                                                    <h4> מספר הקבצים להעלאה - {files.length}</h4>\r\n                                                    <ul>{files}</ul>\r\n                                                    <button onClick={()=>{\r\n                                                        this.upload(files)\r\n                                                    }}>העלה קבצים</button>\r\n                                                </div>\r\n                                        }\r\n\r\n                                    </div>\r\n                            }\r\n\r\n\r\n                        </aside>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default  DropzoneFiles1 ;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ResearchBudgets.js",["242","243","244","245","246","247","248","249"],"import React,{ Fragment } from \"react\";\r\nimport {auth, db, getUser} from '../../../../firebase/firebase';\r\nimport { Radio, RadioGroup} from \"@material-ui/core\";\r\nimport './Manager.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport firebase from \"firebase\";\r\n//import {storage} from \"./firebase\";\r\n\r\nimport ReactDOM from 'react-dom'\r\nimport SignatureCanvas from 'react-signature-canvas'\r\n\r\nclass ResearchBudgets extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            page:'menu',\r\n            user: props.location,\r\n            error:false,\r\n            loading: true,\r\n            rule:\"Manager\",\r\n            prevDate:'',\r\n            imgUrl: \"\",\r\n\r\n            viewResearcher: false,\r\n            date:\"\",\r\n            form : {\r\n                date:\"\",\r\n                team:\"\",\r\n                name:\"\",\r\n            }\r\n        };\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        // this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.approvResearcher = this.approvResearcher.bind(this)\r\n\r\n        this.RequestPurchase = this.RequestPurchase.bind(this)\r\n\r\n\r\n    }\r\n\r\n    parser(date)\r\n    {\r\n        var year=''\r\n        var month = ''\r\n        var day = ''\r\n        var j=0;\r\n        for(var i =0; i<date.length; i++)\r\n        {\r\n            if(j===0 && date[i]!=='-')\r\n            {\r\n                year+=date[i]\r\n            }\r\n            else if(j===1 && date[i]!=='-')\r\n            {\r\n                month+=date[i]\r\n            }\r\n            else if(j===2 && date[i]!=='-')\r\n            {\r\n                day+=date[i]\r\n            }\r\n            else\r\n                j++\r\n\r\n        }\r\n        year = parseInt(year)\r\n        month=parseInt(month)\r\n        day= parseInt(day)\r\n        return {year,month,day}\r\n    }\r\n\r\n    loadSpinner(event,massage = \"\"){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n    save() {\r\n        const imgUrl = this.canvas.toDataURL(\"image/png\");\r\n        console.log(imgUrl)\r\n        var form = this.state.form\r\n        form[\"signature\"] = imgUrl;\r\n        this.setState({form:form})\r\n        this.setState({ imgUrl: imgUrl });\r\n\r\n    }\r\n    reset() {\r\n        this.canvas.clear();\r\n    }\r\n    canvas = {\r\n        clear: () => {},\r\n        toDataURL: (param) => {\r\n            return \"\";\r\n        },\r\n    };\r\n    async handleChange(event)\r\n    {\r\n        var form=''\r\n\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        var e = event.target\r\n        // console.log(\"name2\",name)\r\n        // console.log(\"value2\",value)\r\n        // console.log(\"e2\",e)\r\n\r\n        if(name === 'date' && event.target.value!=='' )\r\n        {\r\n            // console.log(\"1111111111111\")\r\n\r\n            this.loadSpinner(true,\"טוען נתוני חוקר\")\r\n            var formResearcher = await db.collection(\"researcher\").doc(auth.currentUser.uid).collection(\"request\").doc(event.target.value).get()\r\n\r\n            if(formResearcher.data())\r\n            {\r\n                // console.log(\"222222222222222\")\r\n                this.setState({form:formResearcher.data().form})\r\n            }\r\n            else\r\n            {\r\n                // console.log(\"33333333333333\")\r\n                var researcherData= await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n                form ={}\r\n                form[name] = value;\r\n                form['name']=researcherData.data().fname+' '+researcherData.data().lname;\r\n                // form['team']=researcherData.data().teamName\r\n                this.setState({form:form})\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // console.log(\"44444444444444\")\r\n            form = this.state.form\r\n            form[name] = value;\r\n            this.setState({form:form})\r\n        }\r\n        this.loadSpinner(false)\r\n\r\n    }\r\n\r\n\r\n    async handleSubmit(event)\r\n    {\r\n        if(!this.state.date) {\r\n            return;\r\n        }\r\n        if(this.state.date === this.state.prevDate) {\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            return ;\r\n        }\r\n        this.loadSpinner(true,\"מעדכן נתונים חדשים\")\r\n        this.setState({prevDate:this.state.date});\r\n        // console.log(\"in\");\r\n        var request = (await db.collection(\"researcher\").doc(auth.currentUser.uid).get()).data().type;\r\n        const collection = await db.collection('researcher').where(\"request\",\"==\",request).get()\r\n        const researchers = [];\r\n        const date = this.state.date\r\n        const collectionPromisesTeam = collection.docs.map( async function(doc) {\r\n            var ref =await db.collection(\"researcher\").doc(doc.id).collection(\"request\").doc(date).get()\r\n            var user = await db.collection(\"researcher\").doc(doc.id).get()\r\n            return [ref,user]\r\n\r\n        })\r\n\r\n        Promise.all(collectionPromisesTeam).then(res => {\r\n            // console.log(\"end prommis\");\r\n            res.forEach(doc=>{\r\n                var approv = false;\r\n                var Request = ''\r\n                if(doc[0].exists) {\r\n                    approv = true;\r\n                    Request = doc[0].data().RequestPurchase;\r\n                }\r\n                var data = doc[1].data();\r\n                var ref = doc[1].id;\r\n                researchers.push({data,approv,ref,Request})\r\n            })\r\n            let i;\r\n            // console.log(researchers.length)\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            for (i=0;i<researchers.length;i++)\r\n            {\r\n                if(!this.state.researchers)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n                else if(researchers[i].approv!==this.state.researchers[i].approv)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n\r\n            }\r\n            this.loadSpinner(false)\r\n        });\r\n\r\n\r\n    }\r\n    loadPage(event){\r\n        this.setState({loading:event})\r\n    }\r\n\r\n    async sendRequest(form){\r\n        console.log(\"form2\",form)\r\n        console.log(\"form.date2\",form.date)\r\n\r\n        this.loadSpinner(true,\"שליחת הבקשה\")\r\n        var path = auth.currentUser.uid\r\n        try{\r\n            var researcher = await db.collection(\"researcher\").doc(path)\r\n            // console.log(\"form1\",form)\r\n            var newDate = await researcher.collection(\"request\").doc(form.date);\r\n            // console.log(\"form.date\",form.date)\r\n            // console.log(\"form\",form)\r\n\r\n            newDate.set({\r\n                form: form,\r\n                date:form.date,\r\n            }).then(async ()=>{\r\n                await this.addDataToTeam(researcher,form.date);\r\n                alert(\"הטופס נשלח בהצלחה\")\r\n                this.loadSpinner(false)\r\n                window.location.reload(true);\r\n\r\n            })\r\n\r\n        }catch(error) {\r\n            console.log(\"err2\")\r\n\r\n            alert(error.message)\r\n            this.loadSpinner(false)\r\n        }\r\n    }\r\n    async addDataToTeam(researcher,date)\r\n    {\r\n        console.log(\"researcher2\",researcher)\r\n        console.log(\"date2\",date)\r\n\r\n        var user = firebase.auth().currentUser;\r\n\r\n        var formResearcher = (await researcher.collection('request').doc(date).get()).ref;\r\n        try{\r\n            var team = (await researcher.get()).data();\r\n            var name =(team.fname + \" \"+team.lname);\r\n            // console.log(\"name2\",name)\r\n            // console.log(\"team2\",team)\r\n\r\n            var teamCollection = await db.collection(\"Data\").doc(team.team.id)\r\n            // var Collection = await teamCollection.collection(\"Requests\").doc(name)\r\n            var newDate = await teamCollection.collection(\"Requests\").doc(date)\r\n            // var newDate = Collection.collection(date).doc();\r\n            var doc =  await newDate.get()\r\n            var {year,month,day} = this.parser(date)\r\n            var fullDate = new Date()\r\n            fullDate.setTime(0)\r\n            fullDate.setFullYear(year,month-1,day)\r\n\r\n            // console.log(\"team.team.id\",team.team.id)\r\n            // console.log(\"teamCollection\",teamCollection)\r\n            // console.log(\"newDate\",newDate)\r\n            // console.log(\"fullDate\",fullDate)\r\n            // console.log(\"formResearcher\",formResearcher)\r\n\r\n            // var temp = newDate.set({\r\n            //     date:fullDate,\r\n            //     RequestResearcher: formResearcher,\r\n            //     nameResearcher: team.fname + \" \"+team.lname,\r\n            //\r\n            // })\r\n            //\r\n            // // db.collection(\"Data\").doc().set({name})\r\n            // await db.collection(\"Data\").doc().collection(name).set(temp).then(()=>{\r\n            //         alert(\"הדוח נוסף\")\r\n            //         return true;\r\n            //     }\r\n            // ).catch((e)=>{\r\n            //     alert(\"הדוח לא הוסף\")\r\n            //     return false;\r\n            // })\r\n\r\n\r\n            if(!doc.exists){\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.set({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                    nameResearcher: team.fname + \" \"+team.lname,\r\n                    uid: user.uid\r\n\r\n                })\r\n            }\r\n            else {\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.update({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                    uid: user.uid\r\n\r\n                })\r\n            }\r\n        }catch(error) {\r\n            alert(error.message)\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                // console.log(\"in1\")\r\n                var type = await getUser(user)\r\n                // console.log(type)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    // console.log(\"in2\")\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else\r\n                {\r\n                    // console.log(\"in3\")\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n            // console.log(\"in4\")\r\n            var teamName = await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n            // if(!teamName.data().teamName)\r\n            // {\r\n            //     alert(\"אינך משוייכ/ת לקבוצה יש לפנות למנהל\")\r\n            //     this.loadSpinner(false)\r\n            //     this.BackPage()\r\n            // }\r\n            this.loadSpinner(false,\"\")\r\n            this.setState({loadPage:true})\r\n            this.render()\r\n\r\n        })\r\n\r\n    }\r\n\r\n    approvResearcher(researcher)\r\n    {\r\n\r\n        var researchers =  this.state.researchers;\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].approv = !researchers[i].approv;\r\n                this.setState({researchers:researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    RequestPurchase(event,researcher)\r\n    {\r\n        var researchers = this.state.researchers;\r\n        // console.log(event.target.value);\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].Request = event.target.value\r\n                this.setState({researchers: researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            return (\r\n                <div id=\"ResearcherRequest\" className=\"sec-design\">\r\n\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <h4>דו\"ח תקציבי למחקר משרד המדע</h4>\r\n                    <Grid item xs={5}>\r\n                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">מתאריך </label>\r\n                        <input type=\"date\" className=\"form-control\"  name=\"date\"\r\n                               onChange={(e)=>{\r\n                                   this.setState({dateFrom:e.target.value,options:null,show:false,teamName:null})\r\n                               }}\r\n                               required/>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">עד תאריך </label>\r\n                        <input type=\"date\" className=\"form-control\" id=\"insert-date\" name=\"date\"\r\n                               onChange={(e)=>{\r\n                                   this.setState({dateTo:e.target.value,options:null,show:false,teamName:null})\r\n                               }}\r\n                               required/>\r\n                    </Grid>\r\n\r\n                    <div dir=\"rtl\">\r\n\r\n\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q1i\"\r\n                                name=\"q1\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q1}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם הגוף המממן\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        {/*<div id=\"name-group\">*/}\r\n                        {/*    <label id=\"QL\" className=\"title-input\">טלפון המכון: 04-6123901. פקס: 04-6961930</label>*/}\r\n                        {/*    <br/>*/}\r\n                        {/*</div>*/}\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q2i\"\r\n                                name=\"q2\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q2}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"חוקר ראשי\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q3i\"\r\n                                name=\"q3\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q3}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"מס מחקר\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q4i\"\r\n                                name=\"q4\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q4}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם נושא המחקר\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q5i\"\r\n                                name=\"q5\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q5}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סכום מחקר כולל\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q6i\"\r\n                                name=\"q6\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q6}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סכום מחקר שנתי\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <h4>פירוט ההוצאות:</h4>\r\n                        <h4>שנה 1:</h4>\r\n\r\n                        <table border=\"1\">\r\n\r\n                            <tr>\r\n                                <th>תאריך</th>\r\n                                <th>כ\"א/משכורת</th>\r\n                                <th>נסיעות</th>\r\n                                <th>ציוד אזיל</th>\r\n                                <th>ציוד</th>\r\n                                <th>מחשבים</th>\r\n                                <th>ייעוץ</th>\r\n                                <th>עריכה לשונית</th>\r\n                                <th>סקרים</th>\r\n                                <th>מיקור חוץ</th>\r\n                                <th>דיווח</th>\r\n                                <th>שונות</th>\r\n                                <th>אסמכתא</th>\r\n                                <th>פירוט</th>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q77\" id=\"q77i\" placeholder={''}\r\n                                               value={this.state.form.q77 ? (this.state.form.q77) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                               value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q11\" id=\"q11i\" placeholder={''}\r\n                                           value={this.state.form.q11 ? (this.state.form.q11) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q12\" id=\"q12i\" placeholder={''}\r\n                                           value={this.state.form.q12 ? (this.state.form.q12) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q13\" id=\"q13i\" placeholder={''}\r\n                                           value={this.state.form.q13 ? (this.state.form.q13) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q14\" id=\"q14i\" placeholder={''}\r\n                                           value={this.state.form.q14 ? (this.state.form.q14) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q15\" id=\"q15i\" placeholder={''}\r\n                                           value={this.state.form.q15 ? (this.state.form.q15) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q16\" id=\"q16i\" placeholder={''}\r\n                                           value={this.state.form.q16 ? (this.state.form.q16) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q707\" id=\"q707i\" placeholder={''}\r\n                                               value={this.state.form.q707 ? (this.state.form.q707) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                               value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q110\" id=\"q110i\" placeholder={''}\r\n                                           value={this.state.form.q110 ? (this.state.form.q110) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q120\" id=\"q120i\" placeholder={''}\r\n                                           value={this.state.form.q120 ? (this.state.form.q120) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q130\" id=\"q130i\" placeholder={''}\r\n                                           value={this.state.form.q130 ? (this.state.form.q130) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q140\" id=\"q140i\" placeholder={''}\r\n                                           value={this.state.form.q140 ? (this.state.form.q140) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q150\" id=\"q150i\" placeholder={''}\r\n                                           value={this.state.form.q150 ? (this.state.form.q150) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q160\" id=\"q160i\" placeholder={''}\r\n                                           value={this.state.form.q160 ? (this.state.form.q160) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q170\" id=\"q170i\" placeholder={''}\r\n                                           value={this.state.form.q170 ? (this.state.form.q170) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q141\" id=\"q141i\" placeholder={''}\r\n                                           value={this.state.form.q141 ? (this.state.form.q141) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q151\" id=\"q151i\" placeholder={''}\r\n                                           value={this.state.form.q151 ? (this.state.form.q151) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q161\" id=\"q161i\" placeholder={''}\r\n                                           value={this.state.form.q161 ? (this.state.form.q161) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q171\" id=\"q171i\" placeholder={''}\r\n                                           value={this.state.form.q171 ? (this.state.form.q171) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q18i\"\r\n                                name=\"q18\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q18}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תנועות\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q19i\"\r\n                                name=\"q19\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q19}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תקציב שנתי\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"יתרה נוכחית\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סה'כ יתרה\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <br/>\r\n\r\n                        <h4>שנה 2:</h4>\r\n\r\n                        <table border=\"2\">\r\n\r\n                            <tr>\r\n                                <th>תאריך</th>\r\n                                <th>כ\"א/משכורת</th>\r\n                                <th>נסיעות</th>\r\n                                <th>ציוד אזיל</th>\r\n                                <th>ציוד</th>\r\n                                <th>מחשבים</th>\r\n                                <th>ייעוץ</th>\r\n                                <th>עריכה לשונית</th>\r\n                                <th>סקרים</th>\r\n                                <th>מיקור חוץ</th>\r\n                                <th>דיווח</th>\r\n                                <th>שונות</th>\r\n                                <th>אסמכתא</th>\r\n                                <th>פירוט</th>\r\n\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q77\" id=\"q77i\" placeholder={''}\r\n                                               value={this.state.form.q77 ? (this.state.form.q77) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                               value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q11\" id=\"q11i\" placeholder={''}\r\n                                           value={this.state.form.q11 ? (this.state.form.q11) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q12\" id=\"q12i\" placeholder={''}\r\n                                           value={this.state.form.q12 ? (this.state.form.q12) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q13\" id=\"q13i\" placeholder={''}\r\n                                           value={this.state.form.q13 ? (this.state.form.q13) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q14\" id=\"q14i\" placeholder={''}\r\n                                           value={this.state.form.q14 ? (this.state.form.q14) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q15\" id=\"q15i\" placeholder={''}\r\n                                           value={this.state.form.q15 ? (this.state.form.q15) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q16\" id=\"q16i\" placeholder={''}\r\n                                           value={this.state.form.q16 ? (this.state.form.q16) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q707\" id=\"q707i\" placeholder={''}\r\n                                               value={this.state.form.q707 ? (this.state.form.q707) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                               value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q110\" id=\"q110i\" placeholder={''}\r\n                                           value={this.state.form.q110 ? (this.state.form.q110) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q120\" id=\"q120i\" placeholder={''}\r\n                                           value={this.state.form.q120 ? (this.state.form.q120) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q130\" id=\"q130i\" placeholder={''}\r\n                                           value={this.state.form.q130 ? (this.state.form.q130) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q140\" id=\"q140i\" placeholder={''}\r\n                                           value={this.state.form.q140 ? (this.state.form.q140) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q150\" id=\"q150i\" placeholder={''}\r\n                                           value={this.state.form.q150 ? (this.state.form.q150) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q160\" id=\"q160i\" placeholder={''}\r\n                                           value={this.state.form.q160 ? (this.state.form.q160) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q170\" id=\"q170i\" placeholder={''}\r\n                                           value={this.state.form.q170 ? (this.state.form.q170) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q141\" id=\"q141i\" placeholder={''}\r\n                                           value={this.state.form.q141 ? (this.state.form.q141) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q151\" id=\"q151i\" placeholder={''}\r\n                                           value={this.state.form.q151 ? (this.state.form.q151) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q161\" id=\"q161i\" placeholder={''}\r\n                                           value={this.state.form.q161 ? (this.state.form.q161) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q171\" id=\"q171i\" placeholder={''}\r\n                                           value={this.state.form.q171 ? (this.state.form.q171) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q18i\"\r\n                                name=\"q18\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q18}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תנועות\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q19i\"\r\n                                name=\"q19\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q19}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תקציב שנתי\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"יתרה נוכחית\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סה'כ יתרה\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n\r\n                        <h4>שנה 3:</h4>\r\n\r\n                        <table border=\"3\">\r\n\r\n                            <tr>\r\n                                <th>תאריך</th>\r\n                                <th>כ\"א/משכורת</th>\r\n                                <th>נסיעות</th>\r\n                                <th>ציוד אזיל</th>\r\n                                <th>ציוד</th>\r\n                                <th>מחשבים</th>\r\n                                <th>ייעוץ</th>\r\n                                <th>עריכה לשונית</th>\r\n                                <th>סקרים</th>\r\n                                <th>מיקור חוץ</th>\r\n                                <th>דיווח</th>\r\n                                <th>שונות</th>\r\n                                <th>אסמכתא</th>\r\n                                <th>פירוט</th>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q77\" id=\"q77i\" placeholder={''}\r\n                                               value={this.state.form.q77 ? (this.state.form.q77) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                               value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q11\" id=\"q11i\" placeholder={''}\r\n                                           value={this.state.form.q11 ? (this.state.form.q11) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q12\" id=\"q12i\" placeholder={''}\r\n                                           value={this.state.form.q12 ? (this.state.form.q12) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q13\" id=\"q13i\" placeholder={''}\r\n                                           value={this.state.form.q13 ? (this.state.form.q13) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q14\" id=\"q14i\" placeholder={''}\r\n                                           value={this.state.form.q14 ? (this.state.form.q14) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q15\" id=\"q15i\" placeholder={''}\r\n                                           value={this.state.form.q15 ? (this.state.form.q15) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q16\" id=\"q16i\" placeholder={''}\r\n                                           value={this.state.form.q16 ? (this.state.form.q16) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q707\" id=\"q707i\" placeholder={''}\r\n                                               value={this.state.form.q707 ? (this.state.form.q707) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                               value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q110\" id=\"q110i\" placeholder={''}\r\n                                           value={this.state.form.q110 ? (this.state.form.q110) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q120\" id=\"q120i\" placeholder={''}\r\n                                           value={this.state.form.q120 ? (this.state.form.q120) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q130\" id=\"q130i\" placeholder={''}\r\n                                           value={this.state.form.q130 ? (this.state.form.q130) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q140\" id=\"q140i\" placeholder={''}\r\n                                           value={this.state.form.q140 ? (this.state.form.q140) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q150\" id=\"q150i\" placeholder={''}\r\n                                           value={this.state.form.q150 ? (this.state.form.q150) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q160\" id=\"q160i\" placeholder={''}\r\n                                           value={this.state.form.q160 ? (this.state.form.q160) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q170\" id=\"q170i\" placeholder={''}\r\n                                           value={this.state.form.q170 ? (this.state.form.q170) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q141\" id=\"q141i\" placeholder={''}\r\n                                           value={this.state.form.q141 ? (this.state.form.q141) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q151\" id=\"q151i\" placeholder={''}\r\n                                           value={this.state.form.q151 ? (this.state.form.q151) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q161\" id=\"q161i\" placeholder={''}\r\n                                           value={this.state.form.q161 ? (this.state.form.q161) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q171\" id=\"q171i\" placeholder={''}\r\n                                           value={this.state.form.q171 ? (this.state.form.q171) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q18i\"\r\n                                name=\"q18\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q18}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תנועות\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q19i\"\r\n                                name=\"q19\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q19}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תקציב שנתי\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"יתרה נוכחית\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סה'כ יתרה\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n\r\n                        <h4>אבני דרך:</h4>\r\n\r\n                        <table border=\"2\">\r\n\r\n                            <tr>\r\n                                <th>שנה</th>\r\n                                <th>תיאור</th>\r\n                                <th>תאריך</th>\r\n                                <th>.ה. ח</th>\r\n                                <th>סכום כולל תקורה 100%</th>\r\n                                <th>תקורה 15%</th>\r\n                                <th>בכום ללא תקורה 85%</th>\r\n                                <th>סטטוס</th>\r\n\r\n\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q77\" id=\"q77i\" placeholder={''}\r\n                                               value={this.state.form.q77 ? (this.state.form.q77) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                               value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q11\" id=\"q11i\" placeholder={''}\r\n                                           value={this.state.form.q11 ? (this.state.form.q11) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q12\" id=\"q12i\" placeholder={''}\r\n                                           value={this.state.form.q12 ? (this.state.form.q12) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q13\" id=\"q13i\" placeholder={''}\r\n                                           value={this.state.form.q13 ? (this.state.form.q13) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q707\" id=\"q707i\" placeholder={''}\r\n                                               value={this.state.form.q707 ? (this.state.form.q707) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                               value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q110\" id=\"q110i\" placeholder={''}\r\n                                           value={this.state.form.q110 ? (this.state.form.q110) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q120\" id=\"q120i\" placeholder={''}\r\n                                           value={this.state.form.q120 ? (this.state.form.q120) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q130\" id=\"q130i\" placeholder={''}\r\n                                           value={this.state.form.q130 ? (this.state.form.q130) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <h4>סה'כ:</h4>\r\n\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n\r\n                        </table>\r\n\r\n\r\n                    </div>\r\n\r\n                    <button id=\"sendData\" className=\"btn btn-info\" onClick={() => {\r\n                        this.save();\r\n                        this.sendRequest(this.state.form)\r\n                    }}>שמירת שינויים\r\n                    </button>\r\n                    <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                        this.loadPage()\r\n                        this.BackPage()\r\n                    }}>חזור לתפריט\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (<div> {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                            //   css={override}\r\n                                    size={120}\r\n                                    color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }</div>)\r\n    }\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport  default  ResearchBudgets;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ChatResearcher.js",["250","251","252","253"],"import {ChatEngine} from \"react-chat-engine\";\r\nimport './Researcher.css'\r\n\r\nimport React from 'react';\r\n// Firebase deps\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n// Hooks\r\n// Components\r\nimport Channel from '../Researcher/Channel';\r\nimport Loader from '../Researcher/Loader';\r\n\r\nimport { useAuthState, useDarkMode } from '../Researcher/hooks';\r\n\r\n\r\nconst MoonIcon = props => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n        {...props}\r\n    >\r\n        <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\r\n            clipRule=\"evenodd\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nconst SunIcon = props => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n        {...props}\r\n    >\r\n        <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\r\n    </svg>\r\n);\r\n\r\nfunction ChatResearcher() {\r\n    const { user, initializing } = useAuthState(firebase.auth());\r\n    const [darkMode, setDarkMode] = useDarkMode();\r\n\r\n    const brandLogo = darkMode\r\n        ? `${process.env.PUBLIC_URL}/logo_white.svg`\r\n        : `${process.env.PUBLIC_URL}/logo.svg`;\r\n\r\n    //const ThemeIcon = darkMode ? SunIcon : MoonIcon;\r\n\r\n    const signInWithGoogle = async () => {\r\n        // Retrieve Google provider object\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        // Set language to the default browser preference\r\n        firebase.auth().useDeviceLanguage();\r\n        // Start sign in process\r\n        try {\r\n            await firebase.auth().signInWithPopup(provider);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n\r\n    const signOut = async () => {\r\n        try {\r\n            await firebase.auth().signOut();\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n\r\n    const renderContent = () => {\r\n        if (initializing) {\r\n            return (\r\n                <div className=\"flex items-center justify-center h-full\">\r\n                    <Loader size=\"lg\" />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (user) return <Channel user={user} />;\r\n\r\n        return (\r\n            <div className=\"flex items-center justify-center shadow-md h-full\">\r\n                <div className=\"flex flex-col items-center justify-center max-w-xl w-full mx-4 p-8 rounded-md shadow-card bg-white dark:bg-coolDark-600 transition-all\">\r\n                    <h2 className=\"mb-2 text-3xl flex items-center\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            viewBox=\"0 0 20 20\"\r\n                            fill=\"currentColor\"\r\n                            className=\"flex-shrink-0 w-12 h-12 mr-1 text-primary-500\"\r\n                        >\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n                        React FireChat\r\n                    </h2>\r\n                    <p className=\"mb-8 text-lg text-center\">\r\n                        The easiest way to chat with people all around the world.\r\n                    </p>\r\n                    <button\r\n                        onClick={signInWithGoogle}\r\n                        //className=\"rounded shadow-button pl-6 pr-8 py-3 bg-white hover:bg-gray-50 text-gray-600 font-medium flex items-center justify-center overflow-y-hidden focus:outline-none focus:ring focus:ring-primary-500 focus:ring-opacity-75\"\r\n                    >\r\n                        <svg\r\n                            viewBox=\"5 -5 30 30\"\r\n                            enableBackground=\"new 5 -5 30 30\"\r\n                            className=\"w-6 h-6 mr-4 flex-shrink-0\"\r\n                        >\r\n                            <path\r\n                                fill=\"#fff\"\r\n                                d=\"M15.3-4.2C11.6-3 8.4-.2 6.6 3.2 6 4.5 5.6 5.7 5.3 7c-.7 3.3-.2 6.7 1.3 9.7 1 1.9 2.4 3.7 4.2 5 1.6 1.3 3.5 2.2 5.6 2.7 2.6.7 5.3.7 7.8.1 2.3-.5 4.5-1.6 6.3-3.2 1.9-1.7 3.2-3.9 3.9-6.2.8-2.6.9-5.3.4-8-4.8 0-9.6 0-14.4 0 0 2 0 3.9 0 5.9 2.8 0 5.6 0 8.3 0-.3 1.9-1.5 3.6-3.1 4.6-1 .7-2.2 1.1-3.4 1.3-1.2.2-2.5.2-3.7 0-1.2-.2-2.4-.7-3.4-1.4-1.6-1.1-2.9-2.8-3.5-4.6-.7-1.9-.7-4 0-5.8.5-1.3 1.2-2.5 2.2-3.5 1.2-1.2 2.8-2.1 4.6-2.5 1.5-.3 3-.2 4.5.2 1.2.4 2.4 1 3.3 1.9.9-.9 1.9-1.8 2.8-2.8.5-.5 1-1 1.5-1.5-1.4-1.3-3.1-2.3-4.9-3-3.3-1.2-7-1.2-10.3-.1z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#EA4335\"\r\n                                d=\"M15.3-4.2c3.3-1.1 7-1.1 10.3.1 1.8.7 3.5 1.7 4.9 3-.5.5-1 1-1.5 1.5-.9.9-1.9 1.8-2.8 2.8-.9-.9-2.1-1.5-3.3-1.9-1.4-.4-3-.5-4.5-.2-1.7.4-3.3 1.2-4.6 2.5-1 1-1.8 2.2-2.2 3.5-1.7-1.3-3.3-2.5-5-3.8 1.8-3.5 5-6.2 8.7-7.5z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#FBBC05\"\r\n                                d=\"M5.3 7c.3-1.3.7-2.6 1.3-3.7 1.7 1.3 3.3 2.5 5 3.8-.7 1.9-.7 4 0 5.8-1.7 1.3-3.3 2.5-5 3.8-1.5-2.9-2-6.4-1.3-9.7z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#4285F4\"\r\n                                d=\"M20.3 7.2c4.8 0 9.6 0 14.4 0 .5 2.6.4 5.4-.4 8-.7 2.4-2 4.6-3.9 6.2-1.6-1.2-3.2-2.5-4.9-3.7 1.6-1.1 2.7-2.8 3.1-4.6-2.8 0-5.6 0-8.3 0 0-2 0-4 0-5.9z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#34A853\"\r\n                                d=\"M6.6 16.7c1.7-1.3 3.3-2.5 5-3.8.6 1.8 1.9 3.5 3.5 4.6 1 .7 2.2 1.2 3.4 1.4 1.2.2 2.4.2 3.7 0 1.2-.2 2.4-.6 3.4-1.3 1.6 1.2 3.2 2.5 4.9 3.7-1.8 1.6-3.9 2.7-6.3 3.2-2.6.6-5.3.6-7.8-.1-2-.5-3.9-1.5-5.6-2.7-1.7-1.3-3.2-3-4.2-5z\"\r\n                            ></path>\r\n                        </svg>\r\n                        Sign in with Google\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-full bg-white dark:bg-coolDark-500 dark:text-white transition-colors\">\r\n\r\n            <header\r\n                className=\"flex-shrink-0 flex items-center justify-between px-4 sm:px-8 shadow-md\"\r\n                style={{ height: 'var(--topbar-height)' }}\r\n            >\r\n                <a href=\"https://alterclass.io/courses/react\">\r\n                    <img src={brandLogo} alt=\"AlterClass\" width={150} />\r\n                </a>\r\n                <div className=\"flex items-center\">\r\n                    {user ? (\r\n                        <button\r\n                            onClick={signOut}\r\n                            className=\"uppercase text-sm font-medium text-primary-500 hover:text-white tracking-wide hover:bg-primary-500 bg-transparent rounded py-2 px-4 mr-4 focus:outline-none focus:ring focus:ring-primary-500 focus:ring-opacity-75 transition-all\"\r\n                        >\r\n                            Sign out\r\n                        </button>\r\n                    ) : null}\r\n                    {/*<ThemeIcon*/}\r\n                    {/*    className=\"h-8 w-8 cursor-pointer\"*/}\r\n                    {/*    onClick={() => setDarkMode(prev => !prev)}*/}\r\n                    {/*/>*/}\r\n                </div>\r\n            </header>\r\n            <main\r\n                className=\"flex-1\"\r\n                style={{ maxHeight: 'calc(100% - var(--topbar-height))' }}\r\n            >\r\n                {renderContent()}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatResearcher;\r\n\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ChatR.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\DropzoneFiles2.js",["254","255","256","257","258"],"//העלאת קבצי בקשה לרכישה\r\nimport React, {Component} from 'react';\r\nimport firebase, {auth, db, storage} from \"../../../../firebase/firebase\";\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass DropzoneFiles2 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.onDrop = (files) => {\r\n            this.setState({files})\r\n        };\r\n        this.state = {\r\n            files: [],\r\n            maxFile:5,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        auth.onAuthStateChanged(async user => {\r\n            if (user) {\r\n                this.setState({user:user})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async upload(files)\r\n    {\r\n\r\n        if(files!==null && files!==undefined&& files.length<=0)\r\n            return;\r\n\r\n        var file = files[files.length-1]\r\n        var user =  this.state.user\r\n        var metadata = {\r\n            customMetadata: {\r\n                'user': user.uid,\r\n            }\r\n        };\r\n\r\n        var storageRef = storage.ref()\r\n\r\n\r\n\r\n\r\n        var uploadTask = storageRef.child('forms/' + file.key).put(file,metadata);\r\n\r\n\r\n// Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n            (snapshot) => {\r\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                // console.log('Upload is ' + progress + '% done');\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        console.log('Upload is running');\r\n                        break;\r\n                }\r\n            },\r\n            (error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n                switch (error.code) {\r\n                    case 'storage/unauthorized':\r\n                        // User doesn't have permission to access the object\r\n                        break;\r\n                    case 'storage/canceled':\r\n                        // User canceled the upload\r\n                        break;\r\n\r\n                    // ...\r\n\r\n                    case 'storage/unknown':\r\n                        // Unknown error occurred, inspect error.serverResponse\r\n                        break;\r\n                }\r\n            },\r\n            () => {\r\n                // Upload completed successfully, now we can get the download URL\r\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    // console.log('File available at', downloadURL);\r\n                    db.collection(\"researcher\").doc(user.uid).collection(\"RequestPurchase\").add({\r\n                        name: file.key,\r\n                        time: new Date().toLocaleString(),\r\n                        link:downloadURL,\r\n                    }).then(()=>{\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        console.log(\"upload end\")\r\n                        this.upload(newFiles)\r\n                    }).catch((err)=>{\r\n                        storage.refFromURL(downloadURL).delete()\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        this.upload(newFiles)\r\n                    })\r\n\r\n\r\n                });\r\n            }\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name}\r\n                {/*{console.log(file)}*/}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <Dropzone onDrop={this.onDrop}>\r\n                {({getRootProps, getInputProps}) => (\r\n                    <section className=\"container\">\r\n                        <div {...getRootProps({className: 'dropzone'})}>\r\n\r\n                            <div style={{backgroundColor: \"#a0a0a0\", width: 400, height: 170,textAlign: 'center', padding: '100px 0px 0px 0px'}}>\r\n\r\n                                יש לגרור לכאן את הקבצים\r\n                                <br/>\r\n                                <br/>\r\n                                או ללחוץ כאן\r\n\r\n                                <input {...getInputProps()} />\r\n                            </div>\r\n                        </div>\r\n                        <aside>\r\n                            {\r\n\r\n                                files.length <= 0 ?\r\n                                    <h4></h4>:\r\n                                    <div>\r\n                                        {\r\n                                            this.state.maxFile!=undefined && files.length > this.state.maxFile?\r\n                                                <h4> מספר הקבצים המקסימלי להעלאה הוא {this.state.maxFile}</h4>:\r\n                                                <div>\r\n                                                    <h4> מספר הקבצים להעלאה - {files.length}</h4>\r\n                                                    <ul>{files}</ul>\r\n                                                    <button onClick={()=>{\r\n                                                        this.upload(files)\r\n                                                    }}>העלה קבצים</button>\r\n                                                </div>\r\n                                        }\r\n\r\n                                    </div>\r\n                            }\r\n\r\n\r\n                        </aside>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default  DropzoneFiles2 ;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Channel.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Loader.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Message.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\hooks.js",[],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":6,"column":9,"nodeType":"265","messageId":"266","endLine":6,"endColumn":13},{"ruleId":"263","severity":1,"message":"267","line":7,"column":9,"nodeType":"265","messageId":"266","endLine":7,"endColumn":15},{"ruleId":"268","severity":1,"message":"269","line":88,"column":1,"nodeType":"270","messageId":"271","endLine":88,"endColumn":57},{"ruleId":"272","severity":1,"message":"273","line":88,"column":28,"nodeType":"274","endLine":88,"endColumn":33},{"ruleId":"263","severity":1,"message":"267","line":4,"column":9,"nodeType":"265","messageId":"266","endLine":4,"endColumn":15},{"ruleId":"263","severity":1,"message":"275","line":7,"column":13,"nodeType":"265","messageId":"266","endLine":7,"endColumn":17},{"ruleId":"263","severity":1,"message":"276","line":9,"column":10,"nodeType":"265","messageId":"266","endLine":9,"endColumn":16},{"ruleId":"263","severity":1,"message":"277","line":10,"column":9,"nodeType":"265","messageId":"266","endLine":10,"endColumn":15},{"ruleId":"263","severity":1,"message":"278","line":10,"column":17,"nodeType":"265","messageId":"266","endLine":10,"endColumn":23},{"ruleId":"263","severity":1,"message":"279","line":10,"column":25,"nodeType":"265","messageId":"266","endLine":10,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":130,"column":17,"nodeType":"265","messageId":"282","endLine":130,"endColumn":30},{"ruleId":"263","severity":1,"message":"283","line":2,"column":14,"nodeType":"265","messageId":"266","endLine":2,"endColumn":29},{"ruleId":"263","severity":1,"message":"284","line":5,"column":9,"nodeType":"265","messageId":"266","endLine":5,"endColumn":20},{"ruleId":"263","severity":1,"message":"285","line":7,"column":13,"nodeType":"265","messageId":"266","endLine":7,"endColumn":16},{"ruleId":"263","severity":1,"message":"286","line":8,"column":8,"nodeType":"265","messageId":"266","endLine":8,"endColumn":18},{"ruleId":"263","severity":1,"message":"287","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":22},{"ruleId":"263","severity":1,"message":"288","line":10,"column":8,"nodeType":"265","messageId":"266","endLine":10,"endColumn":21},{"ruleId":"263","severity":1,"message":"289","line":11,"column":8,"nodeType":"265","messageId":"266","endLine":11,"endColumn":12},{"ruleId":"263","severity":1,"message":"290","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":15},{"ruleId":"263","severity":1,"message":"291","line":3,"column":17,"nodeType":"265","messageId":"266","endLine":3,"endColumn":27},{"ruleId":"263","severity":1,"message":"292","line":11,"column":8,"nodeType":"265","messageId":"266","endLine":11,"endColumn":16},{"ruleId":"263","severity":1,"message":"293","line":110,"column":13,"nodeType":"265","messageId":"266","endLine":110,"endColumn":14},{"ruleId":"263","severity":1,"message":"294","line":255,"column":17,"nodeType":"265","messageId":"266","endLine":255,"endColumn":21},{"ruleId":"263","severity":1,"message":"295","line":361,"column":17,"nodeType":"265","messageId":"266","endLine":361,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":819,"column":37,"nodeType":"298","endLine":826,"endColumn":39},{"ruleId":"299","severity":1,"message":"300","line":823,"column":52,"nodeType":"301","endLine":823,"endColumn":62},{"ruleId":"263","severity":1,"message":"302","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":14},{"ruleId":"263","severity":1,"message":"303","line":11,"column":5,"nodeType":"265","messageId":"266","endLine":11,"endColumn":20},{"ruleId":"263","severity":1,"message":"304","line":13,"column":5,"nodeType":"265","messageId":"266","endLine":13,"endColumn":25},{"ruleId":"263","severity":1,"message":"305","line":436,"column":13,"nodeType":"265","messageId":"266","endLine":436,"endColumn":17},{"ruleId":"263","severity":1,"message":"306","line":13,"column":8,"nodeType":"265","messageId":"266","endLine":13,"endColumn":20},{"ruleId":"263","severity":1,"message":"307","line":222,"column":15,"nodeType":"265","messageId":"266","endLine":222,"endColumn":19},{"ruleId":"263","severity":1,"message":"308","line":227,"column":15,"nodeType":"265","messageId":"266","endLine":227,"endColumn":22},{"ruleId":"263","severity":1,"message":"309","line":252,"column":24,"nodeType":"265","messageId":"266","endLine":252,"endColumn":26},{"ruleId":"263","severity":1,"message":"310","line":252,"column":27,"nodeType":"265","messageId":"266","endLine":252,"endColumn":30},{"ruleId":"263","severity":1,"message":"311","line":252,"column":31,"nodeType":"265","messageId":"266","endLine":252,"endColumn":34},{"ruleId":"263","severity":1,"message":"312","line":252,"column":35,"nodeType":"265","messageId":"266","endLine":252,"endColumn":37},{"ruleId":"263","severity":1,"message":"313","line":252,"column":38,"nodeType":"265","messageId":"266","endLine":252,"endColumn":41},{"ruleId":"263","severity":1,"message":"314","line":252,"column":42,"nodeType":"265","messageId":"266","endLine":252,"endColumn":45},{"ruleId":"263","severity":1,"message":"315","line":252,"column":46,"nodeType":"265","messageId":"266","endLine":252,"endColumn":48},{"ruleId":"263","severity":1,"message":"316","line":252,"column":49,"nodeType":"265","messageId":"266","endLine":252,"endColumn":52},{"ruleId":"263","severity":1,"message":"317","line":252,"column":53,"nodeType":"265","messageId":"266","endLine":252,"endColumn":56},{"ruleId":"263","severity":1,"message":"318","line":252,"column":57,"nodeType":"265","messageId":"266","endLine":252,"endColumn":59},{"ruleId":"263","severity":1,"message":"319","line":252,"column":60,"nodeType":"265","messageId":"266","endLine":252,"endColumn":63},{"ruleId":"263","severity":1,"message":"320","line":252,"column":64,"nodeType":"265","messageId":"266","endLine":252,"endColumn":67},{"ruleId":"263","severity":1,"message":"321","line":252,"column":68,"nodeType":"265","messageId":"266","endLine":252,"endColumn":71},{"ruleId":"263","severity":1,"message":"322","line":252,"column":72,"nodeType":"265","messageId":"266","endLine":252,"endColumn":76},{"ruleId":"263","severity":1,"message":"323","line":252,"column":77,"nodeType":"265","messageId":"266","endLine":252,"endColumn":81},{"ruleId":"263","severity":1,"message":"307","line":352,"column":19,"nodeType":"265","messageId":"266","endLine":352,"endColumn":23},{"ruleId":"263","severity":1,"message":"308","line":357,"column":19,"nodeType":"265","messageId":"266","endLine":357,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":762,"column":25,"nodeType":"298","endLine":762,"endColumn":92},{"ruleId":"296","severity":1,"message":"297","line":784,"column":26,"nodeType":"298","endLine":784,"endColumn":93},{"ruleId":"324","severity":1,"message":"325","line":988,"column":51,"nodeType":"326","messageId":"327","endLine":988,"endColumn":53},{"ruleId":"324","severity":1,"message":"325","line":999,"column":73,"nodeType":"326","messageId":"327","endLine":999,"endColumn":75},{"ruleId":"324","severity":1,"message":"325","line":1009,"column":52,"nodeType":"326","messageId":"327","endLine":1009,"endColumn":54},{"ruleId":"263","severity":1,"message":"328","line":1070,"column":13,"nodeType":"265","messageId":"266","endLine":1070,"endColumn":18},{"ruleId":"263","severity":1,"message":"293","line":1073,"column":13,"nodeType":"265","messageId":"266","endLine":1073,"endColumn":14},{"ruleId":"324","severity":1,"message":"325","line":1081,"column":13,"nodeType":"326","messageId":"327","endLine":1081,"endColumn":15},{"ruleId":"324","severity":1,"message":"325","line":1081,"column":41,"nodeType":"326","messageId":"327","endLine":1081,"endColumn":43},{"ruleId":"324","severity":1,"message":"325","line":1115,"column":17,"nodeType":"326","messageId":"327","endLine":1115,"endColumn":19},{"ruleId":"324","severity":1,"message":"325","line":1115,"column":45,"nodeType":"326","messageId":"327","endLine":1115,"endColumn":47},{"ruleId":"280","severity":1,"message":"329","line":1122,"column":17,"nodeType":"265","messageId":"282","endLine":1122,"endColumn":31},{"ruleId":"263","severity":1,"message":"330","line":1222,"column":13,"nodeType":"265","messageId":"266","endLine":1222,"endColumn":17},{"ruleId":"263","severity":1,"message":"294","line":1259,"column":17,"nodeType":"265","messageId":"266","endLine":1259,"endColumn":21},{"ruleId":"263","severity":1,"message":"331","line":53,"column":21,"nodeType":"265","messageId":"266","endLine":53,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":55,"column":17,"nodeType":"334","messageId":"335","endLine":62,"endColumn":18},{"ruleId":"332","severity":1,"message":"333","line":67,"column":17,"nodeType":"334","messageId":"335","endLine":80,"endColumn":18},{"ruleId":"336","severity":1,"message":"337","line":139,"column":37,"nodeType":"298","endLine":139,"endColumn":41},{"ruleId":"324","severity":1,"message":"338","line":142,"column":63,"nodeType":"326","messageId":"327","endLine":142,"endColumn":65},{"ruleId":"263","severity":1,"message":"339","line":2,"column":45,"nodeType":"265","messageId":"266","endLine":2,"endColumn":52},{"ruleId":"263","severity":1,"message":"340","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":16},{"ruleId":"263","severity":1,"message":"341","line":7,"column":9,"nodeType":"265","messageId":"266","endLine":7,"endColumn":17},{"ruleId":"263","severity":1,"message":"286","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":18},{"ruleId":"263","severity":1,"message":"287","line":10,"column":8,"nodeType":"265","messageId":"266","endLine":10,"endColumn":22},{"ruleId":"263","severity":1,"message":"342","line":11,"column":9,"nodeType":"265","messageId":"266","endLine":11,"endColumn":15},{"ruleId":"263","severity":1,"message":"343","line":12,"column":9,"nodeType":"265","messageId":"266","endLine":12,"endColumn":13},{"ruleId":"263","severity":1,"message":"344","line":15,"column":7,"nodeType":"265","messageId":"266","endLine":15,"endColumn":14},{"ruleId":"263","severity":1,"message":"295","line":79,"column":17,"nodeType":"265","messageId":"266","endLine":79,"endColumn":25},{"ruleId":"263","severity":1,"message":"339","line":2,"column":61,"nodeType":"265","messageId":"266","endLine":2,"endColumn":68},{"ruleId":"263","severity":1,"message":"340","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":16},{"ruleId":"263","severity":1,"message":"341","line":7,"column":9,"nodeType":"265","messageId":"266","endLine":7,"endColumn":17},{"ruleId":"263","severity":1,"message":"286","line":9,"column":8,"nodeType":"265","messageId":"266","endLine":9,"endColumn":18},{"ruleId":"263","severity":1,"message":"287","line":10,"column":8,"nodeType":"265","messageId":"266","endLine":10,"endColumn":22},{"ruleId":"263","severity":1,"message":"342","line":11,"column":9,"nodeType":"265","messageId":"266","endLine":11,"endColumn":15},{"ruleId":"263","severity":1,"message":"343","line":12,"column":9,"nodeType":"265","messageId":"266","endLine":12,"endColumn":13},{"ruleId":"263","severity":1,"message":"344","line":15,"column":7,"nodeType":"265","messageId":"266","endLine":15,"endColumn":14},{"ruleId":"263","severity":1,"message":"295","line":79,"column":17,"nodeType":"265","messageId":"266","endLine":79,"endColumn":25},{"ruleId":"263","severity":1,"message":"331","line":53,"column":21,"nodeType":"265","messageId":"266","endLine":53,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":55,"column":17,"nodeType":"334","messageId":"335","endLine":62,"endColumn":18},{"ruleId":"332","severity":1,"message":"333","line":67,"column":17,"nodeType":"334","messageId":"335","endLine":80,"endColumn":18},{"ruleId":"336","severity":1,"message":"337","line":139,"column":37,"nodeType":"298","endLine":139,"endColumn":41},{"ruleId":"324","severity":1,"message":"338","line":142,"column":63,"nodeType":"326","messageId":"327","endLine":142,"endColumn":65},{"ruleId":"263","severity":1,"message":"345","line":1,"column":16,"nodeType":"265","messageId":"266","endLine":1,"endColumn":24},{"ruleId":"263","severity":1,"message":"290","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":15},{"ruleId":"263","severity":1,"message":"291","line":3,"column":17,"nodeType":"265","messageId":"266","endLine":3,"endColumn":27},{"ruleId":"263","severity":1,"message":"292","line":11,"column":8,"nodeType":"265","messageId":"266","endLine":11,"endColumn":16},{"ruleId":"263","severity":1,"message":"346","line":12,"column":8,"nodeType":"265","messageId":"266","endLine":12,"endColumn":23},{"ruleId":"263","severity":1,"message":"293","line":109,"column":13,"nodeType":"265","messageId":"266","endLine":109,"endColumn":14},{"ruleId":"263","severity":1,"message":"294","line":254,"column":17,"nodeType":"265","messageId":"266","endLine":254,"endColumn":21},{"ruleId":"263","severity":1,"message":"295","line":360,"column":17,"nodeType":"265","messageId":"266","endLine":360,"endColumn":25},{"ruleId":"263","severity":1,"message":"347","line":1,"column":9,"nodeType":"265","messageId":"266","endLine":1,"endColumn":19},{"ruleId":"263","severity":1,"message":"348","line":17,"column":7,"nodeType":"265","messageId":"266","endLine":17,"endColumn":15},{"ruleId":"263","severity":1,"message":"349","line":32,"column":7,"nodeType":"265","messageId":"266","endLine":32,"endColumn":14},{"ruleId":"263","severity":1,"message":"350","line":45,"column":22,"nodeType":"265","messageId":"266","endLine":45,"endColumn":33},{"ruleId":"263","severity":1,"message":"331","line":53,"column":21,"nodeType":"265","messageId":"266","endLine":53,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":55,"column":17,"nodeType":"334","messageId":"335","endLine":62,"endColumn":18},{"ruleId":"332","severity":1,"message":"333","line":67,"column":17,"nodeType":"334","messageId":"335","endLine":80,"endColumn":18},{"ruleId":"336","severity":1,"message":"337","line":139,"column":37,"nodeType":"298","endLine":139,"endColumn":41},{"ruleId":"324","severity":1,"message":"338","line":142,"column":63,"nodeType":"326","messageId":"327","endLine":142,"endColumn":65},"no-native-reassign",["351"],"no-negated-in-lhs",["352"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'docx' is defined but never used.","'saveAs' is defined but never used.","'Footer' is defined but never used.","'Header' is defined but never used.","'Paragraph' is defined but never used.","no-redeclare","'updateStudent' is already defined.","redeclared","'GetFormDownload' is defined but never used.","'useDropzone' is defined but never used.","'url' is defined but never used.","'MyDropzone' is defined but never used.","'AcceptMaxFiles' is defined but never used.","'DropzoneFiles' is defined but never used.","'Grid' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'ReactDOM' is defined but never used.","'e' is assigned a value but never used.","'name' is assigned a value but never used.","'teamName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Select' is defined but never used.","'studentsOptions' is assigned a value but never used.","'emptyStudentsOptions' is assigned a value but never used.","'team' is assigned a value but never used.","'ReactToPrint' is defined but never used.","'data' is assigned a value but never used.","'columns' is assigned a value but never used.","'q6' is defined but never used.","'q60' is defined but never used.","'q61' is defined but never used.","'q7' is defined but never used.","'q70' is defined but never used.","'q71' is defined but never used.","'q8' is defined but never used.","'q80' is defined but never used.","'q81' is defined but never used.","'q9' is defined but never used.","'q90' is defined but never used.","'q91' is defined but never used.","'q10' is defined but never used.","'q100' is defined but never used.","'q101' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user1' is assigned a value but never used.","'formResearcher' is already defined.","'path' is assigned a value but never used.","'progress' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","Expected '!==' and instead saw '!='.","'signOut' is defined but never used.","'firebase' is defined but never used.","'NextPage' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'options' is assigned a value but never used.","'Fragment' is defined but never used.","'SignatureCanvas' is defined but never used.","'ChatEngine' is defined but never used.","'MoonIcon' is assigned a value but never used.","'SunIcon' is assigned a value but never used.","'setDarkMode' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]