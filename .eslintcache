[{"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\index.js":"1","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App.js":"2","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\reportWebVitals.js":"3","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\AllPages.js":"4","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\firebase.js":"5","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App2.js":"6","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\404.js":"7","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\PageHome\\PageHome.js":"8","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\Login.js":"9","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\SignUp\\SignUp.js":"10","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\resetPassword.js":"11","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\await.js":"12","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\profile.js":"13","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Researcher.js":"14","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Manager.js":"15","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\UserPage.js":"16","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\RequestPurchase.js":"17","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UserApproval.js":"18","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UpdatesFirebase.js":"19","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\DropzoneFiles.js":"20","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ScientificReport.js":"21","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\financialReports.js":"22","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\DropzoneFiles1.js":"23","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ResearchBudgets.js":"24","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ChatResearcher.js":"25","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ChatR.js":"26","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\DropzoneFiles2.js":"27","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Channel.js":"28","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Loader.js":"29","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Message.js":"30","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\hooks.js":"31","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Reports.js":"32","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ChatManager.js":"33","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ChatM.js":"34","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\getAllUsers.js":"35","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\getManagerOfCurrentResearcher.js":"36","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\BudgetSpreadsheet.js":"37","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\SpreadsheetBuilders.js":"38","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\Spreadsheet.js":"39","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\SpreadsheetState.js":"40","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Spinner.js":"41","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\EvaluateCellNode.js":"42","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\ExportDataDialog.js":"43","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\LoadFileFromFirebaseDialog.js":"44","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\util\\saveFile.js":"45","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\util\\ProgressBarDialog.js":"46","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\SpreadsheetCellEditor.js":"47","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\ForumulaParser.js":"48","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\util\\gridCellStyling.js":"49","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\EvaluateFunction.js":"50","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\EvaluateBinaryExpression.js":"51","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ManagerRequestPurchase\\mngRequestPurchase.js":"52","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ManagerRequestPurchase\\DisplayPurchaseRequests.js":"53","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\general\\ErrorBoundry.js":"54","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\getAllManangers.js":"55","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Budget.js":"56","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\listenForNewMessages.js":"57"},{"size":500,"mtime":1618304787313,"results":"58","hashOfConfig":"59"},{"size":324,"mtime":1608643810598,"results":"60","hashOfConfig":"59"},{"size":362,"mtime":499162500000,"results":"61","hashOfConfig":"59"},{"size":4903,"mtime":1625126288266,"results":"62","hashOfConfig":"59"},{"size":4402,"mtime":1623756190112,"results":"63","hashOfConfig":"59"},{"size":1477,"mtime":1609150667296,"results":"64","hashOfConfig":"59"},{"size":798,"mtime":1609226008487,"results":"65","hashOfConfig":"59"},{"size":5173,"mtime":1620641024247,"results":"66","hashOfConfig":"59"},{"size":6511,"mtime":1617817894780,"results":"67","hashOfConfig":"59"},{"size":10668,"mtime":1615835304470,"results":"68","hashOfConfig":"59"},{"size":3287,"mtime":1610912844705,"results":"69","hashOfConfig":"59"},{"size":595,"mtime":1611240405993,"results":"70","hashOfConfig":"59"},{"size":11037,"mtime":1610906970520,"results":"71","hashOfConfig":"59"},{"size":7593,"mtime":1623778039974,"results":"72","hashOfConfig":"59"},{"size":8466,"mtime":1625126417982,"results":"73","hashOfConfig":"59"},{"size":5291,"mtime":1610878186895,"results":"74","hashOfConfig":"59"},{"size":36663,"mtime":1624225819112,"results":"75","hashOfConfig":"59"},{"size":14713,"mtime":1615835304415,"results":"76","hashOfConfig":"59"},{"size":22478,"mtime":1624271524295,"results":"77","hashOfConfig":"59"},{"size":8875,"mtime":1624227029568,"results":"78","hashOfConfig":"59"},{"size":14364,"mtime":1624229699204,"results":"79","hashOfConfig":"59"},{"size":15828,"mtime":1624272697110,"results":"80","hashOfConfig":"59"},{"size":8892,"mtime":1624229604900,"results":"81","hashOfConfig":"59"},{"size":140088,"mtime":1620930563081,"results":"82","hashOfConfig":"59"},{"size":7614,"mtime":1624820130465,"results":"83","hashOfConfig":"59"},{"size":4805,"mtime":1625118770611,"results":"84","hashOfConfig":"59"},{"size":8920,"mtime":1624275503186,"results":"85","hashOfConfig":"59"},{"size":4355,"mtime":1624821061434,"results":"86","hashOfConfig":"59"},{"size":856,"mtime":1622535798254,"results":"87","hashOfConfig":"59"},{"size":2024,"mtime":1624821182954,"results":"88","hashOfConfig":"59"},{"size":5434,"mtime":1622537284999,"results":"89","hashOfConfig":"59"},{"size":52510,"mtime":1623781503035,"results":"90","hashOfConfig":"59"},{"size":8626,"mtime":1624820328472,"results":"91","hashOfConfig":"59"},{"size":4500,"mtime":1625118726244,"results":"92","hashOfConfig":"59"},{"size":247,"mtime":1624820623445,"results":"93","hashOfConfig":"59"},{"size":717,"mtime":1624820614066,"results":"94","hashOfConfig":"59"},{"size":10732,"mtime":1625117393824,"results":"95","hashOfConfig":"59"},{"size":5625,"mtime":1625117394338,"results":"96","hashOfConfig":"59"},{"size":2141,"mtime":1625117394268,"results":"97","hashOfConfig":"59"},{"size":838,"mtime":1625117394461,"results":"98","hashOfConfig":"59"},{"size":457,"mtime":1625117392340,"results":"99","hashOfConfig":"59"},{"size":1346,"mtime":1625117393952,"results":"100","hashOfConfig":"59"},{"size":1872,"mtime":1625117394074,"results":"101","hashOfConfig":"59"},{"size":2584,"mtime":1625117394200,"results":"102","hashOfConfig":"59"},{"size":445,"mtime":1625117394787,"results":"103","hashOfConfig":"59"},{"size":1076,"mtime":1625117394668,"results":"104","hashOfConfig":"59"},{"size":683,"mtime":1625117394401,"results":"105","hashOfConfig":"59"},{"size":3548,"mtime":1625117394138,"results":"106","hashOfConfig":"59"},{"size":968,"mtime":1625117394728,"results":"107","hashOfConfig":"59"},{"size":4716,"mtime":1625117394014,"results":"108","hashOfConfig":"59"},{"size":1581,"mtime":1625117393889,"results":"109","hashOfConfig":"59"},{"size":32909,"mtime":1625127551181,"results":"110","hashOfConfig":"59"},{"size":7749,"mtime":1625117394860,"results":"111","hashOfConfig":"59"},{"size":721,"mtime":1625117396013,"results":"112","hashOfConfig":"59"},{"size":407,"mtime":1625117396138,"results":"113","hashOfConfig":"59"},{"size":4347,"mtime":1625126248636,"results":"114","hashOfConfig":"59"},{"size":412,"mtime":1625117396361,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1nqatxe",{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"118"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"118"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"118"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"118"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"118"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"118"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"118"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"118"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\index.js",[],["263","264"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App.js",["265","266"],"// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport LoadPage from \"./AllPages\";\n\nimport {auth} from './firebase/firebase';\nimport {render} from \"@testing-library/react\";\n\n\n\n\n\nfunction App() {\n    return (\n        <div>\n            <LoadPage/>\n        </div>\n    );\n}\n\n\nexport default App;\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\reportWebVitals.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\AllPages.js",["267","268"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\firebase.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\App2.js",["269"],"// import logo from './logo.svg';\r\nimport './App.css';\r\nimport {auth} from './firebase/firebase';\r\nimport {render} from \"@testing-library/react\";\r\n\r\n\r\n\r\n\r\n\r\nfunction App2() {\r\n    // var  a=auth.currentUser.email\r\n    console.log(auth.currentUser)\r\n    var a = '';\r\n    if(auth.currentUser)\r\n        a=auth.currentUser.email;\r\n    return (\r\n        <div>\r\n            <h1>\r\n                שלום\r\n                {a}\r\n                סוף בדיקה\r\n            </h1>\r\n            <button onClick={()=>{register()}}>register</button>\r\n            <button onClick={()=>{login()}}>login</button>\r\n        </div>\r\n    );\r\n\r\n    function register()\r\n    {\r\n        auth.createUserWithEmailAndPassword(\"s@gmail.com\", \"123123\").then(res=>{\r\n            if(res)\r\n            {\r\n                console.log(\"sucsses\")\r\n                console.log(\"you register\")\r\n\r\n            }\r\n            else\r\n            {\r\n                console.log( \"empty\")\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    function login()\r\n    {\r\n        auth.signInWithEmailAndPassword(\"s@gmail.com\", \"123123\").then(res=>{\r\n            if(res)\r\n            {\r\n                console.log(\"sucsses\")\r\n                App2();\r\n                return ;\r\n            }\r\n            else\r\n            {\r\n                console.log( \"empty\")\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default App2;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\404.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\PageHome\\PageHome.js",["270","271","272","273","274"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './PageHome.css'\r\nimport {auth} from \"../../../firebase/firebase\";\r\nimport * as docx from \"docx\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\nimport {Footer, Header, Paragraph} from \"docx\";\r\n\r\n\r\nclass PageHome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({user: user})\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"instructor\" className=\"sec-design\" dir='rtl'>\r\n                <div id=\"instructor_menu\" className=\"form-design\" name=\"student_form\">\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <div>\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    style={{style: {margin: '10px'}}}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    id=\"LoginBtn\"\r\n                                    onClick={() => {\r\n                                        if (this.state.user) {\r\n                                            this.props.history.push({\r\n                                                pathname: '/User',\r\n                                                data: this.state.user // your data array of objects\r\n                                            })\r\n                                        } else {\r\n                                            this.props.history.push({\r\n                                                pathname: '/Login',\r\n                                            })\r\n                                        }\r\n                                    }}>\r\n                                    כניסת משתמשים\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <div>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    id=\"registerBtn\"\r\n                                    component={Link}\r\n                                    to=\"/SignUp\">\r\n                                    הרשמה\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {/*<div>*/}\r\n                            {/*    <Button*/}\r\n                            {/*        type=\"submit\"*/}\r\n                            {/*        fullWidth*/}\r\n                            {/*        variant=\"contained\"*/}\r\n                            {/*        onClick={() => {*/}\r\n                            {/*          this.generate()*/}\r\n                            {/*        }}>*/}\r\n                            {/*        הורדת קובץ*/}\r\n                            {/*    </Button>*/}\r\n                            {/*</div>*/}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // generate() {\r\n    //     const doc = new docx.Document();\r\n    //\r\n    //\r\n    //     doc.addSection({\r\n    //         properties: {},\r\n    //         headers: {\r\n    //             default: new Header({\r\n    //                 // children: [new Paragraph(\"Header text\")],\r\n    //                 children: [ new Paragraph(\"image1\")],\r\n    //             }),\r\n    //         },\r\n    //         footers: {\r\n    //             default: new Footer({\r\n    //                 children: [new Paragraph(\"Footer text\")],\r\n    //             }),\r\n    //         },\r\n    //         children: [\r\n    //             new Paragraph({\r\n    //                 children: [\r\n    //                     new docx.TextRun(\"Hello World\"),\r\n    //                     new docx.TextRun({\r\n    //                         text: \"Foo Bar\",\r\n    //                         bold: true,\r\n    //                     }),\r\n    //\r\n    //                 ],\r\n    //\r\n    //             }),\r\n    //             new Paragraph({\r\n    //                 children: [\r\n    //                     new docx.TextRun({\r\n    //                         text: \"\\tGithub is the best\",\r\n    //                         bold: true,\r\n    //                     }),\r\n    //\r\n    //                 ],\r\n    //\r\n    //             }),\r\n    //\r\n    //         ],\r\n    //     });\r\n    //\r\n    //     docx.Packer.toBlob(doc).then(blob => {\r\n    //         console.log(blob);\r\n    //         saveAs(blob, \"example.doc\");\r\n    //         console.log(\"Document created successfully\");\r\n    //\r\n    //\r\n    //     });\r\n    // }\r\n}\r\n\r\nexport  default  PageHome;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\Login.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\SignUp\\SignUp.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Login\\resetPassword.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\await.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\profile.js",["275"],"import React from \"react\";\r\nimport {\r\n    auth,\r\n    getUser, getResearcherData,\r\n    getManagerData, getResearcher, getManager\r\n} from '../../../firebase/firebase'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            fname:'',\r\n            lname:'',\r\n            phone:'',\r\n            type:''\r\n        };\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    if(type==='Tester')\r\n                        type = href[3]\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    await this.getDate()\r\n                    this.loadSpinner(false,\"\")\r\n                    this.setState({loadPage:true})\r\n                    this.render()\r\n                    return\r\n                }\r\n                else\r\n                {\r\n\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    async getDate() {\r\n        var user = (auth.currentUser).uid\r\n        var researcher = await getResearcherData(user)\r\n        var manager = await getManagerData(user)\r\n\r\n        if (researcher) {\r\n            this.setState({\r\n                fname: researcher.fname,\r\n                lname: researcher.lname,\r\n                phone: researcher.phone,\r\n            })\r\n        } else if (manager) {\r\n\r\n            this.setState({\r\n                fname: manager.fname,\r\n                lname: manager.lname,\r\n                phone: manager.phone,\r\n            })\r\n        }\r\n    }\r\n\r\n    async sendData(){\r\n        if(this.state.password && this.state.Vpassword){\r\n            if(this.state.password !== this.state.Vpassword){\r\n                alert(\"הסיסמא ואימות הסיסמא לא תואמים\")\r\n                return\r\n            }\r\n            else if((this.state.password).length < 6){\r\n                alert(\"הסיסמא צריכה להיות יותר מ6 תווים\")\r\n                return\r\n            }\r\n            auth.currentUser.updatePassword(this.state.password)\r\n        }\r\n        else if((!this.state.password && this.state.Vpassword)||(this.state.password && !this.state.Vpassword)){\r\n            alert(\"אנא מלא את כל הנתונים\")\r\n            // console.log(\"this.state.password\",this.state.password)\r\n            // console.log(\"this.state.Vpassword\",this.state.Vpassword)\r\n\r\n            return\r\n        }\r\n\r\n        var user=(auth.currentUser).uid\r\n\r\n        if(this.state.type === \"Researcher\")\r\n        {\r\n            user = await getResearcher(user)\r\n        }\r\n        else if(this.state.type === \"Manager\")\r\n        {\r\n            user = await getManager(user)\r\n        }\r\n        if(this.state.Vpassword)\r\n        {\r\n            var updateStudent = {\r\n                fname:this.state.fname,\r\n                lname:this.state.lname,\r\n                phone:this.state.phone,\r\n                password:this.state.password,\r\n\r\n            }\r\n        }else{\r\n            var updateStudent = {\r\n                fname:this.state.fname,\r\n                lname:this.state.lname,\r\n                phone:this.state.phone,\r\n            }\r\n        }\r\n\r\n\r\n        user.update(updateStudent).then(()=>\r\n        {\r\n            alert(\"הפרטים שונו בהצלחה\")\r\n        })\r\n    }\r\n    loadSpinner(event,massage = \"\"){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n    render() {\r\n        if(this.state.loadPage)\r\n        {\r\n            return (\r\n                <div id=\"instructor\" className=\"sec-design\">\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div align=\"right\">\r\n                    <h2>עדכון פרטים</h2>\r\n                    </div>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"lname\"\r\n                                name=\"lname\"\r\n                                type=\"string\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.lname}\r\n                                onChange={(e) => {\r\n                                    this.setState({lname: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם משפחה\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"fname\"\r\n                                name=\"fname\"\r\n                                type=\"string\"\r\n                                autoComplete=\"off\"\r\n                                autoFocus\r\n                                value={this.state.fname}\r\n                                onChange={(e) => {\r\n                                    this.setState({fname: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם פרטי\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"phone\"\r\n                                name=\"phone\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.phone}\r\n                                onChange={e => {\r\n                                    this.setState({phone: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"פלאפון\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                // value={this.state.password}\r\n                                onChange={(e) => {\r\n                                    this.setState({password: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סיסמא חדשה\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"verifyPassword\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                // value={this.state.password}\r\n                                onChange={(e) => {\r\n                                    this.setState({Vpassword: e.target.value})\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"אימות סיסמא\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <button id=\"report-button\" className=\"btn btn-info\" onClick={() => {\r\n                        this.sendData()\r\n                    }}>עדכון פרטים<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n                    <button onClick={() => {\r\n                        this.BackPage()\r\n                    }}>חזרה\r\n                    </button>\r\n\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (<div> {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                                    size={120}\r\n                                    color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }</div>)\r\n    }\r\n\r\n\r\n\r\n    ChangePage(path) {\r\n\r\n        this.props.history.push({\r\n            pathname: `${this.props.location.pathname}/${path}`,\r\n        })\r\n        return\r\n    }\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/${this.state.type}/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport  default  Profile;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Researcher.js",["276","277","278","279","280","281","282"],"import React from \"react\";\r\nimport {auth,GetFormDownload, getUser, signOut} from '../../../../firebase/firebase'\r\nimport {NextPage} from \"../UserPage\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {useDropzone} from 'react-dropzone'\r\nimport './Researcher.css'\r\nimport * as url from \"url\";\r\nimport MyDropzone from \"./DropzoneFiles.js\";\r\nimport AcceptMaxFiles from \"./DropzoneFiles.js\";\r\nimport DropzoneFiles  from \"./DropzoneFiles.js\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nclass Researcher extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadPage:false,\r\n            user: props.location,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n        };\r\n    }\r\n\r\n\r\n\r\n    loadSpinner(event,massage = \"\"){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(type === \"wait\")\r\n                {\r\n                    alert('המנהל עדיין לא אישר את הבקשה')\r\n                    window.location.href = '/Login';\r\n                    return\r\n                }\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.loadSpinner(false,\"\")\r\n                    this.setState({loadPage:true})\r\n                    this.render()\r\n                    return\r\n                }\r\n                else\r\n                {\r\n\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    loadTempPage(page)\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    async  logout() {\r\n        //מסך טעינה\r\n        await auth.signOut();\r\n        window.location.href = '/';\r\n        //סיום מסך טעינה\r\n    }\r\n\r\n    chooseLayout(page)\r\n    {\r\n        this.setState({\r\n            page:page,\r\n        })\r\n        this.render()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            return (\r\n                <div id=\"instructor\" className=\"sec-design\" dir=\"rtl\">\r\n\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <h2> שלום לחוקר {this.state.user.displayName}</h2>\r\n                    {/*<form id=\"instructor_menu\" className=\"form-design\" name=\"student_form\" method=\"POST\">*/}\r\n                    <button id=\"RequestPurchase\" className=\"btn btn-info\" onClick={() => {\r\n                        NextPage(this.props, \"RequestPurchase\", this.state.user)\r\n                    }}>בקשה לרכישה<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                    <button id=\"BalanceMode\" className=\"btn btn-info\" onClick={ () => {\r\n\r\n                        // NextPage(this.props, \"\", this.state.user)\r\n                    }}>מצב הוצאות ויתרה<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                    <button id=\"repor-button\" className=\"btn btn-info\" onClick={() => {\r\n                        NextPage(this.props, \"ScientificReport\", this.state.user)\r\n                    }}>דוחות מדעים<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n\r\n                    {/*<button id=\"ScientificReport\" className=\"btn btn-info\" onClick={async ()=>{*/}\r\n                    {/*    var file = await GetFormDownload()*/}\r\n                    {/*    const link = document.createElement('a');*/}\r\n                    {/*    link.href = file*/}\r\n                    {/*    document.body.appendChild(link);*/}\r\n                    {/*    link.click();*/}\r\n                    {/*    document.body.removeChild(link);*/}\r\n\r\n\r\n                    {/*}}>הורדת טופס דוח מדעי למילוי<span*/}\r\n                    {/*    className=\"fa fa-arrow-right\"></span></button>*/}\r\n\r\n                    <button id=\"ChatR\" className=\"btn btn-info\" onClick={() => {\r\n                         NextPage(this.props, \"ChatR\", this.state.user)\r\n                    }}>צ'אט למנהל<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                    <button id=\"repor-button\" className=\"btn btn-info\" onClick={() => {\r\n                        NextPage(this.props, \"Profile\", this.state.user)\r\n                    }}>עדכון פרטים או סיסמא<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n                    <button id=\"logout\" className=\"btn btn-info\" onClick={() => {\r\n                        signOut()\r\n                    }}>התנתק\r\n                    </button>\r\n\r\n                    {/*<Grid item xs={5}*/}\r\n                    {/*      container*/}\r\n                    {/*      direction=\"column\"*/}\r\n                    {/*      justify=\"flex-start\"*/}\r\n                    {/*      alignItems=\"flex-start\"*/}\r\n                    {/*>*/}\r\n                    {/*    <DropzoneFiles/>*/}\r\n                    {/*</Grid>*/}\r\n                    {/*</form>*/}\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (<div> {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                            //   css={override}\r\n                                    size={120}\r\n                                    color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }</div>)\r\n    }\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/${page}/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport  default  Researcher;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Manager.js",["283","284"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\UserPage.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\RequestPurchase.js",["285","286","287","288","289","290","291","292"],"import React,{ Fragment } from \"react\";\r\nimport {auth, db, getUser} from '../../../../firebase/firebase';\r\nimport { Radio, RadioGroup} from \"@material-ui/core\";\r\nimport './Researcher.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport firebase from \"firebase\";\r\n//import {storage} from \"./firebase\";\r\n\r\nimport ReactDOM from 'react-dom'\r\nimport SignatureCanvas from 'react-signature-canvas'\r\nimport DropzoneFiles2 from \"../Researcher/DropzoneFiles2\";\r\n\r\nclass RequestPurchase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            page:'menu',\r\n            user: props.location,\r\n            error:false,\r\n            loading: true,\r\n            rule:\"Manager\",\r\n            prevDate:'',\r\n            imgUrl: \"\",\r\n\r\n            viewResearcher: false,\r\n            date:\"\",\r\n            form : {\r\n                date:\"\",\r\n                team:\"\",\r\n                name:\"\",\r\n            }\r\n        };\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        // this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.approvResearcher = this.approvResearcher.bind(this)\r\n\r\n        this.RequestPurchase = this.RequestPurchase.bind(this)\r\n\r\n\r\n    }\r\n\r\n    parser(date)\r\n    {\r\n        var year=''\r\n        var month = ''\r\n        var day = ''\r\n        var j=0;\r\n        for(var i =0; i<date.length; i++)\r\n        {\r\n            if(j===0 && date[i]!=='-')\r\n            {\r\n                year+=date[i]\r\n            }\r\n            else if(j===1 && date[i]!=='-')\r\n            {\r\n                month+=date[i]\r\n            }\r\n            else if(j===2 && date[i]!=='-')\r\n            {\r\n                day+=date[i]\r\n            }\r\n            else\r\n                j++\r\n\r\n        }\r\n        year = parseInt(year)\r\n        month=parseInt(month)\r\n        day= parseInt(day)\r\n        return {year,month,day}\r\n    }\r\n\r\n    loadSpinner(event,massage = \"\"){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n    save() {\r\n        const imgUrl = this.canvas.toDataURL(\"image/png\");\r\n        console.log(imgUrl)\r\n        var form = this.state.form\r\n        form[\"signature\"] = imgUrl;\r\n        this.setState({form:form})\r\n        this.setState({ imgUrl: imgUrl });\r\n\r\n    }\r\n    reset() {\r\n        this.canvas.clear();\r\n    }\r\n    canvas = {\r\n        clear: () => {},\r\n        toDataURL: (param) => {\r\n            return \"\";\r\n        },\r\n    };\r\n    async handleChange(event)\r\n    {\r\n        var form=''\r\n\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        var e = event.target\r\n        // console.log(\"name2\",name)\r\n        // console.log(\"value2\",value)\r\n        // console.log(\"e2\",e)\r\n\r\n        if(name === 'date' && event.target.value!=='' )\r\n        {\r\n            // console.log(\"1111111111111\")\r\n\r\n            this.loadSpinner(true,\"טוען נתוני חוקר\")\r\n            var formResearcher = await db.collection(\"researcher\").doc(auth.currentUser.uid).collection(\"request\").doc(event.target.value).get()\r\n\r\n            if(formResearcher.data())\r\n            {\r\n                // console.log(\"222222222222222\")\r\n                this.setState({form:formResearcher.data().form})\r\n            }\r\n            else\r\n            {\r\n                // console.log(\"33333333333333\")\r\n                var researcherData= await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n                form ={}\r\n                form[name] = value;\r\n                form['name']=researcherData.data().fname+' '+researcherData.data().lname;\r\n                // form['team']=researcherData.data().teamName\r\n                this.setState({form:form})\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // console.log(\"44444444444444\")\r\n            form = this.state.form\r\n            form[name] = value;\r\n            this.setState({form:form})\r\n        }\r\n        this.loadSpinner(false)\r\n\r\n    }\r\n\r\n\r\n    async handleSubmit(event)\r\n    {\r\n        if(!this.state.date) {\r\n            return;\r\n        }\r\n        if(this.state.date === this.state.prevDate) {\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            return ;\r\n        }\r\n        this.loadSpinner(true,\"מעדכן נתונים חדשים\")\r\n        this.setState({prevDate:this.state.date});\r\n        // console.log(\"in\");\r\n        var request = (await db.collection(\"researcher\").doc(auth.currentUser.uid).get()).data().type;\r\n        const collection = await db.collection('researcher').where(\"request\",\"==\",request).get()\r\n        const researchers = [];\r\n        const date = this.state.date\r\n        const collectionPromisesTeam = collection.docs.map( async function(doc) {\r\n            var ref =await db.collection(\"researcher\").doc(doc.id).collection(\"request\").doc(date).get()\r\n            var user = await db.collection(\"researcher\").doc(doc.id).get()\r\n            return [ref,user]\r\n\r\n        })\r\n\r\n        Promise.all(collectionPromisesTeam).then(res => {\r\n            // console.log(\"end prommis\");\r\n            res.forEach(doc=>{\r\n                var approv = false;\r\n                var Request = ''\r\n                if(doc[0].exists) {\r\n                    approv = true;\r\n                    Request = doc[0].data().RequestPurchase;\r\n                }\r\n                var data = doc[1].data();\r\n                var ref = doc[1].id;\r\n                researchers.push({data,approv,ref,Request})\r\n            })\r\n            let i;\r\n            // console.log(researchers.length)\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            for (i=0;i<researchers.length;i++)\r\n            {\r\n                if(!this.state.researchers)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n                else if(researchers[i].approv!==this.state.researchers[i].approv)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n\r\n            }\r\n            this.loadSpinner(false)\r\n        });\r\n\r\n\r\n    }\r\n    loadPage(event){\r\n        this.setState({loading:event})\r\n    }\r\n\r\n    async sendRequest(form){\r\n        console.log(\"form2\",form)\r\n        console.log(\"form.date2\",form.date)\r\n\r\n        this.loadSpinner(true,\"שליחת הבקשה\")\r\n        var path = auth.currentUser.uid\r\n        try{\r\n            var researcher = await db.collection(\"researcher\").doc(path)\r\n            // console.log(\"form1\",form)\r\n            var newDate = await researcher.collection(\"request\").doc(form.date);\r\n            // console.log(\"form.date\",form.date)\r\n            // console.log(\"form\",form)\r\n\r\n            newDate.set({\r\n                form: form,\r\n                date:form.date,\r\n            }).then(async ()=>{\r\n                await this.addDataToTeam(researcher,form.date);\r\n                alert(\"הטופס נשלח בהצלחה\")\r\n                this.loadSpinner(false)\r\n                window.location.reload(true);\r\n\r\n            })\r\n\r\n        }catch(error) {\r\n            console.log(\"err2\")\r\n\r\n            alert(error.message)\r\n            this.loadSpinner(false)\r\n        }\r\n    }\r\n    async addDataToTeam(researcher,date)\r\n    {\r\n        console.log(\"researcher\",researcher)\r\n        console.log(\"date\",date)\r\n\r\n        var user = firebase.auth().currentUser;\r\n        console.log(\"user\",user)\r\n\r\n        var formResearcher = (await researcher.collection('request').doc(date).get()).ref;\r\n        console.log(\"formResearcher\",formResearcher)\r\n\r\n        try{\r\n\r\n\r\n            var team = (await researcher.get()).data();\r\n            var name =(team.fname + \" \"+team.lname);\r\n            // console.log(\"name2\",name)\r\n            // console.log(\"team2\",team)\r\n\r\n            var teamCollection = await db.collection(\"Data\").doc(team.team.id)\r\n            console.log(\"team\",team)\r\n\r\n            console.log(\"team.team.id\",team.team.id)\r\n            // var Collection = await teamCollection.collection(\"Requests\").doc(name)\r\n            var newDate = await teamCollection.collection(\"Requests\").doc(date)\r\n            // var newDate = Collection.collection(date).doc();\r\n            var doc =  await newDate.get()\r\n            var {year,month,day} = this.parser(date)\r\n            var fullDate = new Date()\r\n            fullDate.setTime(0)\r\n            fullDate.setFullYear(year,month-1,day)\r\n\r\n\r\n\r\n\r\n            if(!doc.exists){\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.set({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                    nameResearcher: team.fname + \" \"+team.lname,\r\n                    uid: user.uid\r\n\r\n                })\r\n            }\r\n            else {\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.update({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                    uid: user.uid\r\n\r\n                })\r\n            }\r\n        }catch(error) {\r\n            alert(error.message)\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                // console.log(\"in1\")\r\n                var type = await getUser(user)\r\n                // console.log(type)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    // console.log(\"in2\")\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else\r\n                {\r\n                    // console.log(\"in3\")\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n            // console.log(\"in4\")\r\n            var teamName = await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n            // if(!teamName.data().teamName)\r\n            // {\r\n            //     alert(\"אינך משוייכ/ת לקבוצה יש לפנות למנהל\")\r\n            //     this.loadSpinner(false)\r\n            //     this.BackPage()\r\n            // }\r\n            this.loadSpinner(false,\"\")\r\n            this.setState({loadPage:true})\r\n            this.render()\r\n\r\n        })\r\n\r\n    }\r\n\r\n    approvResearcher(researcher)\r\n    {\r\n\r\n        var researchers =  this.state.researchers;\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].approv = !researchers[i].approv;\r\n                this.setState({researchers:researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    RequestPurchase(event,researcher)\r\n    {\r\n        var researchers = this.state.researchers;\r\n        // console.log(event.target.value);\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].Request = event.target.value\r\n                this.setState({researchers: researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            return (\r\n                <div id=\"ResearcherRequest\" className=\"sec-design\">\r\n\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div dir=\"rtl\">\r\n                        <label id=\"date\" className=\"title-input\">תאריך הבקשה:</label>\r\n                        <input type=\"date\" id=\"insert-date\" name=\"date\" onChange={(e) => this.handleChange(e)}\r\n                               required/>\r\n\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q1i\"\r\n                                name=\"q1\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q1}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם הספק\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <h4>המזמין: מכון שמיר למחקר - ע\"ר</h4>\r\n\r\n                        <div id=\"name-group\">\r\n                            <label id=\"QL\" className=\"title-input\">טלפון המכון: 04-6123901. פקס: 04-6961930</label>\r\n                            <br/>\r\n                        </div>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q2i\"\r\n                                name=\"q2\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q2}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"נייד\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q3i\"\r\n                                name=\"q3\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q3}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"טופס הזמנה מס'\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q4i\"\r\n                                name=\"q4\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q4}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"מצורפת הצעת מחיר מס':\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <h4>פירוט ההצעה:</h4>\r\n                        <table border=\"1\">\r\n\r\n                            <tr>\r\n                                <th>מק\"ט</th>\r\n                                <th>תיאור הפריט</th>\r\n                                <th>מחיר במט\"ח</th>\r\n                                <th>מחיר יח' בש\"ח</th>\r\n                                <th>מס' יחידות</th>\r\n                                <th>מחיר בש\"ח</th>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q5\" id=\"q5i\" placeholder={''}\r\n                                               value={this.state.form.q5 ? (this.state.form.q5) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q6\" id=\"q6i\" placeholder={''}\r\n                                           value={this.state.form.q6 ? (this.state.form.q6) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                           value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q50\" id=\"q50i\" placeholder={''}\r\n                                               value={this.state.form.q50 ? (this.state.form.q50) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q60\" id=\"q60i\" placeholder={''}\r\n                                           value={this.state.form.q60 ? (this.state.form.q60) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                           value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q51\" id=\"q51i\" placeholder={''}\r\n                                               value={this.state.form.q51 ? (this.state.form.q51) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q61\" id=\"q61i\" placeholder={''}\r\n                                           value={this.state.form.q61 ? (this.state.form.q61) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                           value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                                <br/>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                        {/*<div id=\"name-group\">*/}\r\n                        {/*    <label id=\"Q102L\" className=\"title-input\">סה\"כ כולל מע\"מ: </label>*/}\r\n                        {/*    <input type=\"text\" name=\"q102\" id=\"q102i\" placeholder={'התשובה שלך'}*/}\r\n                        {/*           value={this.state.form.q102 ? (this.state.form.q102) : ('')} onChange={(e) => {*/}\r\n                        {/*        this.handleChange(e)*/}\r\n                        {/*    }} required/>*/}\r\n                        {/*</div>*/}\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q11i\"\r\n                                name=\"q11\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q11}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סה'כ כולל מע'מ\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <h4>אבקש לספק לנו את המוצרים הבאים:</h4>\r\n\r\n                        <div id=\"name-group\">\r\n                            <label id=\"QL\" className=\"title-input\">המעבדה ממוקמת במבנה החדש של מכון שמיר למחקר (קומה 2), צמוד למכללת אוהלו</label>\r\n                            <br/>\r\n                        </div>\r\n\r\n                        <div id=\"name-group\">\r\n                            <label id=\"QL\" className=\"title-input\">תנאי תשלום: שוטף + 30</label>\r\n                            <br/>\r\n                        </div>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q12i\"\r\n                                name=\"q12\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q12}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"נא לתאם את קבלת המשלוח עם\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <h4>לשימוש משרד המכון בלבד:</h4>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q13i\"\r\n                                name=\"q13\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q13}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"מטרת הרכישה\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q14i\"\r\n                                name=\"q14\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q14}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תקציב המחקר\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q15i\"\r\n                                name=\"q15\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q15}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"מס' מחקר\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <div id=\"name-group\">\r\n                            <label id=\"QL\" className=\"title-input\">שם החוקר: {this.state.user.displayName}</label>\r\n                            <br/>\r\n                        </div>\r\n\r\n                        {/*<Grid item xs={6}>*/}\r\n                        {/*    <TextField*/}\r\n                        {/*        inputProps={{style: {textAlign: 'center'}}}*/}\r\n                        {/*        id=\"q16i\"*/}\r\n                        {/*        name=\"q16\"*/}\r\n                        {/*        type=\"tel\"*/}\r\n                        {/*        autoComplete=\"off\"*/}\r\n                        {/*        value={this.state.q16}*/}\r\n                        {/*        onChange={(e) => {*/}\r\n                        {/*            this.handleChange(e)*/}\r\n                        {/*        }}*/}\r\n                        {/*        variant=\"standard\"*/}\r\n                        {/*        fullWidth*/}\r\n                        {/*        label=\"חתימת החוקר\"*/}\r\n                        {/*    />*/}\r\n                        {/*</Grid>*/}\r\n                        <br/>\r\n\r\n\r\n                        <Fragment>\r\n                            <div className=\"main\">\r\n                                <p>חתימת החוקר</p>\r\n                                <div style={{backgroundColor: \"#a0a0a0\", width: 400,\r\n                                    height: 200,}}>\r\n                                    <SignatureCanvas\r\n\r\n                                        penColor=\"green\"\r\n                                        canvasProps={{\r\n                                            width: 400,\r\n                                            height: 200,\r\n                                            className: \"write-name-canvas\",\r\n                                        }}\r\n                                        ref={(ref) => {\r\n                                            this.canvas = ref;\r\n                                        }}\r\n                                        id=\"q16i\"\r\n                                        name=\"q16\"\r\n                                        autoComplete=\"off\"\r\n                                        value={this.state.q16}\r\n                                        onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }}\r\n                                        variant=\"standard\"\r\n                                        fullWidth\r\n                                        label=\"חתימת החוקר\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <img\r\n                                        className=\"write-name-img\"\r\n                                        src={\r\n                                            this.state.imgUrl === \"\"\r\n                                                ? (this.state.imgUrl = \"\")\r\n                                                : this.state.imgUrl\r\n                                        }\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                                <div className=\"write-name-operation\">\r\n                                    <button onClick={() => this.reset()}>Reset</button>\r\n                                    <button onClick={() => this.save()}>Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n\r\n\r\n                        <br/>\r\n\r\n                    </div>\r\n                    <div>\r\n                    <p>העלאת נספחי הבקשה</p>\r\n\r\n                    <Grid item xs={5}\r\n                          container\r\n                          direction=\"column\"\r\n                          justify=\"flex-start\"\r\n                          alignItems=\"flex-start\"\r\n                    >\r\n                        <DropzoneFiles2/>\r\n                    </Grid>\r\n                    </div>\r\n\r\n\r\n                    <button id=\"sendData\" className=\"btn btn-info\" onClick={() => {\r\n                        this.save();\r\n                        this.sendRequest(this.state.form)\r\n                    }}>שלח בקשה\r\n                    </button>\r\n                    <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                        this.loadPage()\r\n                        this.BackPage()\r\n                    }}>חזור לתפריט\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (<div> {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                            //   css={override}\r\n                                    size={120}\r\n                                    color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }</div>)\r\n    }\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Researcher/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport  default  RequestPurchase;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UserApproval.js",["293"],"import React from 'react'\r\nimport Select from 'react-select'\r\nimport {db, CreateUser, DeleteUser, auth, getUser} from '../../../../firebase/firebase'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport '../Manager/Manager.css';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n\r\nconst options = [\r\n]\r\n\r\n\r\nclass UserApproval extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n\r\n        };\r\n\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.render()\r\n                    this.setState({loadPage:true})\r\n                    this.loadSpinner(false,\"\")\r\n                    this.loadSpinner(true,\"טוען משתמשים להצגה\")\r\n                    const collection = await db.collection('waitforapproval').get()\r\n                    const usersList = [];\r\n                    collection.forEach(doc => {\r\n                        const data = doc.data();\r\n                        if (data)\r\n                            usersList.push(data)\r\n                    });\r\n                    this.setState({users: usersList});\r\n\r\n                    var nameData =  await db.collection(\"Data\").get();\r\n                    nameData.forEach(doc=>{\r\n                        options.push({ value: doc.ref, label: doc.data().name })\r\n                    })\r\n\r\n                    this.loadSpinner(false,\"\")\r\n\r\n                    return\r\n                }\r\n                else\r\n                {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    radio(e,index,user)\r\n    {\r\n\r\n        var researcher = document.getElementById(\"researcher\"+index)\r\n        var manager = document.getElementById(\"managers\"+index)\r\n        var tester = document.getElementById(\"testers\"+index)\r\n\r\n\r\n        user.type = e.target.value;\r\n\r\n\r\n        if(e.target === researcher) {\r\n            researcher.checked=true;\r\n            manager.checked=false;\r\n            tester.checked=false;\r\n\r\n        }\r\n        else if(e.target === manager) {\r\n            researcher.checked=false;\r\n            manager.checked=true;\r\n            tester.checked=false;\r\n\r\n        }\r\n        else {\r\n            researcher.checked=false;\r\n            manager.checked=false;\r\n            tester.checked=true;\r\n        }\r\n    }\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            if (this.state.page === 'menu')\r\n                return (\r\n                    <div>\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                    </div>\r\n                )\r\n            if (this.state.users) {\r\n                if (this.state.users.length === 0) {\r\n                    return (\r\n                        <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                            {!this.state.spinner[0] ? \"\" :\r\n                                <div id='fr'>\r\n                                    {this.state.spinner[1]}\r\n                                    <div className=\"sweet-loading\">\r\n                                        <ClipLoader style={{\r\n                                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                            borderRadius: \"25px\"\r\n                                        }}\r\n                                                    size={120}\r\n                                                    color={\"#123abc\"}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div id=\"name-group\" className=\"form-group\">\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        אין משתמשים חדשים\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <button id=\"feedback-button\" className=\"btn btn-info\" onClick={() => {\r\n                                        this.BackPage()\r\n                                    }}>חזרה לתפריט\r\n                                    </button>\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                return (\r\n                    <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div align=\"right\">\r\n                            <h2>אישור משתמשים</h2>\r\n                        </div>\r\n                        <div id=\"name-group\" className=\"form-group\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container\r\n                                          direction=\"row\"\r\n                                          justify=\"space-between\"\r\n                                          alignItems=\"center\"\r\n                                          spacing={2}>\r\n\r\n                                        {this.state.users.map((user, index) => (\r\n                                                <Grid item xs={12} key={index}>\r\n                                                    {this.Card(user, index)}\r\n                                                </Grid>\r\n                                            )\r\n                                        )}\r\n\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <button id=\"feedback-button\" className=\"btn btn-info\" onClick={() => {\r\n                                            this.BackPage()\r\n                                        }}>חזרה לתפריט\r\n                                        </button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div id=\"guideAttendReport\" className=\"sec-design\" dir=\"rtl\">\r\n                        {!this.state.spinner[0] ? \"\" :\r\n                            <div id='fr'>\r\n                                {this.state.spinner[1]}\r\n                                <div className=\"sweet-loading\">\r\n                                    <ClipLoader style={{\r\n                                        backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                        borderRadius: \"25px\"\r\n                                    }}\r\n                                                size={120}\r\n                                                color={\"#123abc\"}\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div id=\"name-group\" className=\"form-group\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    טוען משתמשים\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {\"טוען נתוני דף\"}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    Card(user,index) {\r\n        return (\r\n            <div className=\"Card\"  dir=\"rtl\">\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <b>שם מלא: </b>  {user.fname + \" \" + user.lname}<br/>\r\n                        <b> אימייל: </b> {user.email}<br/>\r\n                        <b> טלפון: </b>{user.phone}<br/>\r\n                        {\r\n                            (user.type === \"researcher\") ?\r\n                                (<b> תפקיד: חוקר </b>):(user.type === \"managers\")?\r\n                                (<b> תפקיד: מנהל </b>):(<b> תפקיד: בודק </b>)\r\n\r\n\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={3}>\r\n                        <div>\r\n\r\n                            <label>\r\n                                <input id ={\"researcher\"+index} type=\"radio\" value=\"researcher\"  onClick={e => {\r\n                                    this.radio(e,index,user)\r\n                                }}/>\r\n                                חוקר\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <div>\r\n\r\n                            <label>\r\n                                <input id ={\"managers\"+index} type=\"radio\" value=\"managers\"  onClick={e => {\r\n                                    this.radio(e,index,user)\r\n                                }}/>\r\n                                מנהל\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        {/*<div className=\"text-below-image\">*/}\r\n                        {/*    <label className=\"container\">אישור בקשה<input type='checkbox'  onChange={e=>{*/}\r\n                        {/*        user.approve = e.target.checked*/}\r\n                        {/*    } }/></label>*/}\r\n                        {/*</div>*/}\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <button\r\n                            style={{backgroundColor: \"rgb(50,248,6)\"}}\r\n                            onClick={()=>{\r\n                                CreateUser(user).then(()=>{\r\n                                    var newUsers = []\r\n                                    this.state.users.forEach((user,i)=>{\r\n                                        if(index!==i)\r\n                                            newUsers.push(user)\r\n                                    })\r\n                                    this.setState({users:newUsers})\r\n                                })\r\n                            }}>אישור בקשה </button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <button\r\n                            style={{backgroundColor: \"rgb(248,6,6)\"}}\r\n                            onClick={()=>{\r\n                                DeleteUser(user.uid).then(()=>{\r\n                                    var newUsers = []\r\n                                    this.state.users.forEach((user,i)=>{\r\n                                        if(index!==i)\r\n                                            newUsers.push(user)\r\n                                    })\r\n                                    this.setState({users:newUsers})\r\n                                })\r\n                            }}>דחיית בקשה</button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Temp${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport  default  UserApproval;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\UpdatesFirebase.js",["294","295","296"],"import React, { Component } from \"react\";\r\nimport {db, CreateNewTeam, auth, getUser} from \"../../../../firebase/firebase\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Select from \"react-select\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {CSVLink} from \"react-csv\";\r\n\r\n\r\nvar options = []\r\nvar researchersOptions = []\r\nvar studentsOptions = []\r\nvar emptyresearchersOptions = []\r\nvar emptyStudentsOptions = []\r\nvar emptyTeamOptions = []\r\nvar TeamOptions = []\r\nvar csvresearchersData = []\r\nvar csvmanagersData = []\r\nclass UpdatesFirebase extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state =\r\n            {\r\n                loadPage:false,\r\n                spinner: [true,'נא להמתין הדף נטען'],\r\n                isLoaded:false,\r\n                date:\"\",\r\n                newTeamName:'',\r\n                teamPath:\"\",\r\n                teamName:\"\",\r\n                replaceTeamName:false,\r\n                delete:false,\r\n                showresearchers:false,\r\n                showStudents:false,\r\n                showTeamWithoutresearcher:false,\r\n                showresearcherWithoutTeam:false,\r\n                showStudentWithoutTeam:false,\r\n            }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n    async handleChange(event)\r\n    {\r\n\r\n        var value = event.target.value;\r\n        if(value === '')\r\n            this.setState({newTeamName:value,replaceTeamName:false})\r\n        else\r\n            this.setState({newTeamName:value})\r\n    }\r\n    async deleteTeam(){\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    createCsvFile(users,type)\r\n    {\r\n        if(type ==='researcher')\r\n        {\r\n            csvresearchersData = [\r\n                [\r\n                    \"שם פרטי\",\r\n                    \"שם משפחה\",\r\n                    \"ת.ז\",\r\n                    \"טלפון\",\r\n                    \"מייל\",\r\n                    \"תפקיד\",\r\n                    \"קבוצה\",\r\n                ],\r\n            ];\r\n            users.map(user=>{\r\n                if(user)\r\n                {\r\n                    csvresearchersData.push([\r\n                        user.data().fname,\r\n                        user.data().lname,\r\n                        user.data().ID,\r\n                        user.data().phone.substr(0,3)+\"-\"+user.data().phone.substr(3,user.data().phone.length),\r\n                        user.data().email,\r\n                        user.data().type==='managers'?\"מנהל\":\r\n                            user.data().type==='researcher'?\"חוקר\":\"\",\r\n                        user.data().teamName,\r\n\r\n                    ],)\r\n                }\r\n                return user\r\n            })\r\n        }\r\n        else\r\n        {\r\n            csvmanagersData = [\r\n                [\r\n                    \"שם פרטי\",\r\n                    \"שם משפחה\",\r\n                    \"ת.ז\",\r\n                    \"טלפון\",\r\n                    \"מייל\",\r\n                    \"תפקיד\",\r\n                    \"קבוצה\",\r\n                ],\r\n            ];\r\n            users.map(user=>{\r\n                if(user) {\r\n                    csvmanagersData.push([\r\n                        user.data().fname,\r\n                        user.data().lname,\r\n                        user.data().ID,\r\n                        user.data().phone.substr(0, 2) + \"-\" + user.data().phone.substr(3, user.data().phone.length),\r\n                        user.data().email,\r\n                        user.data().type==='managers'?\"מנהל\":\r\n                            user.data().type==='researcher'?\"חוקר\":\"\",\r\n                        user.data().teamName,\r\n\r\n                    ],)\r\n                }\r\n                return user\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.loadPage)\r\n        {\r\n            return(\r\n                <div id=\"instactorReport\" className=\"sec-design\" dir='rtl'>\r\n\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <input type=\"text\" name=\"team\" placeholder=\"שם משתמש חדש\" onChange={this.handleChange}/>\r\n                        </Grid>\r\n                        <Grid item xs={6} >\r\n                            <button onClick={async ()=>{\r\n                                var newTeam= this.state.newTeamName\r\n                                await CreateNewTeam(newTeam)\r\n                                window.location.reload(true)\r\n                            }}>צור משתמש חדש</button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <button onClick={()=>{\r\n                                if(this.state.newTeamName && this.state.newTeamName.length > 0)\r\n                                    this.setState({replaceTeamName:true})\r\n                                else\r\n                                    alert(\"שם המשתמש החדש לא יכול להיות ריק\")\r\n                            }}>החלף שם למשתמש קיים </button>\r\n                        </Grid>\r\n                        <Grid item xs={8} hidden={!this.state.replaceTeamName}>\r\n                            <Select  placeholder={\" בחר משתמש להחלפת שם \"} options={options} onChange={(e)=>{\r\n                                // console.log(e.label,e.value);\r\n                                this.setState({teamPath:e.value,teamName:e.label})\r\n                            }} required/>\r\n                        </Grid>\r\n                        <Grid item xs={4} hidden={!this.state.replaceTeamName} >\r\n                            <button onClick={async ()=>{\r\n\r\n                                if(this.state.teamName !== this.state.newTeamName) {\r\n                                    await this.setState({replaceTeamName: false})\r\n                                    await this.state.teamPath.update({name:this.state.newTeamName})\r\n                                    alert('בוצע שינוי שם בהצלחה')\r\n                                    window.location.reload(true);\r\n\r\n                                }\r\n                                else\r\n                                {\r\n                                    alert(\"שם זהה לא ניתן לשנות\")\r\n                                }\r\n                            }}>אישור החלפה</button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <button onClick={()=>{\r\n                                this.setState({delete:!this.state.delete})\r\n                                this.deleteTeam()\r\n                            }}>{this.state.delete?'הסתר מחיקת משתמש':'הצג מחיקת משתמש'} </button>\r\n                        </Grid>\r\n                        <Grid item xs={8} hidden={!this.state.delete}>\r\n                            <Select  placeholder={\" בחר משתמש \"} options={options} onChange={(e)=>{\r\n                                // console.log(e.label,e.value);\r\n                                this.setState({teamPath:(e.value).path,teamName:e.label})\r\n                            }} required/>\r\n                        </Grid>\r\n                        <Grid item xs={4} hidden={!this.state.delete} >\r\n                            <button onClick={async ()=>{\r\n                                // console.log(this.state.teamPath)\r\n                                if(this.state.teamPath) {\r\n                                    await this.setState({delete: false})\r\n                                    var d = await db.doc(this.state.teamPath).get()\r\n                                    if(d.data().researcher) {\r\n                                        // console.log(\"team on researcher remove\")\r\n                                        await d.data().researcher.update({\r\n                                            team: null,\r\n                                            teamName: null\r\n                                        })\r\n                                    }\r\n\r\n\r\n                                    var researcher = await  db.collection(\"researcher\").where('teamName','==',this.state.teamName).get()\r\n                                    researcher.docs.forEach(async student=>{\r\n                                        researcher.ref.update({\r\n                                            teamName: null,\r\n                                            team:null\r\n                                        })\r\n                                    })\r\n\r\n                                    await db.doc(this.state.teamPath).delete().then(function() {\r\n                                        alert(\"המשתמש נמחק בהצלחה\");\r\n                                    }).catch(function(error) {\r\n                                        console.error(\"Error removing document: \", error);\r\n                                    });\r\n                                    window.location.reload(true);\r\n\r\n                                }\r\n                                else\r\n                                {\r\n                                    // console.log(\"בחר חוקר\")\r\n                                }\r\n                            }}>מחק</button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <div className=\"text-below-image\">\r\n                                <button onClick={()=>{\r\n                                    this.getAllUsers('researcher')\r\n                                    this.setState({showresearchers:!this.state.showresearchers,researcherTeamName:null,researcherName:null})\r\n\r\n                                }} >{this.state.showresearchers?'הסתר רשימת חוקרים':'הצג רשימת חוקרים'}</button>\r\n                                {\r\n                                    (this.state.showresearchers && this.state.researchers) ? (\r\n                                        <div>\r\n                                            <Grid item xs={12}>\r\n                                                נמצאו:{this.state.researchers.length} חוקרים\r\n                                                <Select placeholder={\" מצא חוקר \"} options={researchersOptions}\r\n                                                        onChange={(e) => {\r\n                                                            // console.log(e.label, e.value);\r\n                                                            this.setState({researchers: [e.value]})\r\n                                                        }}/>\r\n\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <CSVLink\r\n                                                    data={csvresearchersData}\r\n                                                    filename={\"רשימת חוקרים.csv\"}\r\n                                                    className=\"btn btn-primary\"\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <button>\r\n                                                        הורדת פרטי קשר חוקרים\r\n                                                    </button>\r\n                                                </CSVLink>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={12}>\r\n                                                <CSVLink\r\n                                                    data={csvresearchersData}\r\n                                                    filename={\"רשימת חוקרים.doc\"}\r\n                                                    className=\"btn btn-primary\"\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <button>\r\n                                                         וורד הורדת פרטי קשר חוקרים\r\n                                                    </button>\r\n                                                </CSVLink>\r\n                                            </Grid>\r\n                                        </div> ) : ('')\r\n\r\n                                }\r\n                                {\r\n                                    (!this.state.researchers || !this.state.showresearchers)?'':\r\n                                        this.state.researchers.map((researcher,index) => (\r\n                                            <Grid  item xs={12}  key={index}>\r\n                                                <hr/>\r\n                                                {this.card(researcher.data(),index)}\r\n                                            </Grid >\r\n                                        ))\r\n\r\n\r\n                                }\r\n                            </div>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <button id=\"feedback-button\" className=\"btn btn-info\" onClick={()=>{this.BackPage()}}>חזרה לתפריט</button>\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            )\r\n        } else {\r\n            // console.log(this.state.spinner)\r\n            return (\r\n                <div>\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {\"טוען נתוני דף\"}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>)\r\n        }\r\n    }\r\n\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n    async getAllUsers(user) {\r\n        this.loadSpinner(true,\"מיבא נתוני משתמשים\")\r\n\r\n\r\n        if ((user === 'researcher' && this.state.researchers && this.state.researchers > 1) ||\r\n            (user === 'researchersEmpty' && this.state.researchersEmpty && this.state.researchersEmpty > 1) ||\r\n            (user === 'teamEmpty' && this.state.TeamEmpty && this.state.TeamEmpty > 1) ||\r\n            (user === 'Data' && this.state.Data && this.state.Data > 1)) {\r\n            this.loadSpinner(false,\"\")\r\n            return\r\n        }\r\n        // console.log(user)\r\n        var temp = user\r\n        if (user === 'researcher')\r\n            researchersOptions = []\r\n        else if (user === 'researchersEmpty') {\r\n            emptyresearchersOptions = []\r\n            temp = 'researcher'\r\n        } else if (user === 'teamEmpty') {\r\n            emptyTeamOptions = []\r\n            temp = 'Data'\r\n        } else if (user === 'Data') {\r\n            TeamOptions = []\r\n            temp = 'Data'\r\n        }\r\n        var allUsers = []\r\n        await db.collection(temp).get().then(res => {\r\n            res.forEach(res => {\r\n                if (res.data().uid) {\r\n                 if (user === 'researcher') {\r\n                        allUsers.push(res)\r\n                     researchersOptions.push({value: res, label: res.data().fname + ' ' + res.data().lname})\r\n\r\n                    } else if (user === 'researchersEmpty' && !res.data().team) {\r\n                        allUsers.push(res)\r\n                        emptyresearchersOptions.push({value: res, label: res.data().fname + ' ' + res.data().lname})\r\n                    }\r\n                } else if (user === 'teamEmpty' && !res.data().researcher) {\r\n                    allUsers.push(res)\r\n                    emptyTeamOptions.push({value: res, label: res.name})\r\n\r\n                } else if (user === 'Data' && res.data().researcher) {\r\n                    allUsers.push(res)\r\n                    TeamOptions.push({value: res, label: res.name})\r\n                }\r\n            })\r\n        })\r\n        if (user === 'researcher') {\r\n            this.setState({researchers: allUsers})\r\n            this.createCsvFile(allUsers,'researcher')\r\n        }\r\n        else if (user === 'researchersEmpty')\r\n            this.setState({researchersEmpty: allUsers})\r\n        else if (user === 'studentEmpty')\r\n            this.setState({StudentEmpty: allUsers})\r\n        else if (user === 'teamEmpty')\r\n            this.setState({TeamEmpty: allUsers})\r\n        else if (user === 'Data') {\r\n            this.setState({Data: allUsers})\r\n        }\r\n\r\n        this.loadSpinner(false,\"\")\r\n         console.log(\"all users\",allUsers)\r\n    }\r\n\r\n\r\n    async handleSubmit(event)\r\n    {\r\n        this.loadSpinner(true,\"מיבא נתונים\")\r\n        // console.log(this.state.teamPath)\r\n        if(!this.state.date) {\r\n            this.loadSpinner(false,\"\")\r\n            return;\r\n        }\r\n        // console.log(\"in\");\r\n        var team = await db.collection(\"Data\").doc(this.state.teamPath).get();\r\n        // console.log(team)\r\n        this.loadSpinner(false,\"\")\r\n    }\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                var type = await getUser(user)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n                    this.render()\r\n                    this.setState({loadPage:true})\r\n                    this.loadSpinner(true,\"מיבא נתונים\")\r\n                    var nameTeams =  await db.collection(\"Data\").get();\r\n                    nameTeams.forEach(doc=>{\r\n                        options.push({ value: doc.ref, label: doc.data().name })\r\n                    })\r\n                    this.loadSpinner(false,\"\")\r\n                    return\r\n                }\r\n                else\r\n                {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n    async handleChangeDate(event)\r\n    {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        if(name === 'date')\r\n        {\r\n            this.setState({date:value,viewStudent:false});\r\n            this.state.date=value\r\n        }\r\n    }\r\n\r\n    teamCard(team)\r\n    {\r\n        return(\r\n            <div id=\"name-group\" className=\"form-group\" dir=\"rtl\">\r\n                <div className=\"report\" id=\"report\">\r\n                    <div>\r\n                        <h4> שם החוקר: {team.name} </h4>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={8}>\r\n                                <Select  placeholder={\" שיבוץ חוקר \"} options={emptyresearchersOptions} onChange={(e)=>{\r\n                                    // console.log(e.label,e.value);\r\n                                    this.setState({emtpyresearcherTeamPath:e.value,emtpyresearcherTeamName:e.label})\r\n                                }} />\r\n                            </Grid>\r\n                            <Grid item xs={4} hidden={!this.state.emtpyresearcherTeamPath}>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    card(user,index)\r\n    {\r\n        return(\r\n            <div id=\"name-group\" className=\"form-group\" dir=\"rtl\">\r\n                <div className=\"report\" id=\"report\">\r\n                    <div>\r\n\r\n                        <h4> שם: {user.fname+' '+ user.lname} </h4>\r\n                        <h4> טלפון: {user.phone}</h4>\r\n                        <h4> אימייל: {user.email}</h4>\r\n                        <h4> ת.ז: {user.ID}</h4>\r\n                        <h4> חוקר: {user.teamName}</h4>\r\n                        <Grid container spacing={2}>\r\n\r\n\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    loadUser(page)\r\n    {\r\n        this.props.history.push({\r\n            // pathname: `/${page}/${this.state.user.id}`,\r\n            pathname: `/Temp${page}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default UpdatesFirebase;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\DropzoneFiles.js",["297","298","299","300","301","302","303","304","305"],"//העלאת דוח מדעי של החוקר\r\nimport React, {Component} from 'react';\r\nimport firebase, {auth, db, storage} from \"../../../../firebase/firebase\";\r\nimport Dropzone from 'react-dropzone';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\n\r\nclass DropzoneFiles extends Component {\r\n    constructor() {\r\n        super();\r\n        this.onDrop = (files) => {\r\n            this.setState({files})\r\n        };\r\n        this.state = {\r\n            teamPath:\"\",\r\n            report:false,\r\n            files: [],\r\n            maxFile:5,\r\n            date:\"\",\r\n            nameR:\"\",\r\n        };\r\n        this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.handleChangeNameR = this.handleChangeNameR.bind(this)\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        auth.onAuthStateChanged(async user => {\r\n            if (user) {\r\n                this.setState({user:user})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    async upload(files)\r\n    {\r\n        console.log('this.state.nameR ' +this.state.nameR + '% ');\r\n\r\n        if(files!==null && files!==undefined&& files.length<=0)\r\n            return;\r\n        var nameR = this.state.nameR\r\n        var file = files[files.length-1]\r\n        var user =  this.state.user\r\n        var date = this.state.date\r\n        var metadata = {\r\n            customMetadata: {\r\n                'user': user.uid,\r\n            }\r\n        };\r\n\r\n        var storageRef = storage.ref()\r\n        var uploadTask = storageRef.child('forms/' + file.key).put(file,metadata);\r\n        var path = auth.currentUser.uid\r\n\r\n// Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n            (snapshot) => {\r\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        console.log('Upload is running');\r\n                        break;\r\n                }\r\n            },\r\n            (error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n                switch (error.code) {\r\n                    case 'storage/unauthorized':\r\n                        // User doesn't have permission to access the object\r\n                        break;\r\n                    case 'storage/canceled':\r\n                        // User canceled the upload\r\n                        break;\r\n\r\n                    // ...\r\n\r\n                    case 'storage/unknown':\r\n                        // Unknown error occurred, inspect error.serverResponse\r\n                        break;\r\n                }\r\n            },\r\n            () => {\r\n                // Upload completed successfully, now we can get the download URL\r\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    // console.log('File available at', downloadURL);\r\n                     var researcher1 = db.collection(\"researcher\").doc(user.uid).collection(\"ScientificReport\").doc(this.state.date).set({\r\n                         name: file.key,\r\n                         time: new Date().toLocaleString(),\r\n                         date:this.state.date,\r\n                         link:downloadURL,\r\n                         nameR:this.state.nameR,\r\n\r\n                     }).then(()=>{\r\n                         var newFiles = files.slice(0, files.length-1);\r\n                         console.log(\"upload end\")\r\n                         this.upload(newFiles)\r\n                     }).catch((err)=>{\r\n                         storage.refFromURL(downloadURL).delete()\r\n                         var newFiles = files.slice(0, files.length-1);\r\n                         this.upload(newFiles)\r\n                     })\r\n\r\n\r\n\r\n                });\r\n            }\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    async handleChange(event)\r\n    {\r\n        var form=''\r\n\r\n       // var name = event.target.name;\r\n        var value = event.target.value;\r\n        //var e = event.target\r\n\r\n        console.log('form ' ,form);\r\n        console.log('value ' ,value);\r\n\r\n        return value\r\n\r\n    }\r\n\r\n    async handleChangeDate(event)\r\n    {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        if(name === 'date')\r\n        {\r\n            this.setState({date:value});\r\n            this.state.date=value\r\n        }\r\n\r\n    }\r\n    async handleChangeNameR(event)\r\n    {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n\r\n\r\n        if(name === 'q1')\r\n        {\r\n            this.setState({nameR:value});\r\n            this.state.nameR=value\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name}\r\n                {/*{console.log(file)}*/}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n\r\n            <Dropzone onDrop={this.onDrop}>\r\n                {({getRootProps, getInputProps}) => (\r\n\r\n                    <section className=\"container\">\r\n\r\n                        <div {...getRootProps({className: 'dropzone'})}>\r\n\r\n                            <div style={{backgroundColor: \"#a0a0a0\", width: 400, height: 170,textAlign: 'center', padding: '100px 0px 0px 0px'}}>\r\n\r\n                                יש לגרור לכאן את הקבצים\r\n                                <br/>\r\n                                <br/>\r\n                                או ללחוץ כאן\r\n\r\n                                <input {...getInputProps()} />\r\n                            </div>\r\n                        </div>\r\n                        <aside>\r\n                            {\r\n\r\n                                files.length <= 0 ?\r\n                                    <h4></h4>:\r\n                                    <div>\r\n                                        {\r\n                                            this.state.maxFile!=undefined && files.length > this.state.maxFile?\r\n                                                <h4> מספר הקבצים המקסימלי להעלאה הוא {this.state.maxFile}</h4>:\r\n                                                <div>\r\n                                                    <h4> מספר הקבצים להעלאה - {files.length}</h4>\r\n                                                    <ul>{files}</ul>\r\n                                                    <label id=\"date\" className=\"title-input\">הכנס את תאריך הדוח:</label>\r\n                                                    <input type=\"date\" className=\"form-control\" id=\"insert-date\" name=\"date\" onChange={this.handleChangeDate} required/>\r\n                                                    <Grid item xs={12}>\r\n                                                        <TextField\r\n                                                            inputProps={{style: {textAlign: 'center'}}}\r\n                                                            id=\"q1i\"\r\n                                                            name=\"q1\"\r\n                                                            type=\"tel\"\r\n                                                            autoComplete=\"off\"\r\n                                                            onChange={(e) => {\r\n                                                                this.handleChangeNameR(e)\r\n                                                            }}\r\n                                                            variant=\"standard\"\r\n                                                            fullWidth\r\n                                                            label=\"שם המחקר\"\r\n                                                        />\r\n                                                    </Grid>\r\n\r\n\r\n\r\n                                                    <button onClick={()=>{\r\n                                                        this.upload(files)\r\n                                                    }}>העלה קבצים</button>\r\n                                                </div>\r\n                                        }\r\n\r\n                                    </div>\r\n                            }\r\n\r\n\r\n                        </aside>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default  DropzoneFiles ;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ScientificReport.js",["306","307","308","309","310","311","312","313","314","315","316","317","318"],"import  React, {Component} from \"react\";\r\nimport {auth, db, GetFormDownload, getPathData, getUser, signOut} from '../../../../firebase/firebase';\r\nimport './Researcher.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport firebase from \"firebase\";\r\nimport {NextPage} from \"../UserPage\";\r\nimport DropzoneFiles from \"./DropzoneFiles\";\r\nimport MyDropzone from \"./DropzoneFiles.js\";\r\nimport AcceptMaxFiles from \"./DropzoneFiles.js\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst options = [\r\n]\r\nlet csvData = [];\r\n\r\n\r\nclass ScientificReport extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: props.location,\r\n            loadPage:false,\r\n            page:'menu',\r\n            error:false,\r\n            showreport:false,\r\n            loading: true,\r\n            rule:\"Reasearcher\",\r\n            viewResearcher: false,\r\n            reports: [],\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            date:\"\",\r\n            prevDate:'',\r\n            form : {\r\n                date:\"\",\r\n                team:\"\",\r\n                name:\"\",\r\n            }\r\n\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.approvResearcher = this.approvResearcher.bind(this)\r\n        this.RequestPurchase = this.RequestPurchase.bind(this)\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        let spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n    loadPage(event){\r\n        this.setState({loading:event})\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                // console.log(\"in1\")\r\n                let type = await getUser(user)\r\n                // console.log(type)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    // console.log(\"in2\")\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else\r\n                {\r\n                    // console.log(\"in3\")\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n            // console.log(\"in4\")\r\n            let teamName = await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n            // if(!teamName.data().teamName)\r\n            // {\r\n            //     alert(\"אינך משוייכ/ת לקבוצה יש לפנות למנהל\")\r\n            //     this.loadSpinner(false)\r\n            //     this.BackPage()\r\n            // }\r\n            this.loadSpinner(false,\"\")\r\n            this.setState({loadPage:true})\r\n            this.render()\r\n\r\n        })\r\n\r\n    }\r\n    async handleSubmit(event)\r\n    {\r\n        if(!this.state.date) {\r\n            return;\r\n        }\r\n        if(this.state.date === this.state.prevDate) {\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            return ;\r\n        }\r\n        this.loadSpinner(true,\"מעדכן נתונים חדשים\")\r\n        this.setState({prevDate:this.state.date});\r\n        // console.log(\"in\");\r\n        let request = (await db.collection(\"researcher\").doc(auth.currentUser.uid).get()).data().type;\r\n        const collection = await db.collection('researcher').where(\"ScientificReport\",\"==\",request).get()\r\n        const researchers = [];\r\n        const date = this.state.date\r\n        const collectionPromisesTeam = collection.docs.map( async function(doc) {\r\n            let ref =await db.collection(\"researcher\").doc(doc.id).collection(\"ScientificReport\").doc(date).get()\r\n            let user = await db.collection(\"researcher\").doc(doc.id).get()\r\n            return [ref,user]\r\n\r\n        })\r\n\r\n        Promise.all(collectionPromisesTeam).then(res => {\r\n            // console.log(\"end prommis\");\r\n            res.forEach(doc=>{\r\n                let approv = false;\r\n                let Request = ''\r\n                if(doc[0].exists) {\r\n                    approv = true;\r\n                    Request = doc[0].data().RequestPurchase;\r\n                }\r\n                let data = doc[1].data();\r\n                let ref = doc[1].id;\r\n                researchers.push({data,approv,ref,Request})\r\n            })\r\n            let i;\r\n            // console.log(researchers.length)\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            for (i=0;i<researchers.length;i++)\r\n            {\r\n                if(!this.state.researchers)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n                else if(researchers[i].approv!==this.state.researchers[i].approv)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n\r\n            }\r\n            this.loadSpinner(false)\r\n        });\r\n\r\n\r\n    }\r\n    RequestPurchase(event,researcher)\r\n    {\r\n        let researchers = this.state.researchers;\r\n        // console.log(event.target.value);\r\n        for(let i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].Request = event.target.value\r\n                this.setState({researchers: researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n    approvResearcher(researcher)\r\n    {\r\n\r\n        let researchers =  this.state.researchers;\r\n        for(let i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].approv = !researchers[i].approv;\r\n                this.setState({researchers:researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"ReportScientific\" className=\"sec-design\">\r\n\r\n                {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                        //   css={override}\r\n                                size={120}\r\n                                color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n                 }\r\n\r\n                    <Grid container spacing={2}>\r\n                        <button id=\"ReportScientific\" className=\"btn btn-info\" onClick={async ()=>{\r\n                            let file = await GetFormDownload()\r\n                            const link = document.createElement('a');\r\n                            link.href = file\r\n                            document.body.appendChild(link);\r\n                            link.click();\r\n                            document.body.removeChild(link);\r\n\r\n\r\n                        }}>הורדת טופס דוח מדעי למילוי<span\r\n                            className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">:העלאת דוח </label>\r\n                        <Grid item xs={5}\r\n                              container\r\n                              direction=\"column\"\r\n                              justify=\"flex-start\"\r\n                              alignItems=\"flex-start\"\r\n                        >\r\n                            <DropzoneFiles/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n\r\n                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">:חיפוש דוחות </label>\r\n\r\n                        <Grid container spacing={2} >\r\n                            <Grid item xs={5}>\r\n                                <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">עד תאריך </label>\r\n                                <input type=\"date\" className=\"form-control\" id=\"insert-date\" name=\"date\"\r\n                                       onChange={(e)=>{\r\n                                           this.setState({dateTo:e.target.value,options:null,show:false,teamName:null})\r\n                                       }}\r\n                                       required/>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={5}>\r\n                                <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">מתאריך </label>\r\n                                <input type=\"date\" className=\"form-control\"  name=\"date\"\r\n                                       onChange={(e)=>{\r\n                                           this.setState({dateFrom:e.target.value,options:null,show:false,teamName:null})\r\n                                       }}\r\n                                       required/>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={2} hidden={!this.state.dateTo || !this.state.dateFrom}>\r\n                                <label id=\"insert-student\" className=\"btn btn-info\" htmlFor=\"name\"> &nbsp;</label>\r\n                                <button id=\"viewReport\" className=\"btn btn-info\" onClick={() => this.GetReport()}>מצא דוחות<span\r\n                                    className=\"fa fa-arrow-right\"></span></button>\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <Grid item xs={12} hidden={this.state.reports.length < 1}>\r\n                            <hr/>\r\n                            {\r\n                                this.state.reports.map(report => (\r\n                                    <a href={report.link}>{report.date+\" \" +report.nameR}<hr/></a>\r\n                                ))\r\n                            }\r\n                        </Grid>\r\n                        </Grid>\r\n                        <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                            this.loadPage()\r\n                            this.BackPage()\r\n                        }}>חזור לתפריט\r\n                        </button>\r\n                    </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async handleChange(event)\r\n    {\r\n        let form=''\r\n\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        let e = event.target\r\n        if(name === 'date' && event.target.value!=='' )\r\n        {\r\n            this.loadSpinner(true,\"טוען נתונים\")\r\n\r\n            let formGuide = await db.collection(\"researcher\").doc(auth.currentUser.uid).collection(\"ScientificReport\").doc(event.target.value).get()\r\n\r\n            if(formGuide.data() && formGuide.data().locked) {\r\n                alert(\"הדוח לתאריך קיים נא לבחור תאריך אחר\")\r\n                document.getElementById(e.id).value=''\r\n                form = this.state.form;\r\n                // console.log(name);\r\n\r\n                form[name] = '';\r\n                this.setState({form:form})\r\n\r\n            }\r\n            else if(formGuide.data())\r\n            {\r\n                this.setState({form:formGuide.data().form})\r\n\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            form = this.state.form\r\n            form[name] = value;\r\n            this.setState({form:form})\r\n        }\r\n        this.loadSpinner(false)\r\n\r\n\r\n\r\n    }\r\n\r\n    async  GetReport() {\r\n        //this.loadSpinner(true,\"מיבא נתונים\")\r\n        let from = this.GetDates(this.state.dateFrom)\r\n        let to = this.GetDates(this.state.dateTo)\r\n\r\n\r\n        if(!this.state.dateFrom || !this.state.dateTo )\r\n        {\r\n            alert(\"נא למלא תאריך התחלה וסיום\")\r\n            this.loadSpinner(false,'')\r\n            return\r\n        }\r\n        console.log(\"2 \")\r\n\r\n        let options=[]\r\n        this.setState({options ,show:false})\r\n\r\n        let researcherReports = await db.collection(\"researcher\").doc(auth.currentUser.uid).collection(\"ScientificReport\")\r\n            .where(\"date\", \"<=\", to.toISOString().split('T')[0])\r\n            .where(\"date\", \">=\", from.toISOString().split('T')[0])\r\n            .get();\r\n        const reportDocs = await Promise.all(researcherReports.docs.map(doc => doc.data()));\r\n        this.setState({reports: reportDocs})\r\n    }\r\n\r\n    parser(date)\r\n    {\r\n        let year=''\r\n        let month = ''\r\n        let day = ''\r\n        let j=0;\r\n        for(let i =0; i<date.length; i++)\r\n        {\r\n            if(j===0 && date[i]!=='-')\r\n            {\r\n                year+=date[i]\r\n            }\r\n            else if(j===1 && date[i]!=='-')\r\n            {\r\n                month+=date[i]\r\n            }\r\n            else if(j===2 && date[i]!=='-')\r\n            {\r\n                day+=date[i]\r\n            }\r\n            else\r\n                j++\r\n\r\n        }\r\n        year = parseInt(year)\r\n        month=parseInt(month)\r\n        day= parseInt(day)\r\n        return {year,month,day}\r\n    }\r\n\r\n    GetDates(date)\r\n    {\r\n        // if(this.state.forms || this.state.show)\r\n        //     return\r\n\r\n        date = this.parser(date)\r\n        let parsDate = new Date()\r\n        parsDate.setTime(0)\r\n        parsDate.setFullYear(date[\"year\"],date[\"month\"]-1,date[\"day\"])\r\n\r\n        return parsDate;\r\n    }\r\n\r\n\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Researcher/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport  default  ScientificReport;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\financialReports.js",["319","320","321","322","323","324","325","326","327"],"import React from \"react\";\r\nimport {auth, db, GetFormDownloadReportsfinancial, getUser, signOut} from '../../../../firebase/firebase';\r\nimport './Manager.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport firebase from \"firebase\";\r\nimport {NextPage} from \"../UserPage\";\r\nimport DropzoneFiles1 from \"./DropzoneFiles1\";\r\nimport MyDropzone from \"./DropzoneFiles1.js\";\r\nimport AcceptMaxFiles from \"./DropzoneFiles1.js\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst options = [\r\n]\r\n\r\n\r\nclass financialReports extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: props.location,\r\n            loadPage:false,\r\n            page:'menu',\r\n            error:false,\r\n            showreport:false,\r\n            loading: true,\r\n            rule:\"Manager\",\r\n            viewManagers: false,\r\n            reports: [],\r\n            // reportsr: [],\r\n\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            date:\"\",\r\n            prevDate:'',\r\n            form : {\r\n                date:\"\",\r\n                team:\"\",\r\n                name:\"\",\r\n            }\r\n\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.approvManager = this.approvManager.bind(this)\r\n        this.RequestPurchase = this.RequestPurchase.bind(this)\r\n\r\n    }\r\n\r\n    loadSpinner(event,massage){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n\r\n    loadPage(event){\r\n        this.setState({loading:event})\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                // console.log(\"in1\")\r\n                var type = await getUser(user)\r\n                // console.log(type)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    // console.log(\"in2\")\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else\r\n                {\r\n                    // console.log(\"in3\")\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n            // console.log(\"in4\")\r\n            var teamName = await db.collection(\"manager\").doc(auth.currentUser.uid).get()\r\n\r\n            this.loadSpinner(false,\"\")\r\n            this.setState({loadPage:true})\r\n            this.render()\r\n\r\n        })\r\n\r\n    }\r\n    async handleSubmit(event)\r\n    {\r\n        if(!this.state.date) {\r\n            return;\r\n        }\r\n        if(this.state.date === this.state.prevDate) {\r\n            this.setState({viewManagers: !this.state.viewManagers});\r\n            return ;\r\n        }\r\n        this.loadSpinner(true,\"מעדכן נתונים חדשים\")\r\n        this.setState({prevDate:this.state.date});\r\n        // console.log(\"in\");\r\n        let request = (await db.collection(\"managers\").doc(auth.currentUser.uid).get()).data().type;\r\n        const collection = await db.collection('managers').where(\"FinancialReport\",\"==\",request).get()\r\n        const managers = [];\r\n        const date = this.state.date\r\n        const collectionPromisesTeam = collection.docs.map( async function(doc) {\r\n            let ref =await db.collection(\"managers\").doc(doc.id).collection(\"FinancialReport\").doc(date).get()\r\n            let user = await db.collection(\"managers\").doc(doc.id).get()\r\n            return [ref,user]\r\n\r\n        })\r\n\r\n        Promise.all(collectionPromisesTeam).then(res => {\r\n            // console.log(\"end prommis\");\r\n            res.forEach(doc=>{\r\n                let approv = false;\r\n                let Request = ''\r\n                if(doc[0].exists) {\r\n                    approv = true;\r\n                    Request = doc[0].data().RequestPurchase;\r\n                }\r\n                let data = doc[1].data();\r\n                let ref = doc[1].id;\r\n                managers.push({data,approv,ref,Request})\r\n            })\r\n            let i;\r\n            // console.log(researchers.length)\r\n            this.setState({viewManagers: !this.state.viewManagers});\r\n            for (i=0;i<managers.length;i++)\r\n            {\r\n                if(!this.state.managers)\r\n                {\r\n                    this.setState({managers: managers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n                else if(managers[i].approv!==this.state.managers[i].approv)\r\n                {\r\n                    this.setState({managers: managers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n\r\n            }\r\n            this.loadSpinner(false)\r\n        });\r\n\r\n\r\n    }\r\n    RequestPurchase(event,manager)\r\n    {\r\n        let managers = this.state.managers;\r\n        // console.log(event.target.value);\r\n        for(let i=0;i<managers.length;i++)\r\n        {\r\n            if(managers[i] === managers)\r\n            {\r\n                managers[i].Request = event.target.value\r\n                this.setState({managers: managers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n    approvManager(manager)\r\n    {\r\n\r\n        let managers =  this.state.managers;\r\n        for(let i=0;i<managers.length;i++)\r\n        {\r\n            if(managers[i] === managers)\r\n            {\r\n                managers[i].approv = !managers[i].approv;\r\n                this.setState({managers:managers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n    async handleChange(event)\r\n    {\r\n        let form=''\r\n\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        let e = event.target\r\n        if(name === 'date' && event.target.value!=='' )\r\n        {\r\n            this.loadSpinner(true,\"טוען נתונים\")\r\n\r\n            let formGuide = await db.collection(\"managers\").doc(auth.currentUser.uid).collection(\"FinancialReport\").doc(event.target.value).get()\r\n\r\n            if(formGuide.data() && formGuide.data().locked) {\r\n                alert(\"הדוח לתאריך קיים נא לבחור תאריך אחר\")\r\n                document.getElementById(e.id).value=''\r\n                form = this.state.form;\r\n                // console.log(name);\r\n\r\n                form[name] = '';\r\n                this.setState({form:form})\r\n\r\n            }\r\n            else if(formGuide.data())\r\n            {\r\n                this.setState({form:formGuide.data().form})\r\n\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            form = this.state.form\r\n            form[name] = value;\r\n            this.setState({form:form})\r\n        }\r\n        this.loadSpinner(false)\r\n\r\n\r\n\r\n    }\r\n    async  GetReport() {\r\n        //this.loadSpinner(true,\"מיבא נתונים\")\r\n        let from = this.GetDates(this.state.dateFrom)\r\n        let to = this.GetDates(this.state.dateTo)\r\n\r\n\r\n        if(!this.state.dateFrom || !this.state.dateTo )\r\n        {\r\n            alert(\"נא למלא תאריך התחלה וסיום\")\r\n            this.loadSpinner(false,'')\r\n            return\r\n        }\r\n        console.log(\"2 \")\r\n\r\n        let options=[]\r\n        this.setState({options ,show:false})\r\n\r\n        let managerReports = await db.collection(\"managers\").doc(auth.currentUser.uid).collection(\"FinancialReport\")\r\n            .where(\"date\", \"<=\", to.toISOString().split('T')[0])\r\n            .where(\"date\", \">=\", from.toISOString().split('T')[0])\r\n            .get();\r\n        const reportDocs = await Promise.all(managerReports.docs.map(doc => doc.data()));\r\n        this.setState({reports: reportDocs})\r\n    }\r\n    // async  GetReport1() {\r\n    //     //this.loadSpinner(true,\"מיבא נתונים\")\r\n    //     let from = this.GetDates(this.state.dateFrom)\r\n    //     let to = this.GetDates(this.state.dateTo)\r\n    //\r\n    //\r\n    //     if(!this.state.dateFrom || !this.state.dateTo )\r\n    //     {\r\n    //         alert(\"נא למלא תאריך התחלה וסיום\")\r\n    //         this.loadSpinner(false,'')\r\n    //         return\r\n    //     }\r\n    //     console.log(\"2 \")\r\n    //\r\n    //     let options=[]\r\n    //     this.setState({options ,show:false})\r\n    //\r\n    //     let researcherReports = await db.collection(\"researcher\").doc(auth.currentUser.uid).collection(\"ScientificReport\")\r\n    //         .where(\"date\", \"<=\", to.toISOString().split('T')[0])\r\n    //         .where(\"date\", \">=\", from.toISOString().split('T')[0])\r\n    //         .get();\r\n    //     const reportDocs = await Promise.all(researcherReports.docs.map(doc => doc.data()));\r\n    //     this.setState({reportsr: reportDocs})\r\n    // }\r\n    parser(date)\r\n    {\r\n        let year=''\r\n        let month = ''\r\n        let day = ''\r\n        let j=0;\r\n        for(let i =0; i<date.length; i++)\r\n        {\r\n            if(j===0 && date[i]!=='-')\r\n            {\r\n                year+=date[i]\r\n            }\r\n            else if(j===1 && date[i]!=='-')\r\n            {\r\n                month+=date[i]\r\n            }\r\n            else if(j===2 && date[i]!=='-')\r\n            {\r\n                day+=date[i]\r\n            }\r\n            else\r\n                j++\r\n\r\n        }\r\n        year = parseInt(year)\r\n        month=parseInt(month)\r\n        day= parseInt(day)\r\n        return {year,month,day}\r\n    }\r\n    GetDates(date)\r\n    {\r\n        // if(this.state.forms || this.state.show)\r\n        //     return\r\n\r\n        date = this.parser(date)\r\n        let parsDate = new Date()\r\n        parsDate.setTime(0)\r\n        parsDate.setFullYear(date[\"year\"],date[\"month\"]-1,date[\"day\"])\r\n\r\n        return parsDate;\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"FinancialReport\" className=\"sec-design\">\r\n\r\n                {!this.state.spinner[0] ? \"\" :\r\n                    <div id='fr'>\r\n                        {this.state.spinner[1]}\r\n                        <div className=\"sweet-loading\">\r\n                            <ClipLoader style={{\r\n                                backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                borderRadius: \"25px\"\r\n                            }}\r\n                                //   css={override}\r\n                                        size={120}\r\n                                        color={\"#123abc\"}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <Grid container spacing={2}>\r\n                    <button id=\"Reportsfinancial\" className=\"btn btn-info\" onClick={async ()=>{\r\n                        var file = await GetFormDownloadReportsfinancial()\r\n                        const link = document.createElement('a');\r\n                        link.href = file\r\n                        document.body.appendChild(link);\r\n                        link.click();\r\n                        document.body.removeChild(link);\r\n\r\n\r\n                    }}>הורדת דוח כספי למילוי<span\r\n                        className=\"fa fa-arrow-right\"></span></button>\r\n\r\n                    <Grid item xs={5}\r\n                          container\r\n                          direction=\"column\"\r\n                          justify=\"flex-start\"\r\n                          alignItems=\"flex-start\"\r\n                    >\r\n                        <DropzoneFiles1/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n\r\n                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">:חיפוש דוחות </label>\r\n\r\n                        <Grid container spacing={2} >\r\n                            <Grid item xs={5}>\r\n                                <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">עד תאריך </label>\r\n                                <input type=\"date\" className=\"form-control\" id=\"insert-date\" name=\"date\"\r\n                                       onChange={(e)=>{\r\n                                           this.setState({dateTo:e.target.value,options:null,show:false,teamName:null})\r\n                                       }}\r\n                                       required/>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={5}>\r\n                                <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">מתאריך </label>\r\n                                <input type=\"date\" className=\"form-control\"  name=\"date\"\r\n                                       onChange={(e)=>{\r\n                                           this.setState({dateFrom:e.target.value,options:null,show:false,teamName:null})\r\n                                       }}\r\n                                       required/>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs={10} hidden={!this.state.dateTo || !this.state.dateFrom}>\r\n                                <label id=\"insert-student\" className=\"btn btn-info\" htmlFor=\"name\"> &nbsp;</label>\r\n                                <button id=\"viewReport\" className=\"btn btn-info\" onClick={() => this.GetReport()}>מצא דוחות כספיים<span\r\n                                    className=\"fa fa-arrow-right\"></span></button>\r\n                            </Grid>\r\n                            <Grid item xs={12} hidden={this.state.reports.length < 1}>\r\n                                <hr/>\r\n                                {\r\n                                    this.state.reports.map(report => (\r\n                                        <a href={report.link}>{report.date+\" \" +report.nameR}<hr/></a>\r\n                                    ))\r\n                                }\r\n                            </Grid>\r\n                            {/*<Grid item xs={5} hidden={!this.state.dateTo || !this.state.dateFrom}>*/}\r\n                            {/*    <label id=\"insert-student\" className=\"btn btn-info\" htmlFor=\"name\"> &nbsp;</label>*/}\r\n                            {/*    <button id=\"viewReport\" className=\"btn btn-info\" onClick={() => this.GetReport1()}>מצא דוחות מדעיים<span*/}\r\n                            {/*        className=\"fa fa-arrow-right\"></span></button>*/}\r\n                            {/*</Grid>*/}\r\n\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        {/*<Grid item xs={12} hidden={this.state.reports.length < 1}>*/}\r\n                        {/*    <hr/>*/}\r\n                        {/*    {*/}\r\n                        {/*        this.state.reports.map(report => (*/}\r\n                        {/*            <a href={report.link}>{report.date+\" \" +report.nameR}<hr/></a>*/}\r\n                        {/*        ))*/}\r\n                        {/*    }*/}\r\n                        {/*</Grid>*/}\r\n                    </Grid>\r\n\r\n\r\n                    <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                        this.loadPage()\r\n                        this.BackPage()\r\n                    }}>חזור לתפריט\r\n                    </button>\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport  default  financialReports;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\DropzoneFiles1.js",["328","329","330","331","332","333","334","335","336"],"//העלאת דוח כספי של המנהל\r\nimport React, {Component} from 'react';\r\nimport firebase, {auth, db, storage} from \"../../../../firebase/firebase\";\r\nimport Dropzone from 'react-dropzone';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass DropzoneFiles1 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.onDrop = (files) => {\r\n            this.setState({files})\r\n        };\r\n        this.state = {\r\n            teamPath:\"\",\r\n            report:false,\r\n            files: [],\r\n            maxFile:5,\r\n            date:\"\",\r\n        };\r\n        this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.handleChangeNameR = this.handleChangeNameR.bind(this)\r\n\r\n    }\r\n    async componentDidMount() {\r\n        auth.onAuthStateChanged(async user => {\r\n            if (user) {\r\n                this.setState({user:user})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async upload(files)\r\n    {\r\n\r\n        if(files!==null && files!==undefined&& files.length<=0)\r\n            return;\r\n        var nameR = this.state.nameR\r\n\r\n        var file = files[files.length-1]\r\n        var user =  this.state.user\r\n        var date = this.state.date\r\n\r\n        var metadata = {\r\n            customMetadata: {\r\n                'user': user.uid,\r\n            }\r\n        };\r\n\r\n        var storageRef = storage.ref()\r\n        var uploadTask = storageRef.child('forms/' + file.key).put(file,metadata);\r\n        var path = auth.currentUser.uid\r\n\r\n\r\n// Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n            (snapshot) => {\r\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                // console.log('Upload is ' + progress + '% done');\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        console.log('Upload is running');\r\n                        break;\r\n                }\r\n            },\r\n            (error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n                switch (error.code) {\r\n                    case 'storage/unauthorized':\r\n                        // User doesn't have permission to access the object\r\n                        break;\r\n                    case 'storage/canceled':\r\n                        // User canceled the upload\r\n                        break;\r\n\r\n                    // ...\r\n\r\n                    case 'storage/unknown':\r\n                        // Unknown error occurred, inspect error.serverResponse\r\n                        break;\r\n                }\r\n            },\r\n            () => {\r\n                // Upload completed successfully, now we can get the download URL\r\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    // console.log('File available at', downloadURL);\r\n                    var formGuide = db.collection(\"managers\").doc(user.uid).collection(\"FinancialReport\").doc(this.state.date).set({\r\n                        name: file.key,\r\n                        time: new Date().toLocaleString(),\r\n                        date:this.state.date,\r\n\r\n                        link:downloadURL,\r\n                        nameR:this.state.nameR,\r\n\r\n                    }).then(()=>{\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        console.log(\"upload end\")\r\n                        this.upload(newFiles)\r\n                    }).catch((err)=>{\r\n                        storage.refFromURL(downloadURL).delete()\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        this.upload(newFiles)\r\n                    })\r\n\r\n\r\n                });\r\n            }\r\n\r\n        );\r\n\r\n    }\r\n\r\n    async handleChange(event)\r\n    {\r\n        var form=''\r\n\r\n        // var name = event.target.name;\r\n        var value = event.target.value;\r\n        //var e = event.target\r\n\r\n        console.log('form ' ,form);\r\n        console.log('value ' ,value);\r\n\r\n        return value\r\n\r\n    }\r\n    async handleChangeDate(event)\r\n    {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        if(name === 'date')\r\n        {\r\n            this.setState({date:value});\r\n            this.state.date=value\r\n        }\r\n        console.log('name ' ,name);\r\n        console.log('value ' ,value);\r\n    }\r\n\r\n    async handleChangeNameR(event)\r\n    {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n\r\n\r\n        if(name === 'q1')\r\n        {\r\n            this.setState({nameR:value});\r\n            this.state.nameR=value\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name}\r\n                {/*{console.log(file)}*/}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <Dropzone onDrop={this.onDrop}>\r\n                {({getRootProps, getInputProps}) => (\r\n                    <section className=\"container\">\r\n                        <div {...getRootProps({className: 'dropzone'})}>\r\n\r\n                            <div style={{backgroundColor: \"#a0a0a0\", width: 400, height: 170,textAlign: 'center', padding: '100px 0px 0px 0px'}}>\r\n\r\n                                יש לגרור לכאן את הקבצים\r\n                                <br/>\r\n                                <br/>\r\n                                או ללחוץ כאן\r\n\r\n                                <input {...getInputProps()} />\r\n                            </div>\r\n                        </div>\r\n                        <aside>\r\n                            {\r\n\r\n                                files.length <= 0 ?\r\n                                    <h4></h4>:\r\n                                    <div>\r\n                                        {\r\n                                            this.state.maxFile!=undefined && files.length > this.state.maxFile?\r\n                                                <h4> מספר הקבצים המקסימלי להעלאה הוא {this.state.maxFile}</h4>:\r\n                                                <div>\r\n                                                    <h4> מספר הקבצים להעלאה - {files.length}</h4>\r\n                                                    <ul>{files}</ul>\r\n                                                    <label id=\"date\" className=\"title-input\">הכנס את תאריך הדוח:</label>\r\n                                                    <input type=\"date\" className=\"form-control\" id=\"insert-date\" name=\"date\" onChange={this.handleChangeDate} required/>\r\n                                                    <Grid item xs={12}>\r\n                                                        <TextField\r\n                                                            inputProps={{style: {textAlign: 'center'}}}\r\n                                                            id=\"q1i\"\r\n                                                            name=\"q1\"\r\n                                                            type=\"tel\"\r\n                                                            autoComplete=\"off\"\r\n                                                            onChange={(e) => {\r\n                                                                this.handleChangeNameR(e)\r\n                                                            }}\r\n                                                            variant=\"standard\"\r\n                                                            fullWidth\r\n                                                            label=\"שם המחקר\"\r\n                                                        />\r\n                                                    </Grid>\r\n                                                    <button onClick={()=>{\r\n                                                        this.upload(files)\r\n                                                    }}>העלה קבצים</button>\r\n                                                </div>\r\n                                        }\r\n\r\n                                    </div>\r\n                            }\r\n\r\n\r\n                        </aside>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default  DropzoneFiles1 ;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ResearchBudgets.js",["337","338","339","340","341","342","343","344"],"import React,{ Fragment } from \"react\";\r\nimport {auth, db, getUser} from '../../../../firebase/firebase';\r\nimport { Radio, RadioGroup} from \"@material-ui/core\";\r\nimport './Manager.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport firebase from \"firebase\";\r\n//import {storage} from \"./firebase\";\r\n\r\nimport ReactDOM from 'react-dom'\r\nimport SignatureCanvas from 'react-signature-canvas'\r\n\r\nclass ResearchBudgets extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loadPage:false,\r\n            spinner: [true,'נא להמתין הדף נטען'],\r\n            page:'menu',\r\n            user: props.location,\r\n            error:false,\r\n            loading: true,\r\n            rule:\"Manager\",\r\n            prevDate:'',\r\n            imgUrl: \"\",\r\n\r\n            viewResearcher: false,\r\n            date:\"\",\r\n            form : {\r\n                date:\"\",\r\n                team:\"\",\r\n                name:\"\",\r\n            }\r\n        };\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        // this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.approvResearcher = this.approvResearcher.bind(this)\r\n\r\n        this.RequestPurchase = this.RequestPurchase.bind(this)\r\n\r\n\r\n    }\r\n\r\n    parser(date)\r\n    {\r\n        var year=''\r\n        var month = ''\r\n        var day = ''\r\n        var j=0;\r\n        for(var i =0; i<date.length; i++)\r\n        {\r\n            if(j===0 && date[i]!=='-')\r\n            {\r\n                year+=date[i]\r\n            }\r\n            else if(j===1 && date[i]!=='-')\r\n            {\r\n                month+=date[i]\r\n            }\r\n            else if(j===2 && date[i]!=='-')\r\n            {\r\n                day+=date[i]\r\n            }\r\n            else\r\n                j++\r\n\r\n        }\r\n        year = parseInt(year)\r\n        month=parseInt(month)\r\n        day= parseInt(day)\r\n        return {year,month,day}\r\n    }\r\n\r\n    loadSpinner(event,massage = \"\"){\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({spinner:spinner})\r\n    }\r\n    save() {\r\n        const imgUrl = this.canvas.toDataURL(\"image/png\");\r\n        console.log(imgUrl)\r\n        var form = this.state.form\r\n        form[\"signature\"] = imgUrl;\r\n        this.setState({form:form})\r\n        this.setState({ imgUrl: imgUrl });\r\n\r\n    }\r\n    reset() {\r\n        this.canvas.clear();\r\n    }\r\n    canvas = {\r\n        clear: () => {},\r\n        toDataURL: (param) => {\r\n            return \"\";\r\n        },\r\n    };\r\n    async handleChange(event)\r\n    {\r\n        var form=''\r\n\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        var e = event.target\r\n        // console.log(\"name2\",name)\r\n        // console.log(\"value2\",value)\r\n        // console.log(\"e2\",e)\r\n\r\n        if(name === 'date' && event.target.value!=='' )\r\n        {\r\n            // console.log(\"1111111111111\")\r\n\r\n            this.loadSpinner(true,\"טוען נתוני חוקר\")\r\n            var formResearcher = await db.collection(\"researcher\").doc(auth.currentUser.uid).collection(\"request\").doc(event.target.value).get()\r\n\r\n            if(formResearcher.data())\r\n            {\r\n                // console.log(\"222222222222222\")\r\n                this.setState({form:formResearcher.data().form})\r\n            }\r\n            else\r\n            {\r\n                // console.log(\"33333333333333\")\r\n                var researcherData= await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n                form ={}\r\n                form[name] = value;\r\n                form['name']=researcherData.data().fname+' '+researcherData.data().lname;\r\n                // form['team']=researcherData.data().teamName\r\n                this.setState({form:form})\r\n            }\r\n        }\r\n        else\r\n        {\r\n            // console.log(\"44444444444444\")\r\n            form = this.state.form\r\n            form[name] = value;\r\n            this.setState({form:form})\r\n        }\r\n        this.loadSpinner(false)\r\n\r\n    }\r\n\r\n\r\n    async handleSubmit(event)\r\n    {\r\n        if(!this.state.date) {\r\n            return;\r\n        }\r\n        if(this.state.date === this.state.prevDate) {\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            return ;\r\n        }\r\n        this.loadSpinner(true,\"מעדכן נתונים חדשים\")\r\n        this.setState({prevDate:this.state.date});\r\n        // console.log(\"in\");\r\n        var request = (await db.collection(\"researcher\").doc(auth.currentUser.uid).get()).data().type;\r\n        const collection = await db.collection('researcher').where(\"request\",\"==\",request).get()\r\n        const researchers = [];\r\n        const date = this.state.date\r\n        const collectionPromisesTeam = collection.docs.map( async function(doc) {\r\n            var ref =await db.collection(\"researcher\").doc(doc.id).collection(\"request\").doc(date).get()\r\n            var user = await db.collection(\"researcher\").doc(doc.id).get()\r\n            return [ref,user]\r\n\r\n        })\r\n\r\n        Promise.all(collectionPromisesTeam).then(res => {\r\n            // console.log(\"end prommis\");\r\n            res.forEach(doc=>{\r\n                var approv = false;\r\n                var Request = ''\r\n                if(doc[0].exists) {\r\n                    approv = true;\r\n                    Request = doc[0].data().RequestPurchase;\r\n                }\r\n                var data = doc[1].data();\r\n                var ref = doc[1].id;\r\n                researchers.push({data,approv,ref,Request})\r\n            })\r\n            let i;\r\n            // console.log(researchers.length)\r\n            this.setState({viewResearcher: !this.state.viewResearcher});\r\n            for (i=0;i<researchers.length;i++)\r\n            {\r\n                if(!this.state.researchers)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n                else if(researchers[i].approv!==this.state.researchers[i].approv)\r\n                {\r\n                    this.setState({researchers: researchers});\r\n                    this.loadSpinner(false)\r\n                    return\r\n                }\r\n\r\n            }\r\n            this.loadSpinner(false)\r\n        });\r\n\r\n\r\n    }\r\n    loadPage(event){\r\n        this.setState({loading:event})\r\n    }\r\n\r\n    async sendRequest(form){\r\n        console.log(\"form2\",form)\r\n        console.log(\"form.date2\",form.date)\r\n\r\n        this.loadSpinner(true,\"שליחת הבקשה\")\r\n        var path = auth.currentUser.uid\r\n        try{\r\n            var researcher = await db.collection(\"researcher\").doc(path)\r\n            // console.log(\"form1\",form)\r\n            var newDate = await researcher.collection(\"request\").doc(form.date);\r\n            // console.log(\"form.date\",form.date)\r\n            // console.log(\"form\",form)\r\n\r\n            newDate.set({\r\n                form: form,\r\n                date:form.date,\r\n            }).then(async ()=>{\r\n                await this.addDataToTeam(researcher,form.date);\r\n                alert(\"הטופס נשלח בהצלחה\")\r\n                this.loadSpinner(false)\r\n                window.location.reload(true);\r\n\r\n            })\r\n\r\n        }catch(error) {\r\n            console.log(\"err2\")\r\n\r\n            alert(error.message)\r\n            this.loadSpinner(false)\r\n        }\r\n    }\r\n    async addDataToTeam(researcher,date)\r\n    {\r\n        console.log(\"researcher2\",researcher)\r\n        console.log(\"date2\",date)\r\n\r\n        var user = firebase.auth().currentUser;\r\n\r\n        var formResearcher = (await researcher.collection('request').doc(date).get()).ref;\r\n        try{\r\n            var team = (await researcher.get()).data();\r\n            var name =(team.fname + \" \"+team.lname);\r\n            // console.log(\"name2\",name)\r\n            // console.log(\"team2\",team)\r\n\r\n            var teamCollection = await db.collection(\"Data\").doc(team.team.id)\r\n            // var Collection = await teamCollection.collection(\"Requests\").doc(name)\r\n            var newDate = await teamCollection.collection(\"Requests\").doc(date)\r\n            // var newDate = Collection.collection(date).doc();\r\n            var doc =  await newDate.get()\r\n            var {year,month,day} = this.parser(date)\r\n            var fullDate = new Date()\r\n            fullDate.setTime(0)\r\n            fullDate.setFullYear(year,month-1,day)\r\n\r\n            // console.log(\"team.team.id\",team.team.id)\r\n            // console.log(\"teamCollection\",teamCollection)\r\n            // console.log(\"newDate\",newDate)\r\n            // console.log(\"fullDate\",fullDate)\r\n            // console.log(\"formResearcher\",formResearcher)\r\n\r\n            // var temp = newDate.set({\r\n            //     date:fullDate,\r\n            //     RequestResearcher: formResearcher,\r\n            //     nameResearcher: team.fname + \" \"+team.lname,\r\n            //\r\n            // })\r\n            //\r\n            // // db.collection(\"Data\").doc().set({name})\r\n            // await db.collection(\"Data\").doc().collection(name).set(temp).then(()=>{\r\n            //         alert(\"הדוח נוסף\")\r\n            //         return true;\r\n            //     }\r\n            // ).catch((e)=>{\r\n            //     alert(\"הדוח לא הוסף\")\r\n            //     return false;\r\n            // })\r\n\r\n\r\n            if(!doc.exists){\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.set({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                    nameResearcher: team.fname + \" \"+team.lname,\r\n                    uid: user.uid\r\n\r\n                })\r\n            }\r\n            else {\r\n\r\n                // console.log(\"doc.exists\",doc.exists)\r\n                // console.log(\"doc\",doc)\r\n\r\n                newDate.update({\r\n                    date:fullDate,\r\n                    RequestResearcher: formResearcher,\r\n                    uid: user.uid\r\n\r\n                })\r\n            }\r\n        }catch(error) {\r\n            alert(error.message)\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var href =  window.location.href.split(\"/\",5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user=>{\r\n            if(user)\r\n            {\r\n\r\n                // console.log(\"in1\")\r\n                var type = await getUser(user)\r\n                // console.log(type)\r\n                if(href[4] === user.uid && (href[3] === type||type==='Tester'))\r\n                {\r\n                    // console.log(\"in2\")\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else\r\n                {\r\n                    // console.log(\"in3\")\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n            // console.log(\"in4\")\r\n            var teamName = await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n            // if(!teamName.data().teamName)\r\n            // {\r\n            //     alert(\"אינך משוייכ/ת לקבוצה יש לפנות למנהל\")\r\n            //     this.loadSpinner(false)\r\n            //     this.BackPage()\r\n            // }\r\n            this.loadSpinner(false,\"\")\r\n            this.setState({loadPage:true})\r\n            this.render()\r\n\r\n        })\r\n\r\n    }\r\n\r\n    approvResearcher(researcher)\r\n    {\r\n\r\n        var researchers =  this.state.researchers;\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].approv = !researchers[i].approv;\r\n                this.setState({researchers:researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    RequestPurchase(event,researcher)\r\n    {\r\n        var researchers = this.state.researchers;\r\n        // console.log(event.target.value);\r\n        for(var i=0;i<researchers.length;i++)\r\n        {\r\n            if(researchers[i] === researcher)\r\n            {\r\n                researchers[i].Request = event.target.value\r\n                this.setState({researchers: researchers})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if(this.state.loadPage) {\r\n            return (\r\n                <div id=\"ResearcherRequest\" className=\"sec-design\">\r\n\r\n                    {!this.state.spinner[0] ? \"\" :\r\n                        <div id='fr'>\r\n                            {this.state.spinner[1]}\r\n                            <div className=\"sweet-loading\">\r\n                                <ClipLoader style={{\r\n                                    backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                    borderRadius: \"25px\"\r\n                                }}\r\n                                    //   css={override}\r\n                                            size={120}\r\n                                            color={\"#123abc\"}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <h4>דו\"ח תקציבי למחקר משרד המדע</h4>\r\n                    <Grid item xs={5}>\r\n                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">מתאריך </label>\r\n                        <input type=\"date\" className=\"form-control\"  name=\"date\"\r\n                               onChange={(e)=>{\r\n                                   this.setState({dateFrom:e.target.value,options:null,show:false,teamName:null})\r\n                               }}\r\n                               required/>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <label id=\"insert-student\" className=\"title-input\" htmlFor=\"name\">עד תאריך </label>\r\n                        <input type=\"date\" className=\"form-control\" id=\"insert-date\" name=\"date\"\r\n                               onChange={(e)=>{\r\n                                   this.setState({dateTo:e.target.value,options:null,show:false,teamName:null})\r\n                               }}\r\n                               required/>\r\n                    </Grid>\r\n\r\n                    <div dir=\"rtl\">\r\n\r\n\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q1i\"\r\n                                name=\"q1\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q1}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם הגוף המממן\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        {/*<div id=\"name-group\">*/}\r\n                        {/*    <label id=\"QL\" className=\"title-input\">טלפון המכון: 04-6123901. פקס: 04-6961930</label>*/}\r\n                        {/*    <br/>*/}\r\n                        {/*</div>*/}\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q2i\"\r\n                                name=\"q2\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q2}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"חוקר ראשי\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q3i\"\r\n                                name=\"q3\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q3}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"מס מחקר\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q4i\"\r\n                                name=\"q4\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q4}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"שם נושא המחקר\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q5i\"\r\n                                name=\"q5\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q5}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סכום מחקר כולל\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q6i\"\r\n                                name=\"q6\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q6}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סכום מחקר שנתי\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <h4>פירוט ההוצאות:</h4>\r\n                        <h4>שנה 1:</h4>\r\n\r\n                        <table border=\"1\">\r\n\r\n                            <tr>\r\n                                <th>תאריך</th>\r\n                                <th>כ\"א/משכורת</th>\r\n                                <th>נסיעות</th>\r\n                                <th>ציוד אזיל</th>\r\n                                <th>ציוד</th>\r\n                                <th>מחשבים</th>\r\n                                <th>ייעוץ</th>\r\n                                <th>עריכה לשונית</th>\r\n                                <th>סקרים</th>\r\n                                <th>מיקור חוץ</th>\r\n                                <th>דיווח</th>\r\n                                <th>שונות</th>\r\n                                <th>אסמכתא</th>\r\n                                <th>פירוט</th>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q77\" id=\"q77i\" placeholder={''}\r\n                                               value={this.state.form.q77 ? (this.state.form.q77) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                               value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q11\" id=\"q11i\" placeholder={''}\r\n                                           value={this.state.form.q11 ? (this.state.form.q11) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q12\" id=\"q12i\" placeholder={''}\r\n                                           value={this.state.form.q12 ? (this.state.form.q12) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q13\" id=\"q13i\" placeholder={''}\r\n                                           value={this.state.form.q13 ? (this.state.form.q13) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q14\" id=\"q14i\" placeholder={''}\r\n                                           value={this.state.form.q14 ? (this.state.form.q14) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q15\" id=\"q15i\" placeholder={''}\r\n                                           value={this.state.form.q15 ? (this.state.form.q15) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q16\" id=\"q16i\" placeholder={''}\r\n                                           value={this.state.form.q16 ? (this.state.form.q16) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q707\" id=\"q707i\" placeholder={''}\r\n                                               value={this.state.form.q707 ? (this.state.form.q707) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                               value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q110\" id=\"q110i\" placeholder={''}\r\n                                           value={this.state.form.q110 ? (this.state.form.q110) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q120\" id=\"q120i\" placeholder={''}\r\n                                           value={this.state.form.q120 ? (this.state.form.q120) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q130\" id=\"q130i\" placeholder={''}\r\n                                           value={this.state.form.q130 ? (this.state.form.q130) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q140\" id=\"q140i\" placeholder={''}\r\n                                           value={this.state.form.q140 ? (this.state.form.q140) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q150\" id=\"q150i\" placeholder={''}\r\n                                           value={this.state.form.q150 ? (this.state.form.q150) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q160\" id=\"q160i\" placeholder={''}\r\n                                           value={this.state.form.q160 ? (this.state.form.q160) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q170\" id=\"q170i\" placeholder={''}\r\n                                           value={this.state.form.q170 ? (this.state.form.q170) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q141\" id=\"q141i\" placeholder={''}\r\n                                           value={this.state.form.q141 ? (this.state.form.q141) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q151\" id=\"q151i\" placeholder={''}\r\n                                           value={this.state.form.q151 ? (this.state.form.q151) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q161\" id=\"q161i\" placeholder={''}\r\n                                           value={this.state.form.q161 ? (this.state.form.q161) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q171\" id=\"q171i\" placeholder={''}\r\n                                           value={this.state.form.q171 ? (this.state.form.q171) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q18i\"\r\n                                name=\"q18\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q18}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תנועות\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q19i\"\r\n                                name=\"q19\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q19}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תקציב שנתי\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"יתרה נוכחית\"\r\n                            />\r\n                        </Grid>\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סה'כ יתרה\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <br/>\r\n\r\n                        <h4>שנה 2:</h4>\r\n\r\n                        <table border=\"2\">\r\n\r\n                            <tr>\r\n                                <th>תאריך</th>\r\n                                <th>כ\"א/משכורת</th>\r\n                                <th>נסיעות</th>\r\n                                <th>ציוד אזיל</th>\r\n                                <th>ציוד</th>\r\n                                <th>מחשבים</th>\r\n                                <th>ייעוץ</th>\r\n                                <th>עריכה לשונית</th>\r\n                                <th>סקרים</th>\r\n                                <th>מיקור חוץ</th>\r\n                                <th>דיווח</th>\r\n                                <th>שונות</th>\r\n                                <th>אסמכתא</th>\r\n                                <th>פירוט</th>\r\n\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q77\" id=\"q77i\" placeholder={''}\r\n                                               value={this.state.form.q77 ? (this.state.form.q77) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                               value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q11\" id=\"q11i\" placeholder={''}\r\n                                           value={this.state.form.q11 ? (this.state.form.q11) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q12\" id=\"q12i\" placeholder={''}\r\n                                           value={this.state.form.q12 ? (this.state.form.q12) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q13\" id=\"q13i\" placeholder={''}\r\n                                           value={this.state.form.q13 ? (this.state.form.q13) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q14\" id=\"q14i\" placeholder={''}\r\n                                           value={this.state.form.q14 ? (this.state.form.q14) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q15\" id=\"q15i\" placeholder={''}\r\n                                           value={this.state.form.q15 ? (this.state.form.q15) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q16\" id=\"q16i\" placeholder={''}\r\n                                           value={this.state.form.q16 ? (this.state.form.q16) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q707\" id=\"q707i\" placeholder={''}\r\n                                               value={this.state.form.q707 ? (this.state.form.q707) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                               value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q110\" id=\"q110i\" placeholder={''}\r\n                                           value={this.state.form.q110 ? (this.state.form.q110) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q120\" id=\"q120i\" placeholder={''}\r\n                                           value={this.state.form.q120 ? (this.state.form.q120) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q130\" id=\"q130i\" placeholder={''}\r\n                                           value={this.state.form.q130 ? (this.state.form.q130) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q140\" id=\"q140i\" placeholder={''}\r\n                                           value={this.state.form.q140 ? (this.state.form.q140) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q150\" id=\"q150i\" placeholder={''}\r\n                                           value={this.state.form.q150 ? (this.state.form.q150) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q160\" id=\"q160i\" placeholder={''}\r\n                                           value={this.state.form.q160 ? (this.state.form.q160) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q170\" id=\"q170i\" placeholder={''}\r\n                                           value={this.state.form.q170 ? (this.state.form.q170) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q141\" id=\"q141i\" placeholder={''}\r\n                                           value={this.state.form.q141 ? (this.state.form.q141) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q151\" id=\"q151i\" placeholder={''}\r\n                                           value={this.state.form.q151 ? (this.state.form.q151) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q161\" id=\"q161i\" placeholder={''}\r\n                                           value={this.state.form.q161 ? (this.state.form.q161) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q171\" id=\"q171i\" placeholder={''}\r\n                                           value={this.state.form.q171 ? (this.state.form.q171) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q18i\"\r\n                                name=\"q18\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q18}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תנועות\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q19i\"\r\n                                name=\"q19\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q19}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תקציב שנתי\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"יתרה נוכחית\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סה'כ יתרה\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n\r\n                        <h4>שנה 3:</h4>\r\n\r\n                        <table border=\"3\">\r\n\r\n                            <tr>\r\n                                <th>תאריך</th>\r\n                                <th>כ\"א/משכורת</th>\r\n                                <th>נסיעות</th>\r\n                                <th>ציוד אזיל</th>\r\n                                <th>ציוד</th>\r\n                                <th>מחשבים</th>\r\n                                <th>ייעוץ</th>\r\n                                <th>עריכה לשונית</th>\r\n                                <th>סקרים</th>\r\n                                <th>מיקור חוץ</th>\r\n                                <th>דיווח</th>\r\n                                <th>שונות</th>\r\n                                <th>אסמכתא</th>\r\n                                <th>פירוט</th>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q77\" id=\"q77i\" placeholder={''}\r\n                                               value={this.state.form.q77 ? (this.state.form.q77) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                               value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q11\" id=\"q11i\" placeholder={''}\r\n                                           value={this.state.form.q11 ? (this.state.form.q11) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q12\" id=\"q12i\" placeholder={''}\r\n                                           value={this.state.form.q12 ? (this.state.form.q12) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q13\" id=\"q13i\" placeholder={''}\r\n                                           value={this.state.form.q13 ? (this.state.form.q13) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q14\" id=\"q14i\" placeholder={''}\r\n                                           value={this.state.form.q14 ? (this.state.form.q14) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q15\" id=\"q15i\" placeholder={''}\r\n                                           value={this.state.form.q15 ? (this.state.form.q15) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q16\" id=\"q16i\" placeholder={''}\r\n                                           value={this.state.form.q16 ? (this.state.form.q16) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q707\" id=\"q707i\" placeholder={''}\r\n                                               value={this.state.form.q707 ? (this.state.form.q707) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                               value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q110\" id=\"q110i\" placeholder={''}\r\n                                           value={this.state.form.q110 ? (this.state.form.q110) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q120\" id=\"q120i\" placeholder={''}\r\n                                           value={this.state.form.q120 ? (this.state.form.q120) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q130\" id=\"q130i\" placeholder={''}\r\n                                           value={this.state.form.q130 ? (this.state.form.q130) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q140\" id=\"q140i\" placeholder={''}\r\n                                           value={this.state.form.q140 ? (this.state.form.q140) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q150\" id=\"q150i\" placeholder={''}\r\n                                           value={this.state.form.q150 ? (this.state.form.q150) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q160\" id=\"q160i\" placeholder={''}\r\n                                           value={this.state.form.q160 ? (this.state.form.q160) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q170\" id=\"q170i\" placeholder={''}\r\n                                           value={this.state.form.q170 ? (this.state.form.q170) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q141\" id=\"q141i\" placeholder={''}\r\n                                           value={this.state.form.q141 ? (this.state.form.q141) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q151\" id=\"q151i\" placeholder={''}\r\n                                           value={this.state.form.q151 ? (this.state.form.q151) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q161\" id=\"q161i\" placeholder={''}\r\n                                           value={this.state.form.q161 ? (this.state.form.q161) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q171\" id=\"q171i\" placeholder={''}\r\n                                           value={this.state.form.q171 ? (this.state.form.q171) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q17\" id=\"q17i\" placeholder={''}\r\n                                           value={this.state.form.q17 ? (this.state.form.q17) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                        </table>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q18i\"\r\n                                name=\"q18\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q18}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תנועות\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q19i\"\r\n                                name=\"q19\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q19}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"תקציב שנתי\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"יתרה נוכחית\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                inputProps={{style: {textAlign: 'center'}}}\r\n                                id=\"q20i\"\r\n                                name=\"q20\"\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                value={this.state.q20}\r\n                                onChange={(e) => {\r\n                                    this.handleChange(e)\r\n                                }}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                label=\"סה'כ יתרה\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <br/>\r\n\r\n                        <h4>אבני דרך:</h4>\r\n\r\n                        <table border=\"2\">\r\n\r\n                            <tr>\r\n                                <th>שנה</th>\r\n                                <th>תיאור</th>\r\n                                <th>תאריך</th>\r\n                                <th>.ה. ח</th>\r\n                                <th>סכום כולל תקורה 100%</th>\r\n                                <th>תקורה 15%</th>\r\n                                <th>בכום ללא תקורה 85%</th>\r\n                                <th>סטטוס</th>\r\n\r\n\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q77\" id=\"q77i\" placeholder={''}\r\n                                               value={this.state.form.q77 ? (this.state.form.q77) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q7\" id=\"q7i\" placeholder={''}\r\n                                               value={this.state.form.q7 ? (this.state.form.q7) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q8\" id=\"q8i\" placeholder={''}\r\n                                           value={this.state.form.q8 ? (this.state.form.q8) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q9\" id=\"q9i\" placeholder={''}\r\n                                           value={this.state.form.q9 ? (this.state.form.q9) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q10\" id=\"q10i\" placeholder={''}\r\n                                           value={this.state.form.q10 ? (this.state.form.q10) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q11\" id=\"q11i\" placeholder={''}\r\n                                           value={this.state.form.q11 ? (this.state.form.q11) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q12\" id=\"q12i\" placeholder={''}\r\n                                           value={this.state.form.q12 ? (this.state.form.q12) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q13\" id=\"q13i\" placeholder={''}\r\n                                           value={this.state.form.q13 ? (this.state.form.q13) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q707\" id=\"q707i\" placeholder={''}\r\n                                               value={this.state.form.q707 ? (this.state.form.q707) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q70\" id=\"q70i\" placeholder={''}\r\n                                               value={this.state.form.q70 ? (this.state.form.q70) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q80\" id=\"q80i\" placeholder={''}\r\n                                           value={this.state.form.q80 ? (this.state.form.q80) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q90\" id=\"q90i\" placeholder={''}\r\n                                           value={this.state.form.q90 ? (this.state.form.q90) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q100\" id=\"q100i\" placeholder={''}\r\n                                           value={this.state.form.q100 ? (this.state.form.q100) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q110\" id=\"q110i\" placeholder={''}\r\n                                           value={this.state.form.q110 ? (this.state.form.q110) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q120\" id=\"q120i\" placeholder={''}\r\n                                           value={this.state.form.q120 ? (this.state.form.q120) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q130\" id=\"q130i\" placeholder={''}\r\n                                           value={this.state.form.q130 ? (this.state.form.q130) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q717\" id=\"q717i\" placeholder={''}\r\n                                               value={this.state.form.q717 ? (this.state.form.q717) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <h4>סה'כ:</h4>\r\n\r\n                                </td>\r\n                                <td>\r\n                                    <div id=\"name-group\">\r\n                                        <input type=\"text\" name=\"q71\" id=\"q71i\" placeholder={''}\r\n                                               value={this.state.form.q71 ? (this.state.form.q71) : ('')} onChange={(e) => {\r\n                                            this.handleChange(e)\r\n                                        }} required/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>    <div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q81\" id=\"q81i\" placeholder={''}\r\n                                           value={this.state.form.q81 ? (this.state.form.q81) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q91\" id=\"q91i\" placeholder={''}\r\n                                           value={this.state.form.q91 ? (this.state.form.q91) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q101\" id=\"q101i\" placeholder={''}\r\n                                           value={this.state.form.q101 ? (this.state.form.q101) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q111\" id=\"q111i\" placeholder={''}\r\n                                           value={this.state.form.q111 ? (this.state.form.q111) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q121\" id=\"q121i\" placeholder={''}\r\n                                           value={this.state.form.q121 ? (this.state.form.q121) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n                                <td><div id=\"name-group\">\r\n                                    <input type=\"text\" name=\"q131\" id=\"q131i\" placeholder={''}\r\n                                           value={this.state.form.q131 ? (this.state.form.q131) : ('')} onChange={(e) => {\r\n                                        this.handleChange(e)\r\n                                    }} required/>\r\n                                </div></td>\r\n\r\n                            </tr>\r\n\r\n                        </table>\r\n\r\n\r\n                    </div>\r\n\r\n                    <button id=\"sendData\" className=\"btn btn-info\" onClick={() => {\r\n                        this.save();\r\n                        this.sendRequest(this.state.form)\r\n                    }}>שמירת שינויים\r\n                    </button>\r\n                    <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                        this.loadPage()\r\n                        this.BackPage()\r\n                    }}>חזור לתפריט\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (<div> {!this.state.spinner[0] ? \"\" :\r\n                <div id='fr'>\r\n                    {this.state.spinner[1]}\r\n                    <div className=\"sweet-loading\">\r\n                        <ClipLoader style={{\r\n                            backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                            borderRadius: \"25px\"\r\n                        }}\r\n                            //   css={override}\r\n                                    size={120}\r\n                                    color={\"#123abc\"}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }</div>)\r\n    }\r\n\r\n    notfound()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/404`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n    BackPage()\r\n    {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport  default  ResearchBudgets;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ChatResearcher.js",["345","346","347","348","349","350","351","352","353","354","355","356","357"],"import { ChatEngine } from \"react-chat-engine\";\r\nimport './Researcher.css'\r\nimport { auth, db, GetFormDownload, getUser, signOut } from '../../../../firebase/firebase';\r\n\r\nimport React from 'react';\r\n// Firebase deps\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n// Hooks\r\n// Components\r\nimport Channel from '../Researcher/Channel';\r\nimport Loader from '../Researcher/Loader';\r\n\r\nimport { useAuthState, useDarkMode } from '../Researcher/hooks';\r\nimport { NextPage } from \"../UserPage\";\r\nimport Dropzone from 'react-dropzone';\r\n\r\n\r\n\r\n\r\nfunction ChatResearcher({ selectedUserUid }) {\r\n    const { user, initializing } = useAuthState(firebase.auth());\r\n    const [darkMode, setDarkMode] = useDarkMode();\r\n\r\n    const MoonIcon = props => (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            {...props}\r\n        >\r\n            <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\r\n                clipRule=\"evenodd\"\r\n            />\r\n        </svg>\r\n    );\r\n\r\n    const SunIcon = props => (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            {...props}\r\n        >\r\n            <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\r\n        </svg>\r\n    );\r\n\r\n    const brandLogo = darkMode\r\n        ? `${process.env.PUBLIC_URL}/logo_white.svg`\r\n        : `${process.env.PUBLIC_URL}/logo.svg`;\r\n\r\n    //const ThemeIcon = darkMode ? SunIcon : MoonIcon;\r\n\r\n    const signInWithGoogle = async () => {\r\n        // Retrieve Google provider object\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        // Set language to the default browser preference\r\n        firebase.auth().useDeviceLanguage();\r\n        // Start sign in process\r\n        try {\r\n            await firebase.auth().signInWithPopup(provider);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n\r\n    const signOut = async () => {\r\n        try {\r\n            await firebase.auth().signOut();\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const renderContent = () => {\r\n        if (initializing) {\r\n            return (\r\n                <div className=\"flex items-center justify-center h-full\">\r\n                    <Loader size=\"lg\" />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (user) return <Channel user={user} selectedUserUid={selectedUserUid}/>;\r\n\r\n        return (\r\n            <div className=\"sec-design\">\r\n                <div className=\"flex flex-col items-center justify-center max-w-xl w-full mx-4 p-8 rounded-md shadow-card bg-white dark:bg-coolDark-600 transition-all\">\r\n                    <h2 className=\"mb-2 text-3xl flex items-center\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            viewBox=\"0 0 20 20\"\r\n                            fill=\"currentColor\"\r\n                            className=\"flex-shrink-0 w-12 h-12 mr-1 text-primary-500\"\r\n                        >\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n\r\n                    </h2>\r\n\r\n                    <button onClick={signInWithGoogle}>\r\n                        <svg\r\n                            viewBox=\"5 -5 30 30\"\r\n                            enableBackground=\"new 5 -5 30 30\"\r\n                            className=\"w-6 h-6 mr-4 flex-shrink-0\"\r\n                        >\r\n                            <path\r\n                                fill=\"#fff\"\r\n                                d=\"M15.3-4.2C11.6-3 8.4-.2 6.6 3.2 6 4.5 5.6 5.7 5.3 7c-.7 3.3-.2 6.7 1.3 9.7 1 1.9 2.4 3.7 4.2 5 1.6 1.3 3.5 2.2 5.6 2.7 2.6.7 5.3.7 7.8.1 2.3-.5 4.5-1.6 6.3-3.2 1.9-1.7 3.2-3.9 3.9-6.2.8-2.6.9-5.3.4-8-4.8 0-9.6 0-14.4 0 0 2 0 3.9 0 5.9 2.8 0 5.6 0 8.3 0-.3 1.9-1.5 3.6-3.1 4.6-1 .7-2.2 1.1-3.4 1.3-1.2.2-2.5.2-3.7 0-1.2-.2-2.4-.7-3.4-1.4-1.6-1.1-2.9-2.8-3.5-4.6-.7-1.9-.7-4 0-5.8.5-1.3 1.2-2.5 2.2-3.5 1.2-1.2 2.8-2.1 4.6-2.5 1.5-.3 3-.2 4.5.2 1.2.4 2.4 1 3.3 1.9.9-.9 1.9-1.8 2.8-2.8.5-.5 1-1 1.5-1.5-1.4-1.3-3.1-2.3-4.9-3-3.3-1.2-7-1.2-10.3-.1z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#EA4335\"\r\n                                d=\"M15.3-4.2c3.3-1.1 7-1.1 10.3.1 1.8.7 3.5 1.7 4.9 3-.5.5-1 1-1.5 1.5-.9.9-1.9 1.8-2.8 2.8-.9-.9-2.1-1.5-3.3-1.9-1.4-.4-3-.5-4.5-.2-1.7.4-3.3 1.2-4.6 2.5-1 1-1.8 2.2-2.2 3.5-1.7-1.3-3.3-2.5-5-3.8 1.8-3.5 5-6.2 8.7-7.5z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#FBBC05\"\r\n                                d=\"M5.3 7c.3-1.3.7-2.6 1.3-3.7 1.7 1.3 3.3 2.5 5 3.8-.7 1.9-.7 4 0 5.8-1.7 1.3-3.3 2.5-5 3.8-1.5-2.9-2-6.4-1.3-9.7z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#4285F4\"\r\n                                d=\"M20.3 7.2c4.8 0 9.6 0 14.4 0 .5 2.6.4 5.4-.4 8-.7 2.4-2 4.6-3.9 6.2-1.6-1.2-3.2-2.5-4.9-3.7 1.6-1.1 2.7-2.8 3.1-4.6-2.8 0-5.6 0-8.3 0 0-2 0-4 0-5.9z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#34A853\"\r\n                                d=\"M6.6 16.7c1.7-1.3 3.3-2.5 5-3.8.6 1.8 1.9 3.5 3.5 4.6 1 .7 2.2 1.2 3.4 1.4 1.2.2 2.4.2 3.7 0 1.2-.2 2.4-.6 3.4-1.3 1.6 1.2 3.2 2.5 4.9 3.7-1.8 1.6-3.9 2.7-6.3 3.2-2.6.6-5.3.6-7.8-.1-2-.5-3.9-1.5-5.6-2.7-1.7-1.3-3.2-3-4.2-5z\"\r\n                            ></path>\r\n                        </svg>\r\n                        Sign in with Google\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-full bg-white dark:bg-coolDark-500 dark:text-white transition-colors\">\r\n\r\n            <header\r\n                className=\"flex-shrink-0 flex items-center justify-between px-4 sm:px-8 shadow-md\"\r\n                style={{ height: 'var(--topbar-height)' }}>\r\n                <div className=\"flex items-center\">\r\n                </div>\r\n            </header>\r\n            <main\r\n                className=\"flex-1\"\r\n                style={{ maxHeight: 'calc(100% - var(--topbar-height))' }}>\r\n                {renderContent()}\r\n            </main>\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ChatResearcher;\r\n\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\ChatR.js",["358","359","360","361","362","363"],"import React from \"react\";\r\nimport { auth, db, getManager, getUser } from '../../../../firebase/firebase';\r\nimport './Researcher.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport ChatResearcher from \"./ChatResearcher\";\r\nimport Select from \"react-select\";\r\nimport getAllUsers from \"../../../../firebase/getAllUsers\";\r\nimport getUsersLists from \"../../../../firebase/getAllUsers\";\r\nimport getManagerOfCurrentResearcher from \"../../../../firebase/getManagerOfCurrentResearcher\";\r\nimport getAllManagers from \"../../../../firebase/getAllManangers\";\r\n\r\n\r\nclass ChatR extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage: false,\r\n            spinner: [true, 'נא להמתין הדף נטען'],\r\n            options: [],\r\n            selectedUserUid: ''\r\n        };\r\n\r\n    }\r\n\r\n    loadSpinner(event, massage) {\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({ spinner: spinner })\r\n    }\r\n\r\n    loadPage(event) {\r\n        this.setState({ loading: event })\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href = window.location.href.split(\"/\", 5)\r\n        auth.onAuthStateChanged(async user => {\r\n            if (user) {\r\n\r\n                var type = await getUser(user)\r\n                if (href[4] === user.uid && (href[3] === type || type === 'Tester')) {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n                await this.loadSelectOptions();\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n            var teamName = await db.collection(\"researcher\").doc(auth.currentUser.uid).get()\r\n            this.loadSpinner(false, \"\")\r\n            this.setState({ loadPage: true })\r\n            this.render()\r\n\r\n        })\r\n    }\r\n\r\n    async loadSelectOptions() {\r\n        const users = await getUsersLists()\r\n        const self = users.find(user => user.uid == auth.currentUser.uid);\r\n\r\n        // Find all users of the current user.\r\n        const selectOptions = users.filter(user => user.teamName == self.teamName).map(user => {\r\n            return {\r\n                label: `חוקר ${user.fname} ${user.lname}`,\r\n                value: user.uid\r\n            }\r\n        })\r\n\r\n        const managers = await getAllManagers()\r\n\r\n\r\n        managers.forEach(manager => {\r\n            selectOptions.push({\r\n                label: `מנהל ${manager.fname} ${manager.lname}`,\r\n                value: manager.uid\r\n            })\r\n        })\r\n\r\n        this.setState({ options: selectOptions })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"ReportScientific\" className=\"sec-design\">\r\n\r\n                {!this.state.spinner[0] ? \"\" :\r\n                    <div id='fr'>\r\n                        {this.state.spinner[1]}\r\n                        <div className=\"sweet-loading\">\r\n                            <ClipLoader style={{\r\n                                backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                borderRadius: \"25px\"\r\n                            }}\r\n                                        size={120}\r\n                                        color={\"#123abc\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={8} >\r\n                        <Select placeholder={\" בחר משתמש \"} options={this.state.options} onChange={(e) => {\r\n                            this.setState({ selectedUserUid: e.value })\r\n                        }} required />\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <ChatResearcher selectedUserUid={this.state.selectedUserUid} />\r\n                    </Grid>\r\n\r\n                    <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                        this.loadPage()\r\n                        this.BackPage()\r\n                    }}>חזור לתפריט\r\n                    </button>\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    BackPage() {\r\n        this.props.history.push({\r\n            pathname: `/Researcher/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default ChatR;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\DropzoneFiles2.js",["364","365","366","367","368","369","370","371","372"],"//העלאת קבצי בקשה לרכישה\r\nimport React, {Component} from 'react';\r\nimport firebase, {auth, db, storage} from \"../../../../firebase/firebase\";\r\nimport Dropzone from 'react-dropzone';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass DropzoneFiles2 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.onDrop = (files) => {\r\n            this.setState({files})\r\n        };\r\n        this.state = {\r\n            teamPath:\"\",\r\n            files: [],\r\n            report:false,\r\n            maxFile:5,\r\n            date:\"\",\r\n            nameR:\"\",\r\n        };\r\n        this.handleChangeDate = this.handleChangeDate.bind(this)\r\n        this.handleChangeNameR = this.handleChangeNameR.bind(this)\r\n\r\n    }\r\n    async componentDidMount() {\r\n        auth.onAuthStateChanged(async user => {\r\n            if (user) {\r\n                this.setState({user:user})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async upload(files)\r\n    {\r\n\r\n        if(files!==null && files!==undefined&& files.length<=0)\r\n            return;\r\n        var nameR = this.state.nameR\r\n        var date = this.state.date\r\n\r\n        var file = files[files.length-1]\r\n        var user =  this.state.user\r\n        var metadata = {\r\n            customMetadata: {\r\n                'user': user.uid,\r\n            }\r\n        };\r\n\r\n        var storageRef = storage.ref()\r\n\r\n\r\n\r\n\r\n        var uploadTask = storageRef.child('forms/' + file.key).put(file,metadata);\r\n        var path = auth.currentUser.uid\r\n\r\n\r\n// Listen for state changes, errors, and completion of the upload.\r\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n            (snapshot) => {\r\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                // console.log('Upload is ' + progress + '% done');\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        console.log('Upload is paused');\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        console.log('Upload is running');\r\n                        break;\r\n                }\r\n            },\r\n            (error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n                switch (error.code) {\r\n                    case 'storage/unauthorized':\r\n                        // User doesn't have permission to access the object\r\n                        break;\r\n                    case 'storage/canceled':\r\n                        // User canceled the upload\r\n                        break;\r\n\r\n                    // ...\r\n\r\n                    case 'storage/unknown':\r\n                        // Unknown error occurred, inspect error.serverResponse\r\n                        break;\r\n                }\r\n            },\r\n            () => {\r\n                // Upload completed successfully, now we can get the download URL\r\n                uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    // console.log('File available at', downloadURL);\r\n                    var formGuide = db.collection(\"researcher\").doc(user.uid).collection(\"RequestPurchase\").doc(this.state.date).set({\r\n                        name: file.key,\r\n                        time: new Date().toLocaleString(),\r\n                        link:downloadURL,\r\n                        nameR:this.state.nameR,\r\n                        date:this.state.date,\r\n\r\n                    }).then(()=>{\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        console.log(\"upload end\")\r\n                        this.upload(newFiles)\r\n                    }).catch((err)=>{\r\n                        storage.refFromURL(downloadURL).delete()\r\n                        var newFiles = files.slice(0, files.length-1);\r\n                        this.upload(newFiles)\r\n                    })\r\n\r\n\r\n                });\r\n            }\r\n\r\n        );\r\n\r\n    }\r\n\r\n    async handleChange(event)\r\n    {\r\n        var form=''\r\n\r\n        // var name = event.target.name;\r\n        var value = event.target.value;\r\n        //var e = event.target\r\n\r\n        console.log('form ' ,form);\r\n        console.log('value ' ,value);\r\n\r\n        return value\r\n\r\n    }\r\n    async handleChangeDate(event)\r\n    {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        if(name === 'date')\r\n        {\r\n            this.setState({date:value});\r\n            this.state.date=value\r\n        }\r\n        console.log('name ' ,name);\r\n        console.log('value ' ,value);\r\n    }\r\n    async handleChangeNameR(event)\r\n    {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n\r\n\r\n        if(name === 'q1')\r\n        {\r\n            this.setState({nameR:value});\r\n            this.state.nameR=value\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name}\r\n                {/*{console.log(file)}*/}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <Dropzone onDrop={this.onDrop}>\r\n                {({getRootProps, getInputProps}) => (\r\n                    <section className=\"container\">\r\n                        <div {...getRootProps({className: 'dropzone'})}>\r\n\r\n                            <div style={{backgroundColor: \"#a0a0a0\", width: 400, height: 170,textAlign: 'center', padding: '100px 0px 0px 0px'}}>\r\n\r\n                                יש לגרור לכאן את הקבצים\r\n                                <br/>\r\n                                <br/>\r\n                                או ללחוץ כאן\r\n\r\n                                <input {...getInputProps()} />\r\n                            </div>\r\n                        </div>\r\n                        <aside>\r\n                            {\r\n\r\n                                files.length <= 0 ?\r\n                                    <h4></h4>:\r\n                                    <div>\r\n                                        {\r\n                                            this.state.maxFile!=undefined && files.length > this.state.maxFile?\r\n                                                <h4> מספר הקבצים המקסימלי להעלאה הוא {this.state.maxFile}</h4>:\r\n                                                <div>\r\n                                                    <h4> מספר הקבצים להעלאה - {files.length}</h4>\r\n                                                    <ul>{files}</ul>\r\n                                                    <label id=\"date\" className=\"title-input\">הכנס את תאריך הבקשה:</label>\r\n                                                    <input type=\"date\" className=\"form-control\" id=\"insert-date\" name=\"date\" onChange={this.handleChangeDate} required/>\r\n                                                    <Grid item xs={12}>\r\n                                                        <TextField\r\n                                                            inputProps={{style: {textAlign: 'center'}}}\r\n                                                            id=\"q1i\"\r\n                                                            name=\"q1\"\r\n                                                            type=\"tel\"\r\n                                                            autoComplete=\"off\"\r\n                                                            onChange={(e) => {\r\n                                                                this.handleChangeNameR(e)\r\n                                                            }}\r\n                                                            variant=\"standard\"\r\n                                                            fullWidth\r\n                                                            label=\"שם המחקר\"\r\n                                                        />\r\n                                                    </Grid>\r\n                                                    <button onClick={()=>{\r\n                                                        this.upload(files)\r\n                                                    }}>העלה קבצים</button>\r\n                                                </div>\r\n                                        }\r\n\r\n                                    </div>\r\n                            }\r\n\r\n\r\n                        </aside>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default  DropzoneFiles2 ;\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Channel.js",["373","374","375","376"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase/app';\r\nimport { useFirestoreQuery } from '../Researcher/hooks';\r\n// Components\r\nimport './Researcher.css'\r\n\r\nimport Message from './Message';\r\nimport { auth } from '../../../../firebase/firebase';\r\n\r\nconst Channel = ({ user = null, selectedUserUid }) => {\r\n    const db = firebase.firestore();\r\n    const messagesRef = db.collection('messages');\r\n    const messages = useFirestoreQuery(\r\n        messagesRef.orderBy('createdAt', 'desc').limit(100)\r\n    );\r\n\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    const inputRef = useRef();\r\n    const bottomListRef = useRef();\r\n\r\n    const { uid, displayName, photoURL } = user;\r\n\r\n    useEffect(() => {\r\n        if (inputRef.current) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [inputRef]);\r\n\r\n    const handleOnChange = e => {\r\n        setNewMessage(e.target.value);\r\n    };\r\n\r\n    const handleOnSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const trimmedMessage = newMessage.trim();\r\n\r\n        // Add new message in Firestore only if a user is selected.\r\n        // Broadcast can be added if selectedUserUid is undefined.\r\n        if (trimmedMessage && selectedUserUid !== undefined) {\r\n            messagesRef.add({\r\n                text: trimmedMessage,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                uid,\r\n                displayName,\r\n                photoURL,\r\n                addresee: selectedUserUid\r\n            });\r\n\r\n            // Clear input field\r\n            setNewMessage('');\r\n            // Scroll down to the bottom of the list\r\n            bottomListRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    const sentBySelf = (msg) => msg.uid == auth.currentUser.uid && msg?.addresee == selectedUserUid\r\n    const sentBySelectedUser = (msg) => msg.uid == selectedUserUid && msg?.addresee == auth.currentUser.uid;\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-full\">\r\n            <div className=\"overflow-auto h-full\">\r\n                <div className=\"py-4 max-w-screen-lg mx-auto\">\r\n                    <div className=\"border-b dark:border-gray-600 border-gray-200 py-8 mb-4\">\r\n                        <div className=\"font-bold text-3xl text-center\">\r\n                        </div>\r\n                    </div>\r\n                    <ul>\r\n                        {messages\r\n                            ?.filter(msg => sentBySelectedUser(msg) || sentBySelf(msg))\r\n                            ?.sort((first, second) =>\r\n                                first?.createdAt?.seconds <= second?.createdAt?.seconds ? -1 : 1\r\n                            )\r\n                            ?.map(message => (\r\n                                <li key={message.id}>\r\n                                    <h4><Message {...message} /></h4>\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                    <div ref={bottomListRef} />\r\n                </div>\r\n            </div>\r\n            <div className=\"mb-6 mx-4\">\r\n                <form\r\n                    onSubmit={handleOnSubmit}\r\n                    className=\"flex flex-row bg-gray-200 dark:bg-coolDark-400 rounded-md px-4 py-3 z-10 max-w-screen-lg mx-auto dark:text-white shadow-md\">\r\n                    <input\r\n                        ref={inputRef}\r\n                        type=\"text\"\r\n                        value={newMessage}\r\n                        onChange={handleOnChange}\r\n                        placeholder=\" הקלד כאן את תשובתך\"\r\n                        className=\"flex-1 bg-transparent outline-none\" />\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={!newMessage}\r\n                        className=\"uppercase font-semibold text-sm tracking-wider text-gray-500 hover:text-gray-900 dark:hover:text-white transition-colors\">\r\n                        שלח\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nChannel.propTypes = {\r\n    user: PropTypes.shape({\r\n        uid: PropTypes.string,\r\n        displayName: PropTypes.string,\r\n        photoURL: PropTypes.string,\r\n    }),\r\n};\r\n\r\nexport default Channel;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Loader.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Message.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\hooks.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Researcher\\Reports.js",["377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ChatManager.js",["411","412","413","414","415","416","417","418","419","420","421","422","423"],"import { ChatEngine } from \"react-chat-engine\";\r\nimport './Manager.css'\r\nimport { auth, db, GetFormDownload, getUser, signOut } from '../../../../firebase/firebase';\r\n\r\nimport React from 'react';\r\n// Firebase deps\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n// Hooks\r\n// Components\r\nimport Channel from '../Researcher/Channel';\r\nimport Loader from '../Researcher/Loader';\r\n\r\nimport { useAuthState, useDarkMode } from '../Researcher/hooks';\r\nimport { NextPage } from \"../UserPage\";\r\nimport Dropzone from 'react-dropzone';\r\n\r\n\r\n\r\n\r\nfunction ChatManager({ selectedUserUid }) {\r\n\r\n    const { user, initializing } = useAuthState(firebase.auth());\r\n    const [darkMode, setDarkMode] = useDarkMode();\r\n\r\n    const MoonIcon = props => (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            {...props}\r\n        >\r\n            <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\r\n                clipRule=\"evenodd\"\r\n            />\r\n        </svg>\r\n    );\r\n\r\n    const SunIcon = props => (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            {...props}\r\n        >\r\n            <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\r\n        </svg>\r\n    );\r\n\r\n    const brandLogo = darkMode\r\n        ? `${process.env.PUBLIC_URL}/logo_white.svg`\r\n        : `${process.env.PUBLIC_URL}/logo.svg`;\r\n\r\n    //const ThemeIcon = darkMode ? SunIcon : MoonIcon;\r\n\r\n    const signInWithGoogle = async () => {\r\n        // Retrieve Google provider object\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        // Set language to the default browser preference\r\n        firebase.auth().useDeviceLanguage();\r\n        // Start sign in process\r\n        try {\r\n            await firebase.auth().signInWithPopup(provider);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n\r\n    const signOut = async () => {\r\n        try {\r\n            await firebase.auth().signOut();\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const renderContent = () => {\r\n        if (initializing) {\r\n            return (\r\n                <div className=\"flex items-center justify-center h-full\">\r\n                    <Loader size=\"lg\" />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (user) return <Channel user={user} selectedUserUid={selectedUserUid}/>;\r\n\r\n        return (\r\n            <div className=\"sec-design\">\r\n                <div className=\"flex flex-col items-center justify-center max-w-xl w-full mx-4 p-8 rounded-md shadow-card bg-white dark:bg-coolDark-600 transition-all\">\r\n                    <h2 className=\"mb-2 text-3xl flex items-center\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            viewBox=\"0 0 20 20\"\r\n                            fill=\"currentColor\"\r\n                            className=\"flex-shrink-0 w-12 h-12 mr-1 text-primary-500\"\r\n                        >\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n\r\n                    </h2>\r\n\r\n                    <button\r\n                        onClick={signInWithGoogle}\r\n                    >\r\n                        <svg\r\n                            viewBox=\"5 -5 30 30\"\r\n                            enableBackground=\"new 5 -5 30 30\"\r\n                            className=\"w-6 h-6 mr-4 flex-shrink-0\"\r\n                        >\r\n                            <path\r\n                                fill=\"#fff\"\r\n                                d=\"M15.3-4.2C11.6-3 8.4-.2 6.6 3.2 6 4.5 5.6 5.7 5.3 7c-.7 3.3-.2 6.7 1.3 9.7 1 1.9 2.4 3.7 4.2 5 1.6 1.3 3.5 2.2 5.6 2.7 2.6.7 5.3.7 7.8.1 2.3-.5 4.5-1.6 6.3-3.2 1.9-1.7 3.2-3.9 3.9-6.2.8-2.6.9-5.3.4-8-4.8 0-9.6 0-14.4 0 0 2 0 3.9 0 5.9 2.8 0 5.6 0 8.3 0-.3 1.9-1.5 3.6-3.1 4.6-1 .7-2.2 1.1-3.4 1.3-1.2.2-2.5.2-3.7 0-1.2-.2-2.4-.7-3.4-1.4-1.6-1.1-2.9-2.8-3.5-4.6-.7-1.9-.7-4 0-5.8.5-1.3 1.2-2.5 2.2-3.5 1.2-1.2 2.8-2.1 4.6-2.5 1.5-.3 3-.2 4.5.2 1.2.4 2.4 1 3.3 1.9.9-.9 1.9-1.8 2.8-2.8.5-.5 1-1 1.5-1.5-1.4-1.3-3.1-2.3-4.9-3-3.3-1.2-7-1.2-10.3-.1z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#EA4335\"\r\n                                d=\"M15.3-4.2c3.3-1.1 7-1.1 10.3.1 1.8.7 3.5 1.7 4.9 3-.5.5-1 1-1.5 1.5-.9.9-1.9 1.8-2.8 2.8-.9-.9-2.1-1.5-3.3-1.9-1.4-.4-3-.5-4.5-.2-1.7.4-3.3 1.2-4.6 2.5-1 1-1.8 2.2-2.2 3.5-1.7-1.3-3.3-2.5-5-3.8 1.8-3.5 5-6.2 8.7-7.5z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#FBBC05\"\r\n                                d=\"M5.3 7c.3-1.3.7-2.6 1.3-3.7 1.7 1.3 3.3 2.5 5 3.8-.7 1.9-.7 4 0 5.8-1.7 1.3-3.3 2.5-5 3.8-1.5-2.9-2-6.4-1.3-9.7z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#4285F4\"\r\n                                d=\"M20.3 7.2c4.8 0 9.6 0 14.4 0 .5 2.6.4 5.4-.4 8-.7 2.4-2 4.6-3.9 6.2-1.6-1.2-3.2-2.5-4.9-3.7 1.6-1.1 2.7-2.8 3.1-4.6-2.8 0-5.6 0-8.3 0 0-2 0-4 0-5.9z\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#34A853\"\r\n                                d=\"M6.6 16.7c1.7-1.3 3.3-2.5 5-3.8.6 1.8 1.9 3.5 3.5 4.6 1 .7 2.2 1.2 3.4 1.4 1.2.2 2.4.2 3.7 0 1.2-.2 2.4-.6 3.4-1.3 1.6 1.2 3.2 2.5 4.9 3.7-1.8 1.6-3.9 2.7-6.3 3.2-2.6.6-5.3.6-7.8-.1-2-.5-3.9-1.5-5.6-2.7-1.7-1.3-3.2-3-4.2-5z\"\r\n                            ></path>\r\n                        </svg>\r\n                        Sign in with Google\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-full bg-white dark:bg-coolDark-500 dark:text-white transition-colors\">\r\n\r\n            <header\r\n                className=\"flex-shrink-0 flex items-center justify-between px-4 sm:px-8 shadow-md\"\r\n                style={{ height: 'var(--topbar-height)' }}\r\n            >\r\n                {/*<a href=\"https://alterclass.io/courses/react\">*/}\r\n                {/*    <img src={brandLogo} alt=\"AlterClass\" width={150} />*/}\r\n                {/*</a>*/}\r\n                <div className=\"flex items-center\">\r\n                    {/*{user ? (*/}\r\n                    {/*    <button*/}\r\n                    {/*        onClick={signOut}*/}\r\n                    {/*        className=\"uppercase text-sm font-medium text-primary-500 hover:text-white tracking-wide hover:bg-primary-500 bg-transparent rounded py-2 px-4 mr-4 focus:outline-none focus:ring focus:ring-primary-500 focus:ring-opacity-75 transition-all\"*/}\r\n                    {/*    >*/}\r\n                    {/*        Sign out*/}\r\n                    {/*    </button>*/}\r\n                    {/*) : null}*/}\r\n                    {/*<ThemeIcon*/}\r\n                    {/*    className=\"h-8 w-8 cursor-pointer\"*/}\r\n                    {/*    onClick={() => setDarkMode(prev => !prev)}*/}\r\n                    {/*/>*/}\r\n                </div>\r\n            </header>\r\n            <main\r\n                className=\"flex-1\"\r\n                style={{ maxHeight: 'calc(100% - var(--topbar-height))' }}\r\n            >\r\n                {renderContent()}\r\n            </main>\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ChatManager;\r\n\r\n","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ChatM.js",["424","425","426","427"],"import React from \"react\";\r\nimport { auth, db, GetFormDownload, getPathData, getUser, signOut } from '../../../../firebase/firebase';\r\nimport './Manager.css'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Select from \"react-select\";\r\nimport ChatManager from \"./ChatManager\";\r\nimport getAllUsers from \"../../../../firebase/getAllUsers\";\r\n\r\nclass ChatR extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadPage: false,\r\n            spinner: [true, 'נא להמתין הדף נטען'],\r\n            researchersList: [],\r\n            selectedUserUid: ''\r\n        };\r\n\r\n    }\r\n\r\n\r\n\r\n    async getManagerObject() {\r\n        const result = await db.collection(\"managers\").doc(auth.currentUser.uid).get();\r\n        return result.data();\r\n    }\r\n\r\n    loadSpinner(event, massage) {\r\n        var spinner = []\r\n        spinner.push(event)\r\n        spinner.push(massage)\r\n        this.setState({ spinner: spinner })\r\n    }\r\n\r\n    loadPage(event) {\r\n        this.setState({ loading: event })\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        var href = window.location.href.split(\"/\", 5)\r\n        // console.log(href)\r\n        auth.onAuthStateChanged(async user => {\r\n            if (user) {\r\n\r\n                var type = await getUser(user)\r\n                if (href[4] === user.uid && (href[3] === type || type === 'Tester')) {\r\n                    this.setState({\r\n                        isLoad: true,\r\n                        user: user,\r\n                        type: type\r\n                    })\r\n\r\n                }\r\n                else {\r\n                    this.notfound()\r\n                    return\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isLoad: true,\r\n                })\r\n                window.location.href = '/Login';\r\n                return;\r\n\r\n            }\r\n\r\n            var teamName = this.getManagerObject();\r\n\r\n            this.loadSpinner(false, \"\")\r\n            this.setState({ loadPage: true })\r\n            this.render()\r\n\r\n        })\r\n\r\n        // Get all of the researchers of the current teamm and add them to the list of researchers.\r\n        getAllUsers().then(async users => {\r\n            const manager = await this.getManagerObject();\r\n\r\n            var list = users.filter(doc => doc.teamName === manager.teamName).map(doc => {\r\n                return {\r\n                    label: `${doc.fname} ${doc.lname}`,\r\n                    value: doc.uid\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                researchersList: list\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"ReportScientific\" className=\"sec-design\">\r\n\r\n                {!this.state.spinner[0] ? \"\" :\r\n                    <div id='fr'>\r\n                        {this.state.spinner[1]}\r\n                        <div className=\"sweet-loading\">\r\n                            <ClipLoader style={{\r\n                                backgroundColor: \"rgba(255,255,255,0.85)\",\r\n                                borderRadius: \"25px\"\r\n                            }}\r\n                                        size={120}\r\n                                        color={\"#123abc\"}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={8} >\r\n                        <Select placeholder={\" בחר משתמש \"} options={this.state.researchersList} onChange={(e) => {\r\n                            this.setState({ selectedUserUid: e.value })\r\n                        }} required />\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                        <ChatManager selectedUserUid={this.state.selectedUserUid} />\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n                    <button id=\"go-back\" className=\"btn btn-info\" onClick={() => {\r\n                        this.loadPage()\r\n                        this.BackPage()\r\n                    }}>חזור לתפריט\r\n                    </button>\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    BackPage() {\r\n        this.props.history.push({\r\n            pathname: `/Manager/${this.state.user.uid}`,\r\n            data: this.state.user // your data array of objects\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default ChatR;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\getAllUsers.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\getManagerOfCurrentResearcher.js",["428","429"],"import { auth, db } from \"./firebase\";\r\nimport { getResearcherData } from './firebase'\r\nimport firebase from 'firebase/app'\r\n\r\n/**\r\n * Get the manager of the current user from firestore. return undefined if no manager was found (because the current user is a manager).\r\n * @param { firebase.user } user The researcher user object.\r\n */\r\nasync function getManagerOfCurrentResearcher(user) {\r\n    const data = await getResearcherData(user.uid)\r\n    const team = (await data.team.get()).data()\r\n\r\n    const queryResponse = await db.collection('managers').where('teamName', '==', team.name).get();\r\n    const manager = queryResponse.docs[0].data()\r\n\r\n    return manager\r\n}\r\n\r\nexport default getManagerOfCurrentResearcher;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\BudgetSpreadsheet.js",["430","431","432","433","434","435","436","437","438","439","440"],"import { useState, useRef } from 'react';\nimport { buildColumns, buildSingleRow, buildRows, convertArrays, lettersToNumbers, convertNumberToSpradsheetColumn } from './SpreadsheetBuilders';\nimport React from 'react';\nimport Spreadsheet from './Spreadsheet'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport SpreadsheetState from './SpreadsheetState';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport \"./spreadsheetStyles.css\"\nimport Spinner from '../../../Spinner'\nimport XLSX from 'xlsx';\nimport { parseSpreadsheetCellPosition } from './EvaluateCellNode';\nimport GetFilenameDialog from './ExportDataDialog';\nimport saveByteArray from './util/saveFile';\nimport { auth, db, storage } from '../.../../../../../../firebase/firebase'\nimport ProgressBarDialog from './util/ProgressBarDialog';\nimport firebase from 'firebase/app'\nimport LoadFileFromFirebaseDialog from './LoadFileFromFirebaseDialog';\n\n\n\n/**\n * Split the sheet ref to 2 points. Sheet ref = '<COL><ROW>:<COL><ROW>'. e.g. A23, O40, etc.\n * @param { string } sheetRef\n * @returns { start: {cols: number, rows: number}, end:{ cols:number, rows:number } } \n */\nfunction parseSheetRef(sheetRef) {\n    const [startStr, endStr] = sheetRef.split(':')\n\n    const [startStrCol, startStrRow] = parseSpreadsheetCellPosition(startStr)\n    const [endStrCol, endStrRow] = parseSpreadsheetCellPosition(endStr)\n\n    return {\n        start: {\n            cols: lettersToNumbers(startStrCol),\n            rows: startStrRow\n        },\n        end: {\n            cols: lettersToNumbers(endStrCol),\n            rows: endStrRow\n        }\n    }\n}\n\n/**\n * Convert the data that xlsx has provided to data the GridData can understand.\n * @param { {[index:key]: any} } sheet The sheet of data. \n * @param { Array<any> } rows The rows to store the data in.\n * @returns { Array<any> } Return the rows paramater that was given.\n */\nfunction xlsxRowsToGridRows(sheet, rows) {\n    Object.keys(sheet).forEach(key => {\n        const [colStr, row] = parseSpreadsheetCellPosition(key)\n        const columnNumber = lettersToNumbers(colStr)\n\n        // Check for parse errors. The column number must be higher then 0.\n        if ((typeof (columnNumber) == 'number' && typeof (row) == 'number') && columnNumber >= 0 && row > 0) {\n            const cellValue = sheet[key]\n\n            rows[row - 1][convertNumberToSpradsheetColumn(columnNumber - 1)] = cellValue;\n        }\n    })\n\n    return rows;\n}\n\n/**\n * Show the research budget spreadsheet and other options for handling the information.\n * @param {{ style?: React.CSSProperties }} props\n * @returns { JSX.Element }\n */\nconst BudgetSpreadsheet = (props) => {\n    var columns = buildColumns(10);\n\n    const [sheets, setSheets] = useState({\n        default: new SpreadsheetState(columns, buildRows(3, columns)),\n    })\n\n    const [activeSheet, setActiveSheet] = useState(sheets.default)\n\n    const [spinnerState, setSpinnerState] = useState({\n        text: '',\n        show: false\n    })\n\n    const [exportDialogStatus, setExportDialogStatus] = useState(false)\n    const [uploadFileDialog, setUploadFileDialog] = useState(false)\n\n    const [loadFileFromFirebaseDialog, setLoadFileFromFirebase] = useState(false)\n\n    const dataToArrayBuffer = () => {\n        var workbook = XLSX.utils.book_new()\n\n        Object.keys(sheets).forEach(key => {\n            var rows = sheets[key].rows\n\n            // Re-reverse the column order for the excel.\n            rows = rows.map(singleRow => Object.fromEntries(Object.entries(singleRow).reverse()))\n\n            workbook.Sheets[key] = XLSX.utils.json_to_sheet(rows, { skipHeader: true })\n        })\n\n        workbook.SheetNames = Object.keys(sheets)\n\n        const excelData = XLSX.write(workbook, { type: 'array', bookType: 'xlsx', cellStyles: true })\n\n        return { buffer: excelData, workbook: workbook }\n    }\n\n    /**\n     * Read the excel file and update the state of the component.\n     * @param { ArrayBuffer } arrBuffer The buffer to parse.\n     */\n    const getXlsxFile = async (arrBuffer) => {\n        const workbook = XLSX.read(arrBuffer, { type: 'array', cellStyles: true })\n\n        const sheets = workbook.Sheets;\n\n        var newSheetsTabs = {}\n\n        Object.keys(sheets).forEach((sheetName, sheetNumber) => {\n            const sheet = sheets[sheetName]\n            const sheetRef = sheet['!ref']\n\n            const sheetWidthHeight = parseSheetRef(sheetRef)\n\n            const sheetColumns = buildColumns(sheetWidthHeight.end.cols);\n\n            var sheetRows = buildRows(sheetWidthHeight.end.rows, sheetColumns)\n\n            var copy = { ...sheet }\n            delete copy['!margins']\n            delete copy['!ref']\n            delete copy['!merges']\n            delete copy['!autofilter']\n            delete copy['!protect']\n            sheetRows = xlsxRowsToGridRows(copy, sheetRows)\n\n            newSheetsTabs[sheetName] = new SpreadsheetState(sheetColumns, sheetRows)\n        })\n\n        setSheets(newSheetsTabs)\n        setActiveSheet(sheets[0])\n    }\n\n    return (\n        <div style={props.style}>\n            <Tabs defaultIndex={1} onSelect={(index, last, event) => {\n                const newActiveSheet = sheets[Object.keys(sheets)[index]];\n                setActiveSheet(newActiveSheet)\n            }}>\n                <TabList>\n                    {\n                        Object.keys(sheets).map((key, keyIndex) => {\n                            return <Tab key={\"tabIndex_\" + keyIndex}>{key}</Tab>\n                        })\n                    }\n\n                </TabList>\n\n                {\n                    Object.keys(sheets)\n                        .map((key, keyIndex) => {\n                            const state = sheets[key];\n                            return <TabPanel key={\"tabPanelIndex_\" + keyIndex}>\n                                <Spreadsheet state={activeSheet}></Spreadsheet>\n                            </TabPanel>\n                        })\n                }\n\n            </Tabs>\n\n            <input type=\"file\" onChange={async (event) => {\n                const file = event.target.files[0];\n\n                if (file === undefined) return;\n\n                setSpinnerState({\n                    text: \"טוענים קובץ...\",\n                    show: true\n                })\n\n                await getXlsxFile(await file.arrayBuffer()).catch(err => {\n                    console.log(err)\n                    alert(\"אי אפשר לטעון קובץ.\")\n                });\n\n                setSpinnerState({\n                    text: \"\",\n                    show: false\n                })\n\n            }} placeholder=\"Load Excel File\"></input>\n\n\n            <button onClick={() => {\n                setExportDialogStatus(true)\n            }}>הורד קובץ למחשב</button>\n\n            <button onClick={() => {\n                setUploadFileDialog(true)\n            }}>\n                שמור שינויים\n            </button>\n\n\n\n            <GetFilenameDialog\n                dialogStatus={exportDialogStatus}\n                setDialogStatus={(v) => setExportDialogStatus(v)}\n                dialogContentText={\"הכנס את השם של הקובץ להורדה\"}\n                onSubmit={(filename) => {\n                    const { buffer } = dataToArrayBuffer()\n                    saveByteArray([buffer], filename)\n                }} />\n\n            <GetFilenameDialog\n                dialogStatus={uploadFileDialog}\n                setDialogStatus={(v) => setUploadFileDialog(v)}\n                dialogContentText={\".הכנס את השם של הקובץ\"}\n                onSubmit={(filename) => {\n                    const { buffer } = dataToArrayBuffer()\n                    const storageRef = storage.ref('researchBudgets')\n\n                    const uploadDate = new Date();\n                    const childPath = `/${uploadDate.toJSON()}_${auth.currentUser.uid}_ResearchBudget.xlsx`\n\n                    const uploadTask = storageRef\n                        .child(childPath)\n                        .put(buffer, { customMetadata: { uploader: auth.currentUser.uid } })\n\n                    const getSpinnerText = (progress) => `${progress}...מעלה קובץ`\n                    setSpinnerState({ text: getSpinnerText(0), show: true })\n\n                    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\n                        (snapshot) => {\n                            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                            setSpinnerState({ text: getSpinnerText(progress), show: true })\n                        },\n                        (err) => {\n                            setSpinnerState({ text: '', show: false })\n                            alert(`An error occured ${err.code}, ${err.message}`)\n                        },\n                        async () => {\n                            setSpinnerState({ text: '...מעדכנים את הנתונים', show: true })\n\n                            await db.collection('researchBudgets').add({\n                                user: auth.currentUser.uid,\n                                fileUrl: childPath,\n                                uploadDate: uploadDate,\n                                displayName: filename\n                            })\n\n                            setSpinnerState({ text: '', show: false })\n                        })\n                }} />\n\n            <button onClick={() => setLoadFileFromFirebase(true)}>\n                טען קובץ מהענן\n            </button>\n\n            <LoadFileFromFirebaseDialog\n                open={loadFileFromFirebaseDialog}\n                onCancel={() => setLoadFileFromFirebase(false)}\n                onFileSelected={async (filePath, name) => {\n                    setLoadFileFromFirebase(false)\n\n\n                    setSpinnerState({ text: `${name} טוען קובץ`, show: true })\n                    const ref = storage.ref('researchBudgets').child(filePath)\n                    const downloadUrl = await ref.getDownloadURL()\n\n                    const response = await (await fetch(downloadUrl)).arrayBuffer()\n                    \n                    await getXlsxFile(response)\n\n                    setSpinnerState({ text: '',show: false })\n                }} />\n\n            <Spinner {...spinnerState} ></Spinner>\n        </div>\n\n    );\n}\n\n\nexport default BudgetSpreadsheet;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\SpreadsheetBuilders.js",["441","442","443","444","445","446","447","448","449","450","451"],"import { TextEditor, ValueFormatter } from \"react-data-grid/\";\nimport SpreadsheetTextEditor from './SpreadsheetCellEditor'\nimport { ReactDOM, useEffect, useRef, useState } from 'react'\nimport './spreadsheetStyles.css'\nimport DOMPurify from 'dompurify'\n\n/**\n * Convert the counting method from numbers to letters. e.g. 1 => A, 2 => B, 27 => AA.\n * @param { number } num The number to convert.\n * @returns { string } The converted number as string.\n */\nexport function numberToLetters(num) {\n    var mod = num % 26,\n        pow = num / 26 | 0,\n        out = mod ? String.fromCharCode(64 + mod) : (--pow, 'Z');\n    return pow ? numberToLetters(pow) + out : out;\n}\n\n/**\n * Convert a string of letter counting to a number. e.g. A => 1, B => 2, AA => 27.\n * @param { string } str The string to convert.\n * @returns { number } The converted number. \n */\nexport function lettersToNumbers(str) {\n    var base = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', i, j, result = 0;\n\n    for (i = 0, j = str.length - 1; i < str.length; i += 1, j -= 1) {\n        result += Math.pow(base.length, j) * (base.indexOf(str[i]) + 1);\n    }\n\n    return result;\n}\n\n/**\n * Convert the app row that contains the style and other properties of every cell to just the text value.\n */\nfunction transformRowToDataGridRow(row) {\n    const entries = Object.entries(row).map(([column, cellProps]) => {\n        return cellProps ? [column, cellProps.v] : [column, cellProps]\n    })\n\n    return Object.fromEntries(entries)\n}\n\n\n/**\n * Convert the styles that was parsed by XLSX to the css used by react.\n * @param { Object } style The style that XLSX has parsed.\n * @param {{rgb?: string}} style.bgColor The background color of the cell.\n * @param {{rgb?:string}} style.fgColor The forground color of the cell.\n * @param {string} style.patternType The fill pattern. currently ignored.\n * @returns { React.CSSProperties } The converted css.\n */\nfunction convertXlsxStyleToCss({ bgColor, fgColor, patternType }) {\n    const firstOrUndefined = (val, second) => val ? second : undefined;\n\n    return {\n        backgroundColor: firstOrUndefined(bgColor?.rgb, `#${bgColor?.rgb}`),\n        color: firstOrUndefined(fgColor?.rgb, `#${fgColor?.rgb}`)\n    }\n}\n\n/**\n * The cell renderer.\n * @param { import(\"react-data-grid/\").FormatterProps } props \n */\nfunction SpreadsheetCellFormatter(props) {\n\n    const getBackgroundColor = (style) => {\n        if (!style || !('bgColor' in style)) {\n            return ''\n        }\n\n        return `#${style.bgColor.rgb}`\n    }\n\n    const ref = useRef(null)\n\n    useEffect(() => {\n        if (ref !== null) {\n            const parent = ref.current.parentElement\n            // Allow the background color to fill the cell.\n            parent.style.padding = '0px 0px 0px 0px';\n        }\n    }, [ref])\n\n    const cell = props.row[props.column.key]\n\n    // HTML is disabled.\n    const getContent = () => cell.h == undefined || true ?\n        cell.v : <div dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(cell.h) }}></div>\n\n    return (\n        <div ref={ref} key={`key_${props.rowIdx}`}>\n            <div style={{ backgroundColor: getBackgroundColor(cell.s), position: 'relative', zIndex: 100 }}>\n                {\n                    getContent()\n                }\n\n            </div>\n        </div>\n    )\n}\n\n/**\n * Create a single column.\n * @param { number } index The index of the column. \n * @param { boolean | any } editable true if the column is editable, false otherwise.  \n * @returns \n */\nexport function buildSingleColumn(index, editable) {\n    editable = editable == true ? true : false;\n\n    var item = {\n        key: \"col_\" + index,\n        name: numberToLetters(index + 1),\n        editable: editable,\n        resizeable: true,\n        editor: SpreadsheetTextEditor,\n        formatter: SpreadsheetCellFormatter,\n\n    };\n\n    return item;\n}\n\n\n/**\n * Create the columns array for the spreadsheet.\n * @param { number } length The amount of columns to build.\n * @returns { Array<{}> } The columns array.\n */\nexport function buildColumns(length) {\n    var arr = new Array(), i = 0;\n\n    arr.push({\n        key: \"row_number_counter\",\n        name: \"\"\n    })\n\n    while (++i < length) arr.push({})\n\n    arr = arr.map((_, index) => {\n        return buildSingleColumn(index, true)\n    })\n\n    return arr.reverse();\n}\n\nexport function buildSingleRow(columns, row_number) {\n    var obj = {}\n\n    columns.forEach(col => {\n        obj[col.key] = {\n            v: undefined,\n            s: {}\n        }\n    })\n\n    return obj;\n}\n\n/**\n * Create the basic rows for the spreadsheet.\n * @param { number } length The amount of rows to create.\n * @param { Array<any> } columns The columns of the spreadsheet. Every cell is initilized with undefined.\n * @returns \n */\nexport function buildRows(length, columns) {\n    var arr = new Array();\n    for (let i = 0; i < length; i++) {\n        arr.push(buildSingleRow(columns, i))\n    }\n    return arr;\n}\n\n\n/**\n * Convert the rows read by readXlsxFile to rows that are supported by DataGrid.\n * @param { Array<Array<string | number | boolean | null>> } rows \n * @param { Array<any> } columns The columns of the spreadsheet.\n */\nexport function convertArrays(rows, columns) {\n    var newRows = new Array();\n\n    rows.forEach((currentRow, rowNumber) => {\n        var convertedRow = buildSingleRow(columns, rowNumber - 1)\n\n        currentRow.forEach((cell, cellNumber) => {\n            convertedRow[convertNumberToSpradsheetColumn(cellNumber)] = cell\n        })\n\n        newRows.push(convertedRow)\n    })\n\n    return newRows;\n}\n\nexport function convertNumberToSpradsheetColumn(number) {\n    return \"col_\" + number;\n}","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\Spreadsheet.js",["452","453","454","455","456","457"],"import React, { useEffect, useState, useRef } from \"react\";\nimport DataGrid, { Cell } from 'react-data-grid'\nimport { executeFormula } from \"./ForumulaParser\";\nimport SpreadsheetState from \"./SpreadsheetState\";\nimport \"./spreadsheetStyles.css\"\nimport setStyleOfCell from \"./util/gridCellStyling\";\n\nfunction calculateRow(row, spreadsheet) {\n    for (const column in row) {\n        const cell = row[column];\n\n        if (typeof (cell.v) == \"string\") {\n            // Update the formula property if the cell is indeed a formula, before the new value is calculated.\n            row[column].f = cell.v.startsWith('=') ? cell.v.substr(1) : undefined;\n\n\n            const newValue = executeFormula(row[column].v, spreadsheet)\n            row[column].v = newValue == undefined ? row[column] : newValue;\n\n        }\n    }\n}\n\n/**\n * \n * @param { {state: SpreadsheetState, setSpreadsheetState: (SpreadsheetState) => void} } props \n * @returns { JSX.Element }\n */\nconst Spreadsheet = (props) => {\n    const [state, setSpreadsheetState] = useState(props.state)\n\n\n    return <div style={state.style}>\n        <DataGrid\n            columns={state.columns}\n            rows={state.rows}\n            defaultColumnOptions={{ sortable: true, resizable: true }}\n            onRowsChange={(changedRows, changeData) => {\n                const stateCopy = { ...state };\n\n                changeData.indexes.forEach((index) => {\n                    var row = changedRows[index];\n\n                    try {\n                        calculateRow(row, stateCopy)\n                    } catch (error) {\n                        console.log(\"Error while computing the formulas: \", error)\n                    }\n\n                    stateCopy.rows[index] = row;\n                })\n\n                setSpreadsheetState(stateCopy)\n            }}\n            enableVirtualization={true}\n            onSelectedCellChange={(pos) => {\n                var copy = { ...state };\n                copy.activeCellPos = {\n                    colNumber: pos.idx,\n                    rowNumber: pos.rowIdx\n                }\n            }}\n        />\n    </div>\n}\n\n\nexport default Spreadsheet;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\SpreadsheetState.js",["458"],"import React from \"react\";\n\n\nclass SpreadsheetState {\n    columns;\n    rows;\n    style;\n    preRendererComputation;\n\n    /**\n     * Store the state of a spreadsheet.\n     * @param { Array<Columns<any>> } columns The columns of the spreadsheet. \n     * @param { Array<any> } rows The rows of the spreadsheet.\n     * @param { PreRenderComputation} preRendererComputation The list of computation to do before every render.\n     * @param { React.CSSProperties } style Optional styling parameter.\n     * @param { {colNumber, rowNumber} } activeCellPos The position of the active cell.\n     */\n    constructor(columns, rows, preRendererComputation, style, activeCellPos) {\n        this.columns = columns;\n        this.rows = rows;\n        this.style = style;\n        this.activeCellPos = activeCellPos\n    }\n\n}\n\nexport default SpreadsheetState;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Spinner.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\EvaluateCellNode.js",["459","460","461","462"],"import { convertNumberToSpradsheetColumn, lettersToNumbers } from './SpreadsheetBuilders'\nimport { evaluateNode } from \"./ForumulaParser\";\n\n\n/**\n * Convert the spreadsheet cell position to numbers. A1 => [1,1], AA24 => [27,24]\n * @param { string } strPos The position as string.\n * @returns { Array<number> } The position as numbers. The first element is the column, the second is the row.\n */\nexport function parseSpreadsheetCellPosition(strPos) {\n    var column = \"\", row = 0, i = 0;\n\n    for (; i < strPos.length; i++) {\n        if (!/[a-z]/i.test(strPos[i]))\n            break;\n    }\n\n    column = strPos.substr(0, i)\n    row = parseInt(strPos.substr(i))\n\n    return [column, row]\n}\n\n/**\n * Get the cell from the spreadsheet and return its value.\n * @param { import(\"excel-formula-ast\").CellNode } node \n * @param { SpreadsheetState } spreadsheet \n */\nfunction evaluateCellNode(node, spreadsheet) {\n    var [column, row] = parseSpreadsheetCellPosition(node.key)\n\n    if (row == NaN || column == \"\") {\n        throw new Error(\"Could not parse cell.\")\n    }\n\n    const columnNumber = lettersToNumbers(column) + - 1\n\n    const cellValue = spreadsheet.rows[row - 1][convertNumberToSpradsheetColumn(columnNumber)].v\n    const asNumber = parseFloat(cellValue);\n\n    return isNaN(asNumber) ? cellValue : asNumber;\n}\n\nexport default evaluateCellNode;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\ExportDataDialog.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\LoadFileFromFirebaseDialog.js",["463","464"],"import { Card, Dialog, DialogActions, DialogContent } from '@material-ui/core'\nimport { useEffect, useState } from 'react';\nimport { auth, db } from '../../../../../firebase/firebase';\nimport \"./spreadsheetStyles.css\"\n\n\nasync function getFilesList() {\n    const query = await db.collection('researchBudgets').where('user', '==', auth.currentUser.uid).get()\n    const result = query.docs.map(snapshot => {\n        var obj = snapshot.data();\n        obj.docId = snapshot.id;\n\n        return obj;\n    }).map(doc => {\n        doc.uploadDate = new Date(doc.uploadDate.seconds)\n        return doc;\n    })\n\n    return result;\n}\n\nfunction FileListItem({ displayName, url, user, uploadDate, isActiveFile, onClick }) {\n    return <Card onClick={onClick} style={{ backgroundColor: isActiveFile ? 'rgba(0, 255, 255, 0.3)' : 'white' }} className=\"file-list-item-container\">\n        <div className=\"file-list-item\">\n            <h1>{displayName}</h1>\n            <p className=\"ml-55 mr-55\">{uploadDate.toJSON().substr(0, 10)}</p>\n        </div>\n    </Card>\n}\n\n/**\n * Display the list of all of the files the user has and select one of them.\n * @param { Object } props The props of the component.\n * @param { boolean } props.open The open status of the dialog.\n * @param { () => void } props.onCancel Callback that is called when the cancel button is clicked.. \n * @param { (url: string, displayName: string) => void } props.onFileSelected Callback function that is called when the user has selected a file.\n */\nfunction LoadFileFromFirebaseDialog({ open, onCancel, onFileSelected }) {\n    const [filesList, setFilesList] = useState([])\n    const [activeFile, setActiveFile] = useState({})\n\n    useEffect(async () => {\n        setFilesList(await getFilesList())\n    }, [])\n\n    return (\n        <div className=\"load-sheet-from-firebase-dialog\">\n            <Dialog open={open} fullWidth maxWidth=\"xl\">\n                <DialogContent>\n                    {\n                        filesList.map((file, index) => <FileListItem key={`FileList_Item_${index}`} {...file} isActiveFile={file.docId == activeFile.docId} onClick={() => setActiveFile(file)} />)\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <button onClick={() => onCancel()}>בטל</button>\n                    <button onClick={() => {\n                        onFileSelected(activeFile.fileUrl, activeFile.displayName)\n                    }}>טען</button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default LoadFileFromFirebaseDialog;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\util\\saveFile.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\util\\ProgressBarDialog.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\SpreadsheetCellEditor.js",["465"],"import \"./spreadsheetStyles.css\"\n\nexport const textEditorClassname = `rdg-text-editor spreadsheet-cell-text-editor`;\n\nfunction autoFocusAndSelect(input) {\n  input?.focus();\n  input?.select();\n}\n\nexport default function SpreadsheetTextEditor({ row, column, onRowChange, onClose }) {\n  return (\n    <input className={textEditorClassname}\n      ref={autoFocusAndSelect}\n      value={row[column.key].f == undefined ? row[column.key].v : `=${row[column.key].f}`}\n      onChange={\n        (event) => {\n          return onRowChange({ ...row, [column.key]: { v: event.target.value, ...column[column.key] } })\n        }\n      }\n      onBlur={\n        () => onClose(true)\n      }\n    />\n  );\n}","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\ForumulaParser.js",["466","467","468"],"import SpreadsheetState from \"./SpreadsheetState\";\nimport { buildTree } from 'excel-formula-ast'\nimport { tokenize } from 'excel-formula-tokenizer'\nimport evaluateFunction from \"./EvaluateFunction\";\nimport evaluateBinaryExpression from \"./EvaluateBinaryExpression\";\nimport evaluateCellNode, { parseSpreadsheetCellPosition } from \"./EvaluateCellNode\";\nimport { lettersToNumbers, numberToLetters } from \"./SpreadsheetBuilders\";\n\n/**\n * \n * @param { string } col \n * @param { number } row\n * @returns { import(\"excel-formula-ast\").CellNode } \n */\nfunction createCellNode(col, row) {\n    if (col.startsWith(\"col_\")) {\n        col = parseInt(col.substr(\"col_\".length)) + 1\n    }\n\n    return {\n        type: \"cell\",\n        refType: \"relative\",\n        key: `${numberToLetters(col)}${row}`\n    }\n}\n\n/**\n * \n * @param { import(\"excel-formula-ast\").CellRangeNode } node \n * @param { SpreadsheetState } spreadsheet \n */\nfunction evaluateCellRange(node, spreadsheet) {\n    var [startCol, startRow] = parseSpreadsheetCellPosition(node.left.key);\n    var [endCol, endRow] = parseSpreadsheetCellPosition(node.right.key)\n\n    startCol = lettersToNumbers(startCol) - 1;\n    endCol = lettersToNumbers(endCol)\n\n    var selectedRows = []\n\n\n    for (var i = startRow - 1; i < endRow && i < spreadsheet.rows.length; i++) {\n        const row = spreadsheet.rows[i];\n        var filtered = Object.keys(row).reverse().filter((_, colIndex) => colIndex >= startCol && colIndex < endCol)\n\n\n        selectedRows.push(\n            filtered.map((col) => createCellNode(col, i + 1))\n        )\n    }\n\n    return selectedRows;\n}\n\n/**\n * Evaluate one of the node in the AST tree.\n * @param { import(\"excel-formula-ast\").Node } node The node to evaluate. \n * @param { SpreadsheetState } spreadsheet The spreadsheet state.\n * @returns { import(\"excel-formula-ast\").Node | undefined | string | number | Array<import(\"excel-formula-ast\").CellNode> }\n */\nexport function evaluateNode(node, spreadsheet) {\n    if (spreadsheet == undefined) throw new Error(\"Please provide the spreadsheet for evaluateNode\");\n\n    switch (node.type) {\n        case \"number\":\n            return node.value;\n        case \"text\":\n            return node.value\n        case \"function\":\n            return evaluateFunction(node, spreadsheet);\n        case \"binary-expression\":\n            return evaluateBinaryExpression(node, spreadsheet);\n        case \"cell\":\n            return evaluateCellNode(node, spreadsheet);\n        case \"logical\":\n            return node.value;\n        case \"cell-range\":\n            return evaluateCellRange(node, spreadsheet);\n        default:\n            break;\n    }\n\n    return undefined;\n}\n\n\n/**\n * Check if the given cell is a formula, by checking if it starts with '='\n * @param { string } cell\n * @returns { boolean } true if the cell if a formula, false otherwise. \n */\nexport function isCellFormula(cell) {\n    return cell.trim().startsWith('=')\n}\n\n\n/**\n * Parse and execute the given cell. If the cell is not a valid formula, return the cell iteself.\n * @param { string } cell The cell containing the formula.\n * @param { SpreadsheetState } spreadsheet The spreadsheet to parse. \n * @returns { string } The new content of the cell\n */\nexport function executeFormula(cell, spreadsheet) {\n    var formula = cell.trim();\n\n    if (!isCellFormula(cell)) {\n        return cell;\n    }\n\n    formula = formula.substr(1);\n\n    const tokens = tokenize(formula)\n    const tree = buildTree(tokens)\n\n    var formulaResult = evaluateNode(tree, spreadsheet);\n\n    return formulaResult;\n}","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\util\\gridCellStyling.js",["469"],"import React from \"react\";\n\n\n/**\n * Set the style of a specific cell in the data grid. Assume there is only 1 data grid running.\n * @param { number } rowNumber The row index of the cell. The function adds 1 to rowNumber when accessing the elements to skip the headers row. Therefore, you can access the headers by specifing rowNumber = -1;\n * @param { number } columnNumber The column index of the cell. Start from 0.\n * @param { React.CSSProperties } style The new style of the cell. The style is merged with the existing style, not overiding it completely.\n */\nfunction setStyleOfCell(rowNumber, columnNumber, style) {\n    const htmlRows = document.getElementsByClassName('rdg-row')\n    const arr = [...htmlRows]\n\n    const cells = arr[rowNumber + 1].getElementsByClassName('rdg-cell')\n    const cellToUpdate = cells.item(cells.length - columnNumber)\n\n    if(cellToUpdate) {\n        cellToUpdate.style.backgroundColor = 'red'\n    }\n}\n\n\nexport default setStyleOfCell;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\EvaluateFunction.js",["470","471","472","473","474","475"],"import { ro } from \"date-fns/locale\";\nimport { evaluateNode } from \"./ForumulaParser\";\nimport SpreadsheetState from \"./SpreadsheetState\";\n\n\nconst functionHandlers = {\n    /**\n     * Sum all of the argument given to the function.\n     * @param { import(\"excel-formula-ast\").FunctionNode } node \n     * @param { SpreadsheetState } spreadsheet \n     */\n    SUM: (node, spreadsheet) => {\n        var sum = 0;\n        node.arguments.forEach(arg => {\n            const value = evaluateNode(arg, spreadsheet);\n\n            if (value.constructor == Array) {\n                return value.forEach(row => row.forEach(cell => sum += evaluateNode(cell, spreadsheet)))\n            }\n\n            var asNumber = typeof (value) == \"number\" ? value : parseFloat(value)\n\n            if (!isNaN(asNumber)) {\n                return (sum += asNumber);\n            }\n\n\n            throw new Error(`Cant sum non number ${value}`)\n        })\n\n\n        return sum;\n    },\n    /**\n     * Sum all of the argument given to the function if the first argument resolved to be true.\n     * @param { import(\"excel-formula-ast\").FunctionNode } node \n     * @param { SpreadsheetState } spreadsheet \n     */\n    SUMIF: (node, spreadsheet) => {\n        if (node.arguments.length < 2) {\n            throw new Error(\"At lease 2 arguments are needed for SUMIF.\")\n        }\n        const sumIf = evaluateNode(node.arguments[0], spreadsheet)\n\n        if (typeof (sumIf) !== \"boolean\") {\n            throw new Error(\"The first argument for SUMIF is needed to be a boolean.\");\n        }\n\n        if (sumIf) {\n            node.arguments = node.arguments.slice(1) // Remove the boolean expression.\n            return functionHandlers.SUM(node, spreadsheet)\n        }\n\n        return undefined;\n    }\n    ,\n    /**\n     * Avarage all of the argument given to it.\n     * @param { import(\"excel-formula-ast\").FunctionNode } node \n     * @param { SpreadsheetState } spreadsheet \n     */\n    AVG: (node, spreadsheet) => {\n        var sum = 0, count = 0;\n\n        // Sum up all of the cell and count them.\n        node.arguments.forEach(arg => {\n            const value = evaluateNode(arg, spreadsheet)\n\n\n            if (value.constructor == Array) {\n                return value.forEach(row => row.forEach(cell => {\n                    sum += evaluateNode(cell, spreadsheet)\n                    count++\n                }))\n            }\n\n            var asNumber = typeof (value) == \"number\" ? value : parseFloat(value)\n\n            if (!isNaN(asNumber)) {\n                sum += asNumber;\n                return count++;\n            }\n\n\n            throw new Error(`Cant avarage non number ${value}`)\n        })\n\n\n        return count == 0 ? 0 : sum / count;\n    },\n    /**\n     * Count all of the cells containing numbers in the cells given.\n     * @param { import(\"excel-formula-ast\").FunctionNode } node \n     * @param { SpreadsheetState } spreadsheet \n     */\n    COUNT: (node, spreadsheet) => {\n        var count = 0;\n\n        node.arguments.forEach(arg => {\n            var value = evaluateNode(arg, spreadsheet)\n\n            if (value.constructor == Array) {\n                return value.forEach(row => row.forEach(cell => {\n                    const evaluated = evaluateNode(cell, spreadsheet)\n                    if (typeof (evaluated) == \"number\" && !isNaN(evaluated))\n                        count++;\n                }))\n            }\n\n            if (typeof (value) == \"number\")\n                count++;\n        })\n\n        return count;\n    },\n    /**\n     * IF (logical_test, [value_if_true], [value_if_false])\n     * @param { import(\"excel-formula-ast\").FunctionNode } node \n     * @param { SpreadsheetState } spreadsheet \n     */\n    IF: (node, spreadsheet) => {\n        if (node.arguments.length < 1 || node.arguments.length > 3) {\n            throw new Error(\"Invalid arguments count for IF. Provide 1 to 3 arguments.\")\n        }\n\n        const logicalTest = evaluateNode(node.arguments[0], spreadsheet)\n\n        if (typeof (logicalTest) !== \"boolean\") {\n            throw new Error(\"The first argument of IF must be a logical exression.\")\n        }\n\n        const getOrUndefined = (index) => node.arguments.length - 1 < index ? undefined : evaluateNode(node.arguments[index], spreadsheet);\n\n        return logicalTest ? getOrUndefined(1) : getOrUndefined(2);\n    }\n}\n\n/**\n * \n * @param { import(\"excel-formula-ast\").FunctionNode } node \n * @param { SpreadsheetState } spreadsheet \n */\nfunction evaluateFunction(node, spreadsheet) {\n    if (!functionHandlers.hasOwnProperty(node.name)) {\n        throw new Error(`Cant find function ${node.name}`)\n    }\n\n    return functionHandlers[node.name](node, spreadsheet);\n}\n\nexport default evaluateFunction;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\BudgetSpreadsheetComponent\\EvaluateBinaryExpression.js",["476"],"import { evaluateNode } from \"./ForumulaParser\";\n\n\n/**\n * Evaluate binary expression nodes.\n * @param { import(\"excel-formula-ast\").BinaryExpressionNode } node \n * @param { SpreadsheetState } spreadsheet\n */\nfunction evaluateBinaryExpression(node, spreadsheet) {\n    const operatorHandlers = {\n        \"+\": (left, right) => evaluateNode(left, spreadsheet) + evaluateNode(right, spreadsheet),\n        \"-\": (left, right) => evaluateNode(left, spreadsheet) - evaluateNode(right, spreadsheet),\n        \"/\": (left, right) => evaluateNode(left, spreadsheet) / evaluateNode(right, spreadsheet),\n        \"*\": (left, right) => evaluateNode(left, spreadsheet) * evaluateNode(right, spreadsheet),\n        \"&\": (left, right) => evaluateNode(left, spreadsheet) & evaluateNode(right, spreadsheet),\n        \"<=\": (left, right) => evaluateNode(left, spreadsheet) <= evaluateNode(right, spreadsheet),\n        \">=\": (left, right) => evaluateNode(left, spreadsheet) >= evaluateNode(right, spreadsheet),\n        \"=\": (left, right) => evaluateNode(left, spreadsheet) == evaluateNode(right, spreadsheet),\n        \">\": (left, right) => evaluateNode(left, spreadsheet) > evaluateNode(right, spreadsheet),\n        \"<\": (left, right) => evaluateNode(left, spreadsheet) < evaluateNode(right, spreadsheet),\n    }\n    var result = undefined;\n\n    try {\n        result = operatorHandlers[node.operator](node.left, node.right);\n    } catch (error) {\n        throw new Error(`Error while executing operator ${node.operator}. error: ${error}`)\n    }\n\n    return result;\n}\n\n\nexport default evaluateBinaryExpression;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ManagerRequestPurchase\\mngRequestPurchase.js",["477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\ManagerRequestPurchase\\DisplayPurchaseRequests.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\general\\ErrorBoundry.js",[],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\getAllManangers.js",["514"],"import { db } from \"./firebase\";\nimport { getResearcherData } from './firebase'\n\n/**\n * Return all of the managers in the collection.\n * @returns { Array<Object> } All of the managers.\n */\nasync function getAllManagers() {\n    const queryResponse = await db.collection('managers').get();\n    const managers = queryResponse.docs.map(snap => snap.data())\n\n    return managers\n}\n\nexport default getAllManagers;","C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\components\\pages\\Users\\Manager\\Budget.js",["515","516","517","518","519","520","521","522","523","524","525"],"C:\\Users\\שחר מימרן\\RBM\\RBM\\src\\firebase\\listenForNewMessages.js",[],{"ruleId":"526","replacedBy":"527"},{"ruleId":"528","replacedBy":"529"},{"ruleId":"530","severity":1,"message":"531","line":6,"column":9,"nodeType":"532","messageId":"533","endLine":6,"endColumn":13},{"ruleId":"530","severity":1,"message":"534","line":7,"column":9,"nodeType":"532","messageId":"533","endLine":7,"endColumn":15},{"ruleId":"535","severity":1,"message":"536","line":98,"column":1,"nodeType":"537","messageId":"538","endLine":98,"endColumn":57},{"ruleId":"539","severity":1,"message":"540","line":98,"column":28,"nodeType":"541","endLine":98,"endColumn":33},{"ruleId":"530","severity":1,"message":"534","line":4,"column":9,"nodeType":"532","messageId":"533","endLine":4,"endColumn":15},{"ruleId":"530","severity":1,"message":"542","line":7,"column":13,"nodeType":"532","messageId":"533","endLine":7,"endColumn":17},{"ruleId":"530","severity":1,"message":"543","line":9,"column":10,"nodeType":"532","messageId":"533","endLine":9,"endColumn":16},{"ruleId":"530","severity":1,"message":"544","line":10,"column":9,"nodeType":"532","messageId":"533","endLine":10,"endColumn":15},{"ruleId":"530","severity":1,"message":"545","line":10,"column":17,"nodeType":"532","messageId":"533","endLine":10,"endColumn":23},{"ruleId":"530","severity":1,"message":"546","line":10,"column":25,"nodeType":"532","messageId":"533","endLine":10,"endColumn":34},{"ruleId":"547","severity":1,"message":"548","line":130,"column":17,"nodeType":"532","messageId":"549","endLine":130,"endColumn":30},{"ruleId":"530","severity":1,"message":"550","line":2,"column":14,"nodeType":"532","messageId":"533","endLine":2,"endColumn":29},{"ruleId":"530","severity":1,"message":"551","line":5,"column":9,"nodeType":"532","messageId":"533","endLine":5,"endColumn":20},{"ruleId":"530","severity":1,"message":"552","line":7,"column":13,"nodeType":"532","messageId":"533","endLine":7,"endColumn":16},{"ruleId":"530","severity":1,"message":"553","line":8,"column":8,"nodeType":"532","messageId":"533","endLine":8,"endColumn":18},{"ruleId":"530","severity":1,"message":"554","line":9,"column":8,"nodeType":"532","messageId":"533","endLine":9,"endColumn":22},{"ruleId":"530","severity":1,"message":"555","line":10,"column":8,"nodeType":"532","messageId":"533","endLine":10,"endColumn":21},{"ruleId":"530","severity":1,"message":"556","line":11,"column":8,"nodeType":"532","messageId":"533","endLine":11,"endColumn":12},{"ruleId":"530","severity":1,"message":"557","line":3,"column":8,"nodeType":"532","messageId":"533","endLine":3,"endColumn":28},{"ruleId":"530","severity":1,"message":"558","line":4,"column":10,"nodeType":"532","messageId":"533","endLine":4,"endColumn":15},{"ruleId":"530","severity":1,"message":"559","line":3,"column":10,"nodeType":"532","messageId":"533","endLine":3,"endColumn":15},{"ruleId":"530","severity":1,"message":"560","line":3,"column":17,"nodeType":"532","messageId":"533","endLine":3,"endColumn":27},{"ruleId":"530","severity":1,"message":"561","line":11,"column":8,"nodeType":"532","messageId":"533","endLine":11,"endColumn":16},{"ruleId":"530","severity":1,"message":"562","line":110,"column":13,"nodeType":"532","messageId":"533","endLine":110,"endColumn":14},{"ruleId":"530","severity":1,"message":"563","line":260,"column":17,"nodeType":"532","messageId":"533","endLine":260,"endColumn":21},{"ruleId":"530","severity":1,"message":"564","line":348,"column":17,"nodeType":"532","messageId":"533","endLine":348,"endColumn":25},{"ruleId":"565","severity":1,"message":"566","line":806,"column":37,"nodeType":"567","endLine":813,"endColumn":39},{"ruleId":"568","severity":1,"message":"569","line":810,"column":52,"nodeType":"570","endLine":810,"endColumn":62},{"ruleId":"530","severity":1,"message":"571","line":2,"column":8,"nodeType":"532","messageId":"533","endLine":2,"endColumn":14},{"ruleId":"530","severity":1,"message":"572","line":11,"column":5,"nodeType":"532","messageId":"533","endLine":11,"endColumn":20},{"ruleId":"530","severity":1,"message":"573","line":13,"column":5,"nodeType":"532","messageId":"533","endLine":13,"endColumn":25},{"ruleId":"530","severity":1,"message":"574","line":432,"column":13,"nodeType":"532","messageId":"533","endLine":432,"endColumn":17},{"ruleId":"530","severity":1,"message":"575","line":44,"column":13,"nodeType":"532","messageId":"533","endLine":44,"endColumn":18},{"ruleId":"530","severity":1,"message":"576","line":47,"column":13,"nodeType":"532","messageId":"533","endLine":47,"endColumn":17},{"ruleId":"530","severity":1,"message":"577","line":56,"column":13,"nodeType":"532","messageId":"533","endLine":56,"endColumn":17},{"ruleId":"530","severity":1,"message":"578","line":62,"column":21,"nodeType":"532","messageId":"533","endLine":62,"endColumn":29},{"ruleId":"579","severity":1,"message":"580","line":63,"column":17,"nodeType":"581","messageId":"582","endLine":70,"endColumn":18},{"ruleId":"579","severity":1,"message":"580","line":75,"column":17,"nodeType":"581","messageId":"582","endLine":88,"endColumn":18},{"ruleId":"530","severity":1,"message":"583","line":94,"column":26,"nodeType":"532","messageId":"533","endLine":94,"endColumn":37},{"ruleId":"584","severity":1,"message":"585","line":194,"column":37,"nodeType":"567","endLine":194,"endColumn":41},{"ruleId":"586","severity":1,"message":"587","line":197,"column":63,"nodeType":"588","messageId":"589","endLine":197,"endColumn":65},{"ruleId":"530","severity":1,"message":"590","line":1,"column":17,"nodeType":"532","messageId":"533","endLine":1,"endColumn":26},{"ruleId":"530","severity":1,"message":"591","line":2,"column":36,"nodeType":"532","messageId":"533","endLine":2,"endColumn":47},{"ruleId":"530","severity":1,"message":"592","line":2,"column":58,"nodeType":"532","messageId":"533","endLine":2,"endColumn":65},{"ruleId":"530","severity":1,"message":"593","line":6,"column":8,"nodeType":"532","messageId":"533","endLine":6,"endColumn":16},{"ruleId":"530","severity":1,"message":"594","line":7,"column":9,"nodeType":"532","messageId":"533","endLine":7,"endColumn":17},{"ruleId":"530","severity":1,"message":"553","line":9,"column":8,"nodeType":"532","messageId":"533","endLine":9,"endColumn":18},{"ruleId":"530","severity":1,"message":"554","line":10,"column":8,"nodeType":"532","messageId":"533","endLine":10,"endColumn":22},{"ruleId":"530","severity":1,"message":"595","line":11,"column":9,"nodeType":"532","messageId":"533","endLine":11,"endColumn":15},{"ruleId":"530","severity":1,"message":"596","line":12,"column":9,"nodeType":"532","messageId":"533","endLine":12,"endColumn":13},{"ruleId":"530","severity":1,"message":"571","line":13,"column":8,"nodeType":"532","messageId":"533","endLine":13,"endColumn":14},{"ruleId":"530","severity":1,"message":"597","line":16,"column":7,"nodeType":"532","messageId":"533","endLine":16,"endColumn":14},{"ruleId":"530","severity":1,"message":"598","line":18,"column":5,"nodeType":"532","messageId":"533","endLine":18,"endColumn":12},{"ruleId":"530","severity":1,"message":"564","line":99,"column":17,"nodeType":"532","messageId":"533","endLine":99,"endColumn":25},{"ruleId":"530","severity":1,"message":"592","line":2,"column":61,"nodeType":"532","messageId":"533","endLine":2,"endColumn":68},{"ruleId":"530","severity":1,"message":"593","line":6,"column":8,"nodeType":"532","messageId":"533","endLine":6,"endColumn":16},{"ruleId":"530","severity":1,"message":"594","line":7,"column":9,"nodeType":"532","messageId":"533","endLine":7,"endColumn":17},{"ruleId":"530","severity":1,"message":"553","line":9,"column":8,"nodeType":"532","messageId":"533","endLine":9,"endColumn":18},{"ruleId":"530","severity":1,"message":"554","line":10,"column":8,"nodeType":"532","messageId":"533","endLine":10,"endColumn":22},{"ruleId":"530","severity":1,"message":"595","line":11,"column":9,"nodeType":"532","messageId":"533","endLine":11,"endColumn":15},{"ruleId":"530","severity":1,"message":"596","line":12,"column":9,"nodeType":"532","messageId":"533","endLine":12,"endColumn":13},{"ruleId":"530","severity":1,"message":"597","line":15,"column":7,"nodeType":"532","messageId":"533","endLine":15,"endColumn":14},{"ruleId":"530","severity":1,"message":"564","line":100,"column":17,"nodeType":"532","messageId":"533","endLine":100,"endColumn":25},{"ruleId":"530","severity":1,"message":"575","line":40,"column":13,"nodeType":"532","messageId":"533","endLine":40,"endColumn":18},{"ruleId":"530","severity":1,"message":"576","line":44,"column":13,"nodeType":"532","messageId":"533","endLine":44,"endColumn":17},{"ruleId":"530","severity":1,"message":"577","line":54,"column":13,"nodeType":"532","messageId":"533","endLine":54,"endColumn":17},{"ruleId":"530","severity":1,"message":"578","line":61,"column":21,"nodeType":"532","messageId":"533","endLine":61,"endColumn":29},{"ruleId":"579","severity":1,"message":"580","line":63,"column":17,"nodeType":"581","messageId":"582","endLine":70,"endColumn":18},{"ruleId":"579","severity":1,"message":"580","line":75,"column":17,"nodeType":"581","messageId":"582","endLine":88,"endColumn":18},{"ruleId":"530","severity":1,"message":"599","line":94,"column":25,"nodeType":"532","messageId":"533","endLine":94,"endColumn":34},{"ruleId":"584","severity":1,"message":"585","line":189,"column":37,"nodeType":"567","endLine":189,"endColumn":41},{"ruleId":"586","severity":1,"message":"587","line":192,"column":63,"nodeType":"588","messageId":"589","endLine":192,"endColumn":65},{"ruleId":"530","severity":1,"message":"600","line":1,"column":16,"nodeType":"532","messageId":"533","endLine":1,"endColumn":24},{"ruleId":"530","severity":1,"message":"559","line":3,"column":10,"nodeType":"532","messageId":"533","endLine":3,"endColumn":15},{"ruleId":"530","severity":1,"message":"560","line":3,"column":17,"nodeType":"532","messageId":"533","endLine":3,"endColumn":27},{"ruleId":"530","severity":1,"message":"561","line":11,"column":8,"nodeType":"532","messageId":"533","endLine":11,"endColumn":16},{"ruleId":"530","severity":1,"message":"601","line":12,"column":8,"nodeType":"532","messageId":"533","endLine":12,"endColumn":23},{"ruleId":"530","severity":1,"message":"562","line":109,"column":13,"nodeType":"532","messageId":"533","endLine":109,"endColumn":14},{"ruleId":"530","severity":1,"message":"563","line":254,"column":17,"nodeType":"532","messageId":"533","endLine":254,"endColumn":21},{"ruleId":"530","severity":1,"message":"564","line":360,"column":17,"nodeType":"532","messageId":"533","endLine":360,"endColumn":25},{"ruleId":"530","severity":1,"message":"602","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":20},{"ruleId":"530","severity":1,"message":"531","line":3,"column":10,"nodeType":"532","messageId":"533","endLine":3,"endColumn":14},{"ruleId":"530","severity":1,"message":"603","line":3,"column":16,"nodeType":"532","messageId":"533","endLine":3,"endColumn":18},{"ruleId":"530","severity":1,"message":"550","line":3,"column":20,"nodeType":"532","messageId":"533","endLine":3,"endColumn":35},{"ruleId":"530","severity":1,"message":"604","line":3,"column":37,"nodeType":"532","messageId":"533","endLine":3,"endColumn":44},{"ruleId":"530","severity":1,"message":"592","line":3,"column":46,"nodeType":"532","messageId":"533","endLine":3,"endColumn":53},{"ruleId":"530","severity":1,"message":"594","line":16,"column":10,"nodeType":"532","messageId":"533","endLine":16,"endColumn":18},{"ruleId":"530","severity":1,"message":"605","line":17,"column":8,"nodeType":"532","messageId":"533","endLine":17,"endColumn":16},{"ruleId":"530","severity":1,"message":"606","line":24,"column":22,"nodeType":"532","messageId":"533","endLine":24,"endColumn":33},{"ruleId":"530","severity":1,"message":"607","line":26,"column":11,"nodeType":"532","messageId":"533","endLine":26,"endColumn":19},{"ruleId":"530","severity":1,"message":"608","line":41,"column":11,"nodeType":"532","messageId":"533","endLine":41,"endColumn":18},{"ruleId":"530","severity":1,"message":"609","line":52,"column":11,"nodeType":"532","messageId":"533","endLine":52,"endColumn":20},{"ruleId":"530","severity":1,"message":"610","line":71,"column":11,"nodeType":"532","messageId":"533","endLine":71,"endColumn":18},{"ruleId":"530","severity":1,"message":"611","line":2,"column":20,"nodeType":"532","messageId":"533","endLine":2,"endColumn":30},{"ruleId":"530","severity":1,"message":"612","line":8,"column":8,"nodeType":"532","messageId":"533","endLine":8,"endColumn":19},{"ruleId":"530","severity":1,"message":"613","line":10,"column":8,"nodeType":"532","messageId":"533","endLine":10,"endColumn":37},{"ruleId":"530","severity":1,"message":"564","line":68,"column":17,"nodeType":"532","messageId":"533","endLine":68,"endColumn":25},{"ruleId":"586","severity":1,"message":"614","line":78,"column":50,"nodeType":"588","messageId":"589","endLine":78,"endColumn":52},{"ruleId":"586","severity":1,"message":"614","line":81,"column":66,"nodeType":"588","messageId":"589","endLine":81,"endColumn":68},{"ruleId":"530","severity":1,"message":"575","line":41,"column":13,"nodeType":"532","messageId":"533","endLine":41,"endColumn":18},{"ruleId":"530","severity":1,"message":"576","line":42,"column":13,"nodeType":"532","messageId":"533","endLine":42,"endColumn":17},{"ruleId":"530","severity":1,"message":"577","line":58,"column":13,"nodeType":"532","messageId":"533","endLine":58,"endColumn":17},{"ruleId":"530","severity":1,"message":"578","line":65,"column":21,"nodeType":"532","messageId":"533","endLine":65,"endColumn":29},{"ruleId":"579","severity":1,"message":"580","line":67,"column":17,"nodeType":"581","messageId":"582","endLine":74,"endColumn":18},{"ruleId":"579","severity":1,"message":"580","line":79,"column":17,"nodeType":"581","messageId":"582","endLine":92,"endColumn":18},{"ruleId":"530","severity":1,"message":"599","line":98,"column":25,"nodeType":"532","messageId":"533","endLine":98,"endColumn":34},{"ruleId":"584","severity":1,"message":"585","line":191,"column":37,"nodeType":"567","endLine":191,"endColumn":41},{"ruleId":"586","severity":1,"message":"587","line":194,"column":63,"nodeType":"588","messageId":"589","endLine":194,"endColumn":65},{"ruleId":"586","severity":1,"message":"614","line":59,"column":41,"nodeType":"588","messageId":"589","endLine":59,"endColumn":43},{"ruleId":"586","severity":1,"message":"614","line":59,"column":82,"nodeType":"588","messageId":"589","endLine":59,"endColumn":84},{"ruleId":"586","severity":1,"message":"614","line":60,"column":49,"nodeType":"588","messageId":"589","endLine":60,"endColumn":51},{"ruleId":"586","severity":1,"message":"614","line":60,"column":85,"nodeType":"588","messageId":"589","endLine":60,"endColumn":87},{"ruleId":"530","severity":1,"message":"615","line":13,"column":8,"nodeType":"532","messageId":"533","endLine":13,"endColumn":20},{"ruleId":"530","severity":1,"message":"616","line":172,"column":19,"nodeType":"532","messageId":"533","endLine":172,"endColumn":23},{"ruleId":"530","severity":1,"message":"617","line":177,"column":19,"nodeType":"532","messageId":"533","endLine":177,"endColumn":26},{"ruleId":"530","severity":1,"message":"618","line":202,"column":24,"nodeType":"532","messageId":"533","endLine":202,"endColumn":26},{"ruleId":"530","severity":1,"message":"619","line":202,"column":27,"nodeType":"532","messageId":"533","endLine":202,"endColumn":30},{"ruleId":"530","severity":1,"message":"620","line":202,"column":31,"nodeType":"532","messageId":"533","endLine":202,"endColumn":34},{"ruleId":"530","severity":1,"message":"621","line":202,"column":35,"nodeType":"532","messageId":"533","endLine":202,"endColumn":37},{"ruleId":"530","severity":1,"message":"622","line":202,"column":38,"nodeType":"532","messageId":"533","endLine":202,"endColumn":41},{"ruleId":"530","severity":1,"message":"623","line":202,"column":42,"nodeType":"532","messageId":"533","endLine":202,"endColumn":45},{"ruleId":"530","severity":1,"message":"624","line":202,"column":46,"nodeType":"532","messageId":"533","endLine":202,"endColumn":48},{"ruleId":"530","severity":1,"message":"625","line":202,"column":49,"nodeType":"532","messageId":"533","endLine":202,"endColumn":52},{"ruleId":"530","severity":1,"message":"626","line":202,"column":53,"nodeType":"532","messageId":"533","endLine":202,"endColumn":56},{"ruleId":"530","severity":1,"message":"627","line":202,"column":57,"nodeType":"532","messageId":"533","endLine":202,"endColumn":59},{"ruleId":"530","severity":1,"message":"628","line":202,"column":60,"nodeType":"532","messageId":"533","endLine":202,"endColumn":63},{"ruleId":"530","severity":1,"message":"629","line":202,"column":64,"nodeType":"532","messageId":"533","endLine":202,"endColumn":67},{"ruleId":"530","severity":1,"message":"630","line":202,"column":68,"nodeType":"532","messageId":"533","endLine":202,"endColumn":71},{"ruleId":"530","severity":1,"message":"631","line":202,"column":72,"nodeType":"532","messageId":"533","endLine":202,"endColumn":76},{"ruleId":"530","severity":1,"message":"632","line":202,"column":77,"nodeType":"532","messageId":"533","endLine":202,"endColumn":81},{"ruleId":"530","severity":1,"message":"616","line":276,"column":19,"nodeType":"532","messageId":"533","endLine":276,"endColumn":23},{"ruleId":"530","severity":1,"message":"617","line":281,"column":19,"nodeType":"532","messageId":"533","endLine":281,"endColumn":26},{"ruleId":"565","severity":1,"message":"566","line":685,"column":25,"nodeType":"567","endLine":685,"endColumn":92},{"ruleId":"565","severity":1,"message":"566","line":707,"column":25,"nodeType":"567","endLine":707,"endColumn":92},{"ruleId":"586","severity":1,"message":"614","line":911,"column":51,"nodeType":"588","messageId":"589","endLine":911,"endColumn":53},{"ruleId":"586","severity":1,"message":"614","line":922,"column":73,"nodeType":"588","messageId":"589","endLine":922,"endColumn":75},{"ruleId":"586","severity":1,"message":"614","line":932,"column":52,"nodeType":"588","messageId":"589","endLine":932,"endColumn":54},{"ruleId":"530","severity":1,"message":"633","line":993,"column":13,"nodeType":"532","messageId":"533","endLine":993,"endColumn":18},{"ruleId":"530","severity":1,"message":"562","line":996,"column":13,"nodeType":"532","messageId":"533","endLine":996,"endColumn":14},{"ruleId":"586","severity":1,"message":"614","line":1004,"column":17,"nodeType":"588","messageId":"589","endLine":1004,"endColumn":19},{"ruleId":"586","severity":1,"message":"614","line":1004,"column":45,"nodeType":"588","messageId":"589","endLine":1004,"endColumn":47},{"ruleId":"586","severity":1,"message":"614","line":1038,"column":21,"nodeType":"588","messageId":"589","endLine":1038,"endColumn":23},{"ruleId":"586","severity":1,"message":"614","line":1038,"column":49,"nodeType":"588","messageId":"589","endLine":1038,"endColumn":51},{"ruleId":"547","severity":1,"message":"634","line":1045,"column":21,"nodeType":"532","messageId":"549","endLine":1045,"endColumn":35},{"ruleId":"530","severity":1,"message":"577","line":1145,"column":13,"nodeType":"532","messageId":"533","endLine":1145,"endColumn":17},{"ruleId":"530","severity":1,"message":"563","line":1182,"column":17,"nodeType":"532","messageId":"533","endLine":1182,"endColumn":21},{"ruleId":"530","severity":1,"message":"602","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":20},{"ruleId":"530","severity":1,"message":"531","line":3,"column":10,"nodeType":"532","messageId":"533","endLine":3,"endColumn":14},{"ruleId":"530","severity":1,"message":"603","line":3,"column":16,"nodeType":"532","messageId":"533","endLine":3,"endColumn":18},{"ruleId":"530","severity":1,"message":"550","line":3,"column":20,"nodeType":"532","messageId":"533","endLine":3,"endColumn":35},{"ruleId":"530","severity":1,"message":"604","line":3,"column":37,"nodeType":"532","messageId":"533","endLine":3,"endColumn":44},{"ruleId":"530","severity":1,"message":"592","line":3,"column":46,"nodeType":"532","messageId":"533","endLine":3,"endColumn":53},{"ruleId":"530","severity":1,"message":"594","line":16,"column":10,"nodeType":"532","messageId":"533","endLine":16,"endColumn":18},{"ruleId":"530","severity":1,"message":"605","line":17,"column":8,"nodeType":"532","messageId":"533","endLine":17,"endColumn":16},{"ruleId":"530","severity":1,"message":"606","line":25,"column":22,"nodeType":"532","messageId":"533","endLine":25,"endColumn":33},{"ruleId":"530","severity":1,"message":"607","line":27,"column":11,"nodeType":"532","messageId":"533","endLine":27,"endColumn":19},{"ruleId":"530","severity":1,"message":"608","line":42,"column":11,"nodeType":"532","messageId":"533","endLine":42,"endColumn":18},{"ruleId":"530","severity":1,"message":"609","line":53,"column":11,"nodeType":"532","messageId":"533","endLine":53,"endColumn":20},{"ruleId":"530","severity":1,"message":"610","line":72,"column":11,"nodeType":"532","messageId":"533","endLine":72,"endColumn":18},{"ruleId":"530","severity":1,"message":"550","line":2,"column":20,"nodeType":"532","messageId":"533","endLine":2,"endColumn":35},{"ruleId":"530","severity":1,"message":"591","line":2,"column":37,"nodeType":"532","messageId":"533","endLine":2,"endColumn":48},{"ruleId":"530","severity":1,"message":"592","line":2,"column":59,"nodeType":"532","messageId":"533","endLine":2,"endColumn":66},{"ruleId":"530","severity":1,"message":"564","line":71,"column":17,"nodeType":"532","messageId":"533","endLine":71,"endColumn":25},{"ruleId":"530","severity":1,"message":"531","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":14},{"ruleId":"530","severity":1,"message":"593","line":3,"column":8,"nodeType":"532","messageId":"533","endLine":3,"endColumn":16},{"ruleId":"530","severity":1,"message":"635","line":1,"column":20,"nodeType":"532","messageId":"533","endLine":1,"endColumn":26},{"ruleId":"530","severity":1,"message":"636","line":2,"column":24,"nodeType":"532","messageId":"533","endLine":2,"endColumn":38},{"ruleId":"530","severity":1,"message":"637","line":2,"column":51,"nodeType":"532","messageId":"533","endLine":2,"endColumn":64},{"ruleId":"530","severity":1,"message":"638","line":8,"column":8,"nodeType":"532","messageId":"533","endLine":8,"endColumn":17},{"ruleId":"530","severity":1,"message":"639","line":9,"column":8,"nodeType":"532","messageId":"533","endLine":9,"endColumn":14},{"ruleId":"530","severity":1,"message":"640","line":10,"column":8,"nodeType":"532","messageId":"533","endLine":10,"endColumn":21},{"ruleId":"530","severity":1,"message":"641","line":11,"column":8,"nodeType":"532","messageId":"533","endLine":11,"endColumn":21},{"ruleId":"530","severity":1,"message":"642","line":12,"column":8,"nodeType":"532","messageId":"533","endLine":12,"endColumn":25},{"ruleId":"530","severity":1,"message":"643","line":13,"column":8,"nodeType":"532","messageId":"533","endLine":13,"endColumn":19},{"ruleId":"530","severity":1,"message":"644","line":21,"column":8,"nodeType":"532","messageId":"533","endLine":21,"endColumn":25},{"ruleId":"530","severity":1,"message":"645","line":169,"column":35,"nodeType":"532","messageId":"533","endLine":169,"endColumn":40},{"ruleId":"530","severity":1,"message":"646","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":20},{"ruleId":"530","severity":1,"message":"647","line":1,"column":22,"nodeType":"532","messageId":"533","endLine":1,"endColumn":36},{"ruleId":"530","severity":1,"message":"561","line":3,"column":10,"nodeType":"532","messageId":"533","endLine":3,"endColumn":18},{"ruleId":"530","severity":1,"message":"648","line":3,"column":39,"nodeType":"532","messageId":"533","endLine":3,"endColumn":47},{"ruleId":"530","severity":1,"message":"649","line":37,"column":10,"nodeType":"532","messageId":"533","endLine":37,"endColumn":35},{"ruleId":"530","severity":1,"message":"650","line":54,"column":10,"nodeType":"532","messageId":"533","endLine":54,"endColumn":31},{"ruleId":"586","severity":1,"message":"614","line":90,"column":37,"nodeType":"588","messageId":"589","endLine":90,"endColumn":39},{"ruleId":"586","severity":1,"message":"614","line":112,"column":25,"nodeType":"588","messageId":"589","endLine":112,"endColumn":27},{"ruleId":"651","severity":1,"message":"652","line":134,"column":15,"nodeType":"653","messageId":"654","endLine":134,"endColumn":26},{"ruleId":"651","severity":1,"message":"652","line":170,"column":15,"nodeType":"653","messageId":"654","endLine":170,"endColumn":26},{"ruleId":"651","severity":1,"message":"652","line":184,"column":19,"nodeType":"653","messageId":"654","endLine":184,"endColumn":30},{"ruleId":"530","severity":1,"message":"655","line":1,"column":17,"nodeType":"532","messageId":"533","endLine":1,"endColumn":26},{"ruleId":"530","severity":1,"message":"635","line":1,"column":38,"nodeType":"532","messageId":"533","endLine":1,"endColumn":44},{"ruleId":"530","severity":1,"message":"656","line":2,"column":20,"nodeType":"532","messageId":"533","endLine":2,"endColumn":24},{"ruleId":"530","severity":1,"message":"657","line":4,"column":8,"nodeType":"532","messageId":"533","endLine":4,"endColumn":24},{"ruleId":"530","severity":1,"message":"658","line":6,"column":8,"nodeType":"532","messageId":"533","endLine":6,"endColumn":22},{"ruleId":"586","severity":1,"message":"614","line":18,"column":38,"nodeType":"588","messageId":"589","endLine":18,"endColumn":40},{"ruleId":"530","severity":1,"message":"659","line":1,"column":8,"nodeType":"532","messageId":"533","endLine":1,"endColumn":13},{"ruleId":"530","severity":1,"message":"660","line":2,"column":10,"nodeType":"532","messageId":"533","endLine":2,"endColumn":22},{"ruleId":"661","severity":1,"message":"662","line":32,"column":9,"nodeType":"588","messageId":"663","endLine":32,"endColumn":19},{"ruleId":"586","severity":1,"message":"614","line":32,"column":13,"nodeType":"588","messageId":"589","endLine":32,"endColumn":15},{"ruleId":"586","severity":1,"message":"614","line":32,"column":30,"nodeType":"588","messageId":"589","endLine":32,"endColumn":32},{"ruleId":"664","severity":1,"message":"665","line":42,"column":15,"nodeType":"666","endLine":44,"endColumn":6},{"ruleId":"586","severity":1,"message":"614","line":51,"column":136,"nodeType":"588","messageId":"589","endLine":51,"endColumn":138},{"ruleId":"586","severity":1,"message":"614","line":14,"column":32,"nodeType":"588","messageId":"589","endLine":14,"endColumn":34},{"ruleId":"530","severity":1,"message":"657","line":1,"column":8,"nodeType":"532","messageId":"533","endLine":1,"endColumn":24},{"ruleId":"667","severity":1,"message":"668","line":48,"column":26,"nodeType":"666","messageId":"669","endLine":48,"endColumn":61},{"ruleId":"586","severity":1,"message":"614","line":62,"column":21,"nodeType":"588","messageId":"589","endLine":62,"endColumn":23},{"ruleId":"530","severity":1,"message":"659","line":1,"column":8,"nodeType":"532","messageId":"533","endLine":1,"endColumn":13},{"ruleId":"530","severity":1,"message":"670","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":12},{"ruleId":"530","severity":1,"message":"657","line":3,"column":8,"nodeType":"532","messageId":"533","endLine":3,"endColumn":24},{"ruleId":"586","severity":1,"message":"614","line":17,"column":35,"nodeType":"588","messageId":"589","endLine":17,"endColumn":37},{"ruleId":"586","severity":1,"message":"614","line":70,"column":35,"nodeType":"588","messageId":"589","endLine":70,"endColumn":37},{"ruleId":"586","severity":1,"message":"614","line":89,"column":22,"nodeType":"588","messageId":"589","endLine":89,"endColumn":24},{"ruleId":"586","severity":1,"message":"614","line":102,"column":35,"nodeType":"588","messageId":"589","endLine":102,"endColumn":37},{"ruleId":"586","severity":1,"message":"614","line":18,"column":63,"nodeType":"588","messageId":"589","endLine":18,"endColumn":65},{"ruleId":"530","severity":1,"message":"595","line":7,"column":10,"nodeType":"532","messageId":"533","endLine":7,"endColumn":16},{"ruleId":"530","severity":1,"message":"635","line":10,"column":10,"nodeType":"532","messageId":"533","endLine":10,"endColumn":16},{"ruleId":"530","severity":1,"message":"671","line":11,"column":10,"nodeType":"532","messageId":"533","endLine":11,"endColumn":25},{"ruleId":"530","severity":1,"message":"616","line":160,"column":19,"nodeType":"532","messageId":"533","endLine":160,"endColumn":23},{"ruleId":"530","severity":1,"message":"617","line":165,"column":19,"nodeType":"532","messageId":"533","endLine":165,"endColumn":26},{"ruleId":"530","severity":1,"message":"618","line":189,"column":27,"nodeType":"532","messageId":"533","endLine":189,"endColumn":29},{"ruleId":"530","severity":1,"message":"619","line":189,"column":31,"nodeType":"532","messageId":"533","endLine":189,"endColumn":34},{"ruleId":"530","severity":1,"message":"620","line":189,"column":36,"nodeType":"532","messageId":"533","endLine":189,"endColumn":39},{"ruleId":"530","severity":1,"message":"621","line":189,"column":41,"nodeType":"532","messageId":"533","endLine":189,"endColumn":43},{"ruleId":"530","severity":1,"message":"622","line":189,"column":45,"nodeType":"532","messageId":"533","endLine":189,"endColumn":48},{"ruleId":"530","severity":1,"message":"623","line":189,"column":50,"nodeType":"532","messageId":"533","endLine":189,"endColumn":53},{"ruleId":"530","severity":1,"message":"624","line":189,"column":55,"nodeType":"532","messageId":"533","endLine":189,"endColumn":57},{"ruleId":"530","severity":1,"message":"625","line":189,"column":59,"nodeType":"532","messageId":"533","endLine":189,"endColumn":62},{"ruleId":"530","severity":1,"message":"626","line":189,"column":64,"nodeType":"532","messageId":"533","endLine":189,"endColumn":67},{"ruleId":"530","severity":1,"message":"627","line":189,"column":69,"nodeType":"532","messageId":"533","endLine":189,"endColumn":71},{"ruleId":"530","severity":1,"message":"628","line":189,"column":73,"nodeType":"532","messageId":"533","endLine":189,"endColumn":76},{"ruleId":"530","severity":1,"message":"629","line":189,"column":78,"nodeType":"532","messageId":"533","endLine":189,"endColumn":81},{"ruleId":"530","severity":1,"message":"630","line":189,"column":83,"nodeType":"532","messageId":"533","endLine":189,"endColumn":86},{"ruleId":"530","severity":1,"message":"631","line":189,"column":88,"nodeType":"532","messageId":"533","endLine":189,"endColumn":92},{"ruleId":"530","severity":1,"message":"632","line":189,"column":94,"nodeType":"532","messageId":"533","endLine":189,"endColumn":98},{"ruleId":"530","severity":1,"message":"616","line":279,"column":19,"nodeType":"532","messageId":"533","endLine":279,"endColumn":23},{"ruleId":"530","severity":1,"message":"617","line":284,"column":19,"nodeType":"532","messageId":"533","endLine":284,"endColumn":26},{"ruleId":"530","severity":1,"message":"672","line":481,"column":15,"nodeType":"532","messageId":"533","endLine":481,"endColumn":19},{"ruleId":"673","severity":1,"message":"674","line":490,"column":40,"nodeType":"567","endLine":490,"endColumn":52},{"ruleId":"673","severity":1,"message":"674","line":531,"column":52,"nodeType":"567","endLine":531,"endColumn":64},{"ruleId":"586","severity":1,"message":"614","line":551,"column":53,"nodeType":"588","messageId":"589","endLine":551,"endColumn":55},{"ruleId":"586","severity":1,"message":"614","line":561,"column":74,"nodeType":"588","messageId":"589","endLine":561,"endColumn":76},{"ruleId":"586","severity":1,"message":"614","line":571,"column":53,"nodeType":"588","messageId":"589","endLine":571,"endColumn":55},{"ruleId":"530","severity":1,"message":"633","line":622,"column":13,"nodeType":"532","messageId":"533","endLine":622,"endColumn":18},{"ruleId":"530","severity":1,"message":"562","line":625,"column":13,"nodeType":"532","messageId":"533","endLine":625,"endColumn":14},{"ruleId":"586","severity":1,"message":"614","line":627,"column":18,"nodeType":"588","messageId":"589","endLine":627,"endColumn":20},{"ruleId":"586","severity":1,"message":"614","line":627,"column":50,"nodeType":"588","messageId":"589","endLine":627,"endColumn":52},{"ruleId":"586","severity":1,"message":"614","line":652,"column":23,"nodeType":"588","messageId":"589","endLine":652,"endColumn":25},{"ruleId":"586","severity":1,"message":"614","line":652,"column":55,"nodeType":"588","messageId":"589","endLine":652,"endColumn":57},{"ruleId":"547","severity":1,"message":"634","line":656,"column":21,"nodeType":"532","messageId":"549","endLine":656,"endColumn":35},{"ruleId":"530","severity":1,"message":"577","line":744,"column":13,"nodeType":"532","messageId":"533","endLine":744,"endColumn":17},{"ruleId":"530","severity":1,"message":"563","line":780,"column":17,"nodeType":"532","messageId":"533","endLine":780,"endColumn":21},{"ruleId":"530","severity":1,"message":"675","line":2,"column":10,"nodeType":"532","messageId":"533","endLine":2,"endColumn":27},{"ruleId":"530","severity":1,"message":"550","line":2,"column":19,"nodeType":"532","messageId":"533","endLine":2,"endColumn":34},{"ruleId":"530","severity":1,"message":"591","line":2,"column":36,"nodeType":"532","messageId":"533","endLine":2,"endColumn":47},{"ruleId":"530","severity":1,"message":"592","line":2,"column":58,"nodeType":"532","messageId":"533","endLine":2,"endColumn":65},{"ruleId":"530","severity":1,"message":"556","line":4,"column":8,"nodeType":"532","messageId":"533","endLine":4,"endColumn":12},{"ruleId":"530","severity":1,"message":"593","line":6,"column":8,"nodeType":"532","messageId":"533","endLine":6,"endColumn":16},{"ruleId":"530","severity":1,"message":"594","line":7,"column":9,"nodeType":"532","messageId":"533","endLine":7,"endColumn":17},{"ruleId":"530","severity":1,"message":"595","line":8,"column":9,"nodeType":"532","messageId":"533","endLine":8,"endColumn":15},{"ruleId":"530","severity":1,"message":"596","line":9,"column":9,"nodeType":"532","messageId":"533","endLine":9,"endColumn":13},{"ruleId":"530","severity":1,"message":"571","line":10,"column":8,"nodeType":"532","messageId":"533","endLine":10,"endColumn":14},{"ruleId":"530","severity":1,"message":"597","line":14,"column":7,"nodeType":"532","messageId":"533","endLine":14,"endColumn":14},{"ruleId":"530","severity":1,"message":"564","line":78,"column":17,"nodeType":"532","messageId":"533","endLine":78,"endColumn":25},"no-native-reassign",["676"],"no-negated-in-lhs",["677"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'docx' is defined but never used.","'saveAs' is defined but never used.","'Footer' is defined but never used.","'Header' is defined but never used.","'Paragraph' is defined but never used.","no-redeclare","'updateStudent' is already defined.","redeclared","'GetFormDownload' is defined but never used.","'useDropzone' is defined but never used.","'url' is defined but never used.","'MyDropzone' is defined but never used.","'AcceptMaxFiles' is defined but never used.","'DropzoneFiles' is defined but never used.","'Grid' is defined but never used.","'listenForNewMessages' is defined but never used.","'Badge' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'ReactDOM' is defined but never used.","'e' is assigned a value but never used.","'name' is assigned a value but never used.","'teamName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Select' is defined but never used.","'studentsOptions' is assigned a value but never used.","'emptyStudentsOptions' is assigned a value but never used.","'team' is assigned a value but never used.","'nameR' is assigned a value but never used.","'date' is assigned a value but never used.","'path' is assigned a value but never used.","'progress' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'researcher1' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Component' is defined but never used.","'getPathData' is defined but never used.","'signOut' is defined but never used.","'firebase' is defined but never used.","'NextPage' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'options' is assigned a value but never used.","'csvData' is assigned a value but never used.","'formGuide' is assigned a value but never used.","'Fragment' is defined but never used.","'SignatureCanvas' is defined but never used.","'ChatEngine' is defined but never used.","'db' is defined but never used.","'getUser' is defined but never used.","'Dropzone' is defined but never used.","'setDarkMode' is assigned a value but never used.","'MoonIcon' is assigned a value but never used.","'SunIcon' is assigned a value but never used.","'brandLogo' is assigned a value but never used.","'signOut' is assigned a value but never used.","'getManager' is defined but never used.","'getAllUsers' is defined but never used.","'getManagerOfCurrentResearcher' is defined but never used.","Expected '===' and instead saw '=='.","'ReactToPrint' is defined but never used.","'data' is assigned a value but never used.","'columns' is assigned a value but never used.","'q6' is defined but never used.","'q60' is defined but never used.","'q61' is defined but never used.","'q7' is defined but never used.","'q70' is defined but never used.","'q71' is defined but never used.","'q8' is defined but never used.","'q80' is defined but never used.","'q81' is defined but never used.","'q9' is defined but never used.","'q90' is defined but never used.","'q91' is defined but never used.","'q10' is defined but never used.","'q100' is defined but never used.","'q101' is defined but never used.","'user1' is assigned a value but never used.","'formResearcher' is already defined.","'useRef' is defined but never used.","'buildSingleRow' is defined but never used.","'convertArrays' is defined but never used.","'TextField' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'ProgressBarDialog' is defined but never used.","'state' is assigned a value but never used.","'TextEditor' is defined but never used.","'ValueFormatter' is defined but never used.","'useState' is defined but never used.","'transformRowToDataGridRow' is defined but never used.","'convertXlsxStyleToCss' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'useEffect' is defined but never used.","'Cell' is defined but never used.","'SpreadsheetState' is defined but never used.","'setStyleOfCell' is defined but never used.","'React' is defined but never used.","'evaluateNode' is defined but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs","'ro' is defined but never used.","'useReactToPrint' is defined but never used.","'Data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'getResearcherData' is defined but never used.","no-global-assign","no-unsafe-negation"]